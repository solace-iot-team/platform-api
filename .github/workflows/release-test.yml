# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

name: release-test
on:
  # for testing
  workflow_dispatch:
  # # production
  schedule:
    - cron: '0 6 * * THU'
    # - cron: '0 6 * * *'
env:
  DEBUG_FLAG: ${{ true }}
  # DEBUG_FLAG: ${{ false }}
  RELEASE_TEST_DIR: "release/test"
  RELEASE_TEST_RUNNER_OUTPUT_DIR: "release/test/tmp"
  RELEASE_TEST_OUTPUT_NAME: "platform-api-release-test"
jobs:
  release_tests:
    runs-on: ubuntu-22.04
    strategy:
      max-parallel: 1
      matrix:
        node: [ '12', '14' ]
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke' && github.actor != '195858'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - uses: oprypin/find-latest-tag@v1
        with:
          repository: solace-iot-team/platform-api
          releases-only: true
        id: platform_api_release

      - run: |
          echo "platform api release version: ${{ steps.platform_api_release.outputs.tag }}"

      - name: Checkout Latest Release
        uses: actions/checkout@v2
        with:
          ref: ${{ steps.platform_api_release.outputs.tag }}
          # ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo ">>> environment: TEST_* "
          env | grep TEST

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: env after install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo "docker --version"; docker --version
          echo "docker-compose --version"; docker-compose --version

      - name: Run Tests
        run: |
          export APIM_RELEASE_TEST_SOLACE_CLOUD_URL=${{ secrets.SOLACE_CLOUD_URL }}
          export APIM_RELEASE_TEST_SOLACE_CLOUD_TOKEN=${{ secrets.SOLACE_CLOUD_TOKEN }}
          export APIM_RELEASE_TEST_SOLACE_EVENT_PORTAL_URL=${{ secrets.SOLACE_EVENT_PORTAL_URL }}
          export APIM_RELEASE_TEST_SOLACE_EVENT_PORTAL_TOKEN=${{ secrets.SOLACE_EVENT_PORTAL_TOKEN }}""
          export APIM_RELEASE_TEST_PLATFORM_ADMIN_USER=${{ secrets.PLATFORM_ADMIN_USER }}
          export APIM_RELEASE_TEST_PLATFORM_ADMIN_PASSWORD=${{ secrets.PLATFORM_ADMIN_PASSWORD }}
          export APIM_SOLACE_PLATFORM_API_PROJECT_HOME="$GITHUB_WORKSPACE"
          cd "$APIM_SOLACE_PLATFORM_API_PROJECT_HOME/${RELEASE_TEST_DIR}"
          ./run.sh

      - name: Archive logs
        if: ${{ (failure() && !cancelled()) || (always() && (github.event_name=='workflow_dispatch' || env.DEBUG_FLAG=='true') ) }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_TEST_OUTPUT_NAME }}
          path: ${{ github.workspace }}/${{ env.RELEASE_TEST_RUNNER_OUTPUT_DIR }}
          if-no-files-found: error

###
# The End.
