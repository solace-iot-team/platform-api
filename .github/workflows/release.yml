
name: release
on:
  # for testing
  workflow_dispatch:

  # for production
  release:
    types: [created]

env:
  DEBUG_FLAG: ${{ true }}
  # DEBUG_FLAG: ${{ false }}
  RELEASE_PLATFORM_DIR: "release"
  RELEASE_RUNNER_OUTPUT_DIR: "release/tmp"
  RELEASE_OUTPUT_NAME: "platform-api-release"

jobs:
  release:
    runs-on: ubuntu-22.04
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke' && github.actor != '195858'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo ">>> environment: RELEASE_* "
          env | grep RELEASE

      - uses: actions/setup-node@v2
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: env after install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo "docker --version"; docker --version
          echo "docker-compose --version"; docker-compose --version

      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Release
        run: |
          export NODE_AUTH_TOKEN=${{ secrets.NPM_TOKEN }}
          export APIM_SOLACE_PLATFORM_API_PROJECT_HOME="$GITHUB_WORKSPACE"
          cd "$APIM_SOLACE_PLATFORM_API_PROJECT_HOME/${RELEASE_PLATFORM_DIR}"
          ./release.sh

      - name: Archive logs
        if: ${{ (failure() && !cancelled()) || (always() && (github.event_name=='workflow_dispatch' || env.DEBUG_FLAG=='true') ) }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.RELEASE_OUTPUT_NAME }}
          path: ${{ github.workspace }}/${{ env.RELEASE_RUNNER_OUTPUT_DIR }}
          if-no-files-found: error
###
# The End.
