/* eslint-disable */

import type { AboutApiResponse } from '../models/AboutApiResponse';
import type { AboutResponse } from '../models/AboutResponse';
import type { AboutUserMsgVpnResponse } from '../models/AboutUserMsgVpnResponse';
import type { AboutUserMsgVpnsResponse } from '../models/AboutUserMsgVpnsResponse';
import type { AboutUserResponse } from '../models/AboutUserResponse';
import type { Broker } from '../models/Broker';
import type { BrokerResponse } from '../models/BrokerResponse';
import type { CertAuthoritiesResponse } from '../models/CertAuthoritiesResponse';
import type { CertAuthority } from '../models/CertAuthority';
import type { CertAuthorityOcspTlsTrustedCommonName } from '../models/CertAuthorityOcspTlsTrustedCommonName';
import type { CertAuthorityOcspTlsTrustedCommonNameResponse } from '../models/CertAuthorityOcspTlsTrustedCommonNameResponse';
import type { CertAuthorityOcspTlsTrustedCommonNamesResponse } from '../models/CertAuthorityOcspTlsTrustedCommonNamesResponse';
import type { CertAuthorityResponse } from '../models/CertAuthorityResponse';
import type { ClientCertAuthoritiesResponse } from '../models/ClientCertAuthoritiesResponse';
import type { ClientCertAuthority } from '../models/ClientCertAuthority';
import type { ClientCertAuthorityOcspTlsTrustedCommonName } from '../models/ClientCertAuthorityOcspTlsTrustedCommonName';
import type { ClientCertAuthorityOcspTlsTrustedCommonNameResponse } from '../models/ClientCertAuthorityOcspTlsTrustedCommonNameResponse';
import type { ClientCertAuthorityOcspTlsTrustedCommonNamesResponse } from '../models/ClientCertAuthorityOcspTlsTrustedCommonNamesResponse';
import type { ClientCertAuthorityResponse } from '../models/ClientCertAuthorityResponse';
import type { DmrCluster } from '../models/DmrCluster';
import type { DmrClusterCertMatchingRule } from '../models/DmrClusterCertMatchingRule';
import type { DmrClusterCertMatchingRuleAttributeFilter } from '../models/DmrClusterCertMatchingRuleAttributeFilter';
import type { DmrClusterCertMatchingRuleAttributeFilterResponse } from '../models/DmrClusterCertMatchingRuleAttributeFilterResponse';
import type { DmrClusterCertMatchingRuleAttributeFiltersResponse } from '../models/DmrClusterCertMatchingRuleAttributeFiltersResponse';
import type { DmrClusterCertMatchingRuleCondition } from '../models/DmrClusterCertMatchingRuleCondition';
import type { DmrClusterCertMatchingRuleConditionResponse } from '../models/DmrClusterCertMatchingRuleConditionResponse';
import type { DmrClusterCertMatchingRuleConditionsResponse } from '../models/DmrClusterCertMatchingRuleConditionsResponse';
import type { DmrClusterCertMatchingRuleResponse } from '../models/DmrClusterCertMatchingRuleResponse';
import type { DmrClusterCertMatchingRulesResponse } from '../models/DmrClusterCertMatchingRulesResponse';
import type { DmrClusterLink } from '../models/DmrClusterLink';
import type { DmrClusterLinkAttribute } from '../models/DmrClusterLinkAttribute';
import type { DmrClusterLinkAttributeResponse } from '../models/DmrClusterLinkAttributeResponse';
import type { DmrClusterLinkAttributesResponse } from '../models/DmrClusterLinkAttributesResponse';
import type { DmrClusterLinkRemoteAddress } from '../models/DmrClusterLinkRemoteAddress';
import type { DmrClusterLinkRemoteAddressesResponse } from '../models/DmrClusterLinkRemoteAddressesResponse';
import type { DmrClusterLinkRemoteAddressResponse } from '../models/DmrClusterLinkRemoteAddressResponse';
import type { DmrClusterLinkResponse } from '../models/DmrClusterLinkResponse';
import type { DmrClusterLinksResponse } from '../models/DmrClusterLinksResponse';
import type { DmrClusterLinkTlsTrustedCommonName } from '../models/DmrClusterLinkTlsTrustedCommonName';
import type { DmrClusterLinkTlsTrustedCommonNameResponse } from '../models/DmrClusterLinkTlsTrustedCommonNameResponse';
import type { DmrClusterLinkTlsTrustedCommonNamesResponse } from '../models/DmrClusterLinkTlsTrustedCommonNamesResponse';
import type { DmrClusterResponse } from '../models/DmrClusterResponse';
import type { DmrClustersResponse } from '../models/DmrClustersResponse';
import type { DomainCertAuthoritiesResponse } from '../models/DomainCertAuthoritiesResponse';
import type { DomainCertAuthority } from '../models/DomainCertAuthority';
import type { DomainCertAuthorityResponse } from '../models/DomainCertAuthorityResponse';
import type { MsgVpn } from '../models/MsgVpn';
import type { MsgVpnAclProfile } from '../models/MsgVpnAclProfile';
import type { MsgVpnAclProfileClientConnectException } from '../models/MsgVpnAclProfileClientConnectException';
import type { MsgVpnAclProfileClientConnectExceptionResponse } from '../models/MsgVpnAclProfileClientConnectExceptionResponse';
import type { MsgVpnAclProfileClientConnectExceptionsResponse } from '../models/MsgVpnAclProfileClientConnectExceptionsResponse';
import type { MsgVpnAclProfilePublishException } from '../models/MsgVpnAclProfilePublishException';
import type { MsgVpnAclProfilePublishExceptionResponse } from '../models/MsgVpnAclProfilePublishExceptionResponse';
import type { MsgVpnAclProfilePublishExceptionsResponse } from '../models/MsgVpnAclProfilePublishExceptionsResponse';
import type { MsgVpnAclProfilePublishTopicException } from '../models/MsgVpnAclProfilePublishTopicException';
import type { MsgVpnAclProfilePublishTopicExceptionResponse } from '../models/MsgVpnAclProfilePublishTopicExceptionResponse';
import type { MsgVpnAclProfilePublishTopicExceptionsResponse } from '../models/MsgVpnAclProfilePublishTopicExceptionsResponse';
import type { MsgVpnAclProfileResponse } from '../models/MsgVpnAclProfileResponse';
import type { MsgVpnAclProfilesResponse } from '../models/MsgVpnAclProfilesResponse';
import type { MsgVpnAclProfileSubscribeException } from '../models/MsgVpnAclProfileSubscribeException';
import type { MsgVpnAclProfileSubscribeExceptionResponse } from '../models/MsgVpnAclProfileSubscribeExceptionResponse';
import type { MsgVpnAclProfileSubscribeExceptionsResponse } from '../models/MsgVpnAclProfileSubscribeExceptionsResponse';
import type { MsgVpnAclProfileSubscribeShareNameException } from '../models/MsgVpnAclProfileSubscribeShareNameException';
import type { MsgVpnAclProfileSubscribeShareNameExceptionResponse } from '../models/MsgVpnAclProfileSubscribeShareNameExceptionResponse';
import type { MsgVpnAclProfileSubscribeShareNameExceptionsResponse } from '../models/MsgVpnAclProfileSubscribeShareNameExceptionsResponse';
import type { MsgVpnAclProfileSubscribeTopicException } from '../models/MsgVpnAclProfileSubscribeTopicException';
import type { MsgVpnAclProfileSubscribeTopicExceptionResponse } from '../models/MsgVpnAclProfileSubscribeTopicExceptionResponse';
import type { MsgVpnAclProfileSubscribeTopicExceptionsResponse } from '../models/MsgVpnAclProfileSubscribeTopicExceptionsResponse';
import type { MsgVpnAuthenticationOauthProfile } from '../models/MsgVpnAuthenticationOauthProfile';
import type { MsgVpnAuthenticationOauthProfileClientRequiredClaim } from '../models/MsgVpnAuthenticationOauthProfileClientRequiredClaim';
import type { MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse } from '../models/MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse';
import type { MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse } from '../models/MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse';
import type { MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim } from '../models/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim';
import type { MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse } from '../models/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse';
import type { MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse } from '../models/MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse';
import type { MsgVpnAuthenticationOauthProfileResponse } from '../models/MsgVpnAuthenticationOauthProfileResponse';
import type { MsgVpnAuthenticationOauthProfilesResponse } from '../models/MsgVpnAuthenticationOauthProfilesResponse';
import type { MsgVpnAuthenticationOauthProvider } from '../models/MsgVpnAuthenticationOauthProvider';
import type { MsgVpnAuthenticationOauthProviderResponse } from '../models/MsgVpnAuthenticationOauthProviderResponse';
import type { MsgVpnAuthenticationOauthProvidersResponse } from '../models/MsgVpnAuthenticationOauthProvidersResponse';
import type { MsgVpnAuthorizationGroup } from '../models/MsgVpnAuthorizationGroup';
import type { MsgVpnAuthorizationGroupResponse } from '../models/MsgVpnAuthorizationGroupResponse';
import type { MsgVpnAuthorizationGroupsResponse } from '../models/MsgVpnAuthorizationGroupsResponse';
import type { MsgVpnBridge } from '../models/MsgVpnBridge';
import type { MsgVpnBridgeRemoteMsgVpn } from '../models/MsgVpnBridgeRemoteMsgVpn';
import type { MsgVpnBridgeRemoteMsgVpnResponse } from '../models/MsgVpnBridgeRemoteMsgVpnResponse';
import type { MsgVpnBridgeRemoteMsgVpnsResponse } from '../models/MsgVpnBridgeRemoteMsgVpnsResponse';
import type { MsgVpnBridgeRemoteSubscription } from '../models/MsgVpnBridgeRemoteSubscription';
import type { MsgVpnBridgeRemoteSubscriptionResponse } from '../models/MsgVpnBridgeRemoteSubscriptionResponse';
import type { MsgVpnBridgeRemoteSubscriptionsResponse } from '../models/MsgVpnBridgeRemoteSubscriptionsResponse';
import type { MsgVpnBridgeResponse } from '../models/MsgVpnBridgeResponse';
import type { MsgVpnBridgesResponse } from '../models/MsgVpnBridgesResponse';
import type { MsgVpnBridgeTlsTrustedCommonName } from '../models/MsgVpnBridgeTlsTrustedCommonName';
import type { MsgVpnBridgeTlsTrustedCommonNameResponse } from '../models/MsgVpnBridgeTlsTrustedCommonNameResponse';
import type { MsgVpnBridgeTlsTrustedCommonNamesResponse } from '../models/MsgVpnBridgeTlsTrustedCommonNamesResponse';
import type { MsgVpnCertMatchingRule } from '../models/MsgVpnCertMatchingRule';
import type { MsgVpnCertMatchingRuleAttributeFilter } from '../models/MsgVpnCertMatchingRuleAttributeFilter';
import type { MsgVpnCertMatchingRuleAttributeFilterResponse } from '../models/MsgVpnCertMatchingRuleAttributeFilterResponse';
import type { MsgVpnCertMatchingRuleAttributeFiltersResponse } from '../models/MsgVpnCertMatchingRuleAttributeFiltersResponse';
import type { MsgVpnCertMatchingRuleCondition } from '../models/MsgVpnCertMatchingRuleCondition';
import type { MsgVpnCertMatchingRuleConditionResponse } from '../models/MsgVpnCertMatchingRuleConditionResponse';
import type { MsgVpnCertMatchingRuleConditionsResponse } from '../models/MsgVpnCertMatchingRuleConditionsResponse';
import type { MsgVpnCertMatchingRuleResponse } from '../models/MsgVpnCertMatchingRuleResponse';
import type { MsgVpnCertMatchingRulesResponse } from '../models/MsgVpnCertMatchingRulesResponse';
import type { MsgVpnClientProfile } from '../models/MsgVpnClientProfile';
import type { MsgVpnClientProfileResponse } from '../models/MsgVpnClientProfileResponse';
import type { MsgVpnClientProfilesResponse } from '../models/MsgVpnClientProfilesResponse';
import type { MsgVpnClientUsername } from '../models/MsgVpnClientUsername';
import type { MsgVpnClientUsernameAttribute } from '../models/MsgVpnClientUsernameAttribute';
import type { MsgVpnClientUsernameAttributeResponse } from '../models/MsgVpnClientUsernameAttributeResponse';
import type { MsgVpnClientUsernameAttributesResponse } from '../models/MsgVpnClientUsernameAttributesResponse';
import type { MsgVpnClientUsernameResponse } from '../models/MsgVpnClientUsernameResponse';
import type { MsgVpnClientUsernamesResponse } from '../models/MsgVpnClientUsernamesResponse';
import type { MsgVpnDistributedCache } from '../models/MsgVpnDistributedCache';
import type { MsgVpnDistributedCacheCluster } from '../models/MsgVpnDistributedCacheCluster';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeCluster } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeCluster';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse';
import type { MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse } from '../models/MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse';
import type { MsgVpnDistributedCacheClusterInstance } from '../models/MsgVpnDistributedCacheClusterInstance';
import type { MsgVpnDistributedCacheClusterInstanceResponse } from '../models/MsgVpnDistributedCacheClusterInstanceResponse';
import type { MsgVpnDistributedCacheClusterInstancesResponse } from '../models/MsgVpnDistributedCacheClusterInstancesResponse';
import type { MsgVpnDistributedCacheClusterResponse } from '../models/MsgVpnDistributedCacheClusterResponse';
import type { MsgVpnDistributedCacheClustersResponse } from '../models/MsgVpnDistributedCacheClustersResponse';
import type { MsgVpnDistributedCacheClusterTopic } from '../models/MsgVpnDistributedCacheClusterTopic';
import type { MsgVpnDistributedCacheClusterTopicResponse } from '../models/MsgVpnDistributedCacheClusterTopicResponse';
import type { MsgVpnDistributedCacheClusterTopicsResponse } from '../models/MsgVpnDistributedCacheClusterTopicsResponse';
import type { MsgVpnDistributedCacheResponse } from '../models/MsgVpnDistributedCacheResponse';
import type { MsgVpnDistributedCachesResponse } from '../models/MsgVpnDistributedCachesResponse';
import type { MsgVpnDmrBridge } from '../models/MsgVpnDmrBridge';
import type { MsgVpnDmrBridgeResponse } from '../models/MsgVpnDmrBridgeResponse';
import type { MsgVpnDmrBridgesResponse } from '../models/MsgVpnDmrBridgesResponse';
import type { MsgVpnJndiConnectionFactoriesResponse } from '../models/MsgVpnJndiConnectionFactoriesResponse';
import type { MsgVpnJndiConnectionFactory } from '../models/MsgVpnJndiConnectionFactory';
import type { MsgVpnJndiConnectionFactoryResponse } from '../models/MsgVpnJndiConnectionFactoryResponse';
import type { MsgVpnJndiQueue } from '../models/MsgVpnJndiQueue';
import type { MsgVpnJndiQueueResponse } from '../models/MsgVpnJndiQueueResponse';
import type { MsgVpnJndiQueuesResponse } from '../models/MsgVpnJndiQueuesResponse';
import type { MsgVpnJndiTopic } from '../models/MsgVpnJndiTopic';
import type { MsgVpnJndiTopicResponse } from '../models/MsgVpnJndiTopicResponse';
import type { MsgVpnJndiTopicsResponse } from '../models/MsgVpnJndiTopicsResponse';
import type { MsgVpnMqttRetainCache } from '../models/MsgVpnMqttRetainCache';
import type { MsgVpnMqttRetainCacheResponse } from '../models/MsgVpnMqttRetainCacheResponse';
import type { MsgVpnMqttRetainCachesResponse } from '../models/MsgVpnMqttRetainCachesResponse';
import type { MsgVpnMqttSession } from '../models/MsgVpnMqttSession';
import type { MsgVpnMqttSessionResponse } from '../models/MsgVpnMqttSessionResponse';
import type { MsgVpnMqttSessionsResponse } from '../models/MsgVpnMqttSessionsResponse';
import type { MsgVpnMqttSessionSubscription } from '../models/MsgVpnMqttSessionSubscription';
import type { MsgVpnMqttSessionSubscriptionResponse } from '../models/MsgVpnMqttSessionSubscriptionResponse';
import type { MsgVpnMqttSessionSubscriptionsResponse } from '../models/MsgVpnMqttSessionSubscriptionsResponse';
import type { MsgVpnQueue } from '../models/MsgVpnQueue';
import type { MsgVpnQueueResponse } from '../models/MsgVpnQueueResponse';
import type { MsgVpnQueuesResponse } from '../models/MsgVpnQueuesResponse';
import type { MsgVpnQueueSubscription } from '../models/MsgVpnQueueSubscription';
import type { MsgVpnQueueSubscriptionResponse } from '../models/MsgVpnQueueSubscriptionResponse';
import type { MsgVpnQueueSubscriptionsResponse } from '../models/MsgVpnQueueSubscriptionsResponse';
import type { MsgVpnQueueTemplate } from '../models/MsgVpnQueueTemplate';
import type { MsgVpnQueueTemplateResponse } from '../models/MsgVpnQueueTemplateResponse';
import type { MsgVpnQueueTemplatesResponse } from '../models/MsgVpnQueueTemplatesResponse';
import type { MsgVpnReplayLog } from '../models/MsgVpnReplayLog';
import type { MsgVpnReplayLogResponse } from '../models/MsgVpnReplayLogResponse';
import type { MsgVpnReplayLogsResponse } from '../models/MsgVpnReplayLogsResponse';
import type { MsgVpnReplayLogTopicFilterSubscription } from '../models/MsgVpnReplayLogTopicFilterSubscription';
import type { MsgVpnReplayLogTopicFilterSubscriptionResponse } from '../models/MsgVpnReplayLogTopicFilterSubscriptionResponse';
import type { MsgVpnReplayLogTopicFilterSubscriptionsResponse } from '../models/MsgVpnReplayLogTopicFilterSubscriptionsResponse';
import type { MsgVpnReplicatedTopic } from '../models/MsgVpnReplicatedTopic';
import type { MsgVpnReplicatedTopicResponse } from '../models/MsgVpnReplicatedTopicResponse';
import type { MsgVpnReplicatedTopicsResponse } from '../models/MsgVpnReplicatedTopicsResponse';
import type { MsgVpnResponse } from '../models/MsgVpnResponse';
import type { MsgVpnRestDeliveryPoint } from '../models/MsgVpnRestDeliveryPoint';
import type { MsgVpnRestDeliveryPointQueueBinding } from '../models/MsgVpnRestDeliveryPointQueueBinding';
import type { MsgVpnRestDeliveryPointQueueBindingRequestHeader } from '../models/MsgVpnRestDeliveryPointQueueBindingRequestHeader';
import type { MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse } from '../models/MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse';
import type { MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse } from '../models/MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse';
import type { MsgVpnRestDeliveryPointQueueBindingResponse } from '../models/MsgVpnRestDeliveryPointQueueBindingResponse';
import type { MsgVpnRestDeliveryPointQueueBindingsResponse } from '../models/MsgVpnRestDeliveryPointQueueBindingsResponse';
import type { MsgVpnRestDeliveryPointResponse } from '../models/MsgVpnRestDeliveryPointResponse';
import type { MsgVpnRestDeliveryPointRestConsumer } from '../models/MsgVpnRestDeliveryPointRestConsumer';
import type { MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim } from '../models/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim';
import type { MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse } from '../models/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse';
import type { MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse } from '../models/MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse';
import type { MsgVpnRestDeliveryPointRestConsumerResponse } from '../models/MsgVpnRestDeliveryPointRestConsumerResponse';
import type { MsgVpnRestDeliveryPointRestConsumersResponse } from '../models/MsgVpnRestDeliveryPointRestConsumersResponse';
import type { MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName } from '../models/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName';
import type { MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse } from '../models/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse';
import type { MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse } from '../models/MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse';
import type { MsgVpnRestDeliveryPointsResponse } from '../models/MsgVpnRestDeliveryPointsResponse';
import type { MsgVpnSequencedTopic } from '../models/MsgVpnSequencedTopic';
import type { MsgVpnSequencedTopicResponse } from '../models/MsgVpnSequencedTopicResponse';
import type { MsgVpnSequencedTopicsResponse } from '../models/MsgVpnSequencedTopicsResponse';
import type { MsgVpnsResponse } from '../models/MsgVpnsResponse';
import type { MsgVpnTopicEndpoint } from '../models/MsgVpnTopicEndpoint';
import type { MsgVpnTopicEndpointResponse } from '../models/MsgVpnTopicEndpointResponse';
import type { MsgVpnTopicEndpointsResponse } from '../models/MsgVpnTopicEndpointsResponse';
import type { MsgVpnTopicEndpointTemplate } from '../models/MsgVpnTopicEndpointTemplate';
import type { MsgVpnTopicEndpointTemplateResponse } from '../models/MsgVpnTopicEndpointTemplateResponse';
import type { MsgVpnTopicEndpointTemplatesResponse } from '../models/MsgVpnTopicEndpointTemplatesResponse';
import type { OauthProfile } from '../models/OauthProfile';
import type { OauthProfileAccessLevelGroup } from '../models/OauthProfileAccessLevelGroup';
import type { OauthProfileAccessLevelGroupMsgVpnAccessLevelException } from '../models/OauthProfileAccessLevelGroupMsgVpnAccessLevelException';
import type { OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse } from '../models/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse';
import type { OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse } from '../models/OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse';
import type { OauthProfileAccessLevelGroupResponse } from '../models/OauthProfileAccessLevelGroupResponse';
import type { OauthProfileAccessLevelGroupsResponse } from '../models/OauthProfileAccessLevelGroupsResponse';
import type { OauthProfileClientAllowedHost } from '../models/OauthProfileClientAllowedHost';
import type { OauthProfileClientAllowedHostResponse } from '../models/OauthProfileClientAllowedHostResponse';
import type { OauthProfileClientAllowedHostsResponse } from '../models/OauthProfileClientAllowedHostsResponse';
import type { OauthProfileClientAuthorizationParameter } from '../models/OauthProfileClientAuthorizationParameter';
import type { OauthProfileClientAuthorizationParameterResponse } from '../models/OauthProfileClientAuthorizationParameterResponse';
import type { OauthProfileClientAuthorizationParametersResponse } from '../models/OauthProfileClientAuthorizationParametersResponse';
import type { OauthProfileClientRequiredClaim } from '../models/OauthProfileClientRequiredClaim';
import type { OauthProfileClientRequiredClaimResponse } from '../models/OauthProfileClientRequiredClaimResponse';
import type { OauthProfileClientRequiredClaimsResponse } from '../models/OauthProfileClientRequiredClaimsResponse';
import type { OauthProfileDefaultMsgVpnAccessLevelException } from '../models/OauthProfileDefaultMsgVpnAccessLevelException';
import type { OauthProfileDefaultMsgVpnAccessLevelExceptionResponse } from '../models/OauthProfileDefaultMsgVpnAccessLevelExceptionResponse';
import type { OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse } from '../models/OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse';
import type { OauthProfileResourceServerRequiredClaim } from '../models/OauthProfileResourceServerRequiredClaim';
import type { OauthProfileResourceServerRequiredClaimResponse } from '../models/OauthProfileResourceServerRequiredClaimResponse';
import type { OauthProfileResourceServerRequiredClaimsResponse } from '../models/OauthProfileResourceServerRequiredClaimsResponse';
import type { OauthProfileResponse } from '../models/OauthProfileResponse';
import type { OauthProfilesResponse } from '../models/OauthProfilesResponse';
import type { SempMetaOnlyResponse } from '../models/SempMetaOnlyResponse';
import type { SystemInformationResponse } from '../models/SystemInformationResponse';
import type { VirtualHostname } from '../models/VirtualHostname';
import type { VirtualHostnameResponse } from '../models/VirtualHostnameResponse';
import type { VirtualHostnamesResponse } from '../models/VirtualHostnamesResponse';
import type { ApiRequestOptions } from '../core/ApiRequestOptions';

export interface AllService {

    /**
     * Get a Broker object.
     * Get a Broker object.
     *
     * This object contains global configuration for the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * tlsServerCertContent||x||x
     * tlsServerCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * configSyncAuthenticationClientCertMaxChainDepth|global/read-only
     * configSyncAuthenticationClientCertValidateDateEnabled|global/read-only
     * configSyncClientProfileTcpInitialCongestionWindow|global/read-only
     * configSyncClientProfileTcpKeepaliveCount|global/read-only
     * configSyncClientProfileTcpKeepaliveIdle|global/read-only
     * configSyncClientProfileTcpKeepaliveInterval|global/read-only
     * configSyncClientProfileTcpMaxWindow|global/read-only
     * configSyncClientProfileTcpMss|global/read-only
     * configSyncEnabled|global/read-only
     * configSyncSynchronizeUsernameEnabled|global/read-only
     * configSyncTlsEnabled|global/read-only
     * guaranteedMsgingDefragmentationScheduleDayList|global/read-only
     * guaranteedMsgingDefragmentationScheduleEnabled|global/read-only
     * guaranteedMsgingDefragmentationScheduleTimeList|global/read-only
     * guaranteedMsgingDefragmentationThresholdEnabled|global/read-only
     * guaranteedMsgingDefragmentationThresholdFragmentationPercentage|global/read-only
     * guaranteedMsgingDefragmentationThresholdMinInterval|global/read-only
     * guaranteedMsgingDefragmentationThresholdUsagePercentage|global/read-only
     * guaranteedMsgingEnabled|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
     * guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
     * guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
     * guaranteedMsgingMaxCacheUsage|global/read-only
     * guaranteedMsgingMaxMsgSpoolUsage|global/read-only
     * guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
     * guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
     * guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
     * oauthProfileDefault|global/read-only
     * serviceAmqpEnabled|global/read-only
     * serviceAmqpTlsListenPort|global/read-only
     * serviceEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceEventConnectionCountThreshold.clearValue|global/read-only
     * serviceEventConnectionCountThreshold.setPercent|global/read-only
     * serviceEventConnectionCountThreshold.setValue|global/read-only
     * serviceHealthCheckEnabled|global/read-only
     * serviceHealthCheckListenPort|global/read-only
     * serviceMateLinkEnabled|global/read-only
     * serviceMateLinkListenPort|global/read-only
     * serviceMqttEnabled|global/read-only
     * serviceMsgBackboneEnabled|global/read-only
     * serviceRedundancyEnabled|global/read-only
     * serviceRedundancyFirstListenPort|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
     * serviceRestIncomingEnabled|global/read-only
     * serviceRestOutgoingEnabled|global/read-only
     * serviceSempCorsAllowAnyHostEnabled|global/read-only
     * serviceSempLegacyTimeoutEnabled|global/read-only
     * serviceSempPlainTextEnabled|global/read-only
     * serviceSempPlainTextListenPort|global/read-only
     * serviceSempSessionIdleTimeout|global/read-only
     * serviceSempSessionMaxLifetime|global/read-only
     * serviceSempTlsEnabled|global/read-only
     * serviceSempTlsListenPort|global/read-only
     * serviceSmfCompressionListenPort|global/read-only
     * serviceSmfEnabled|global/read-only
     * serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
     * serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
     * serviceSmfEventConnectionCountThreshold.setValue|global/read-only
     * serviceSmfPlainTextListenPort|global/read-only
     * serviceSmfRoutingControlListenPort|global/read-only
     * serviceSmfTlsListenPort|global/read-only
     * serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
     * serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
     * serviceTlsEventConnectionCountThreshold.setValue|global/read-only
     * serviceWebTransportEnabled|global/read-only
     * serviceWebTransportPlainTextListenPort|global/read-only
     * serviceWebTransportTlsListenPort|global/read-only
     * serviceWebTransportWebUrlSuffix|global/read-only
     * tlsBlockVersion11Enabled|global/read-only
     * tlsCipherSuiteManagementList|global/read-only
     * tlsCipherSuiteMsgBackboneList|global/read-only
     * tlsCipherSuiteSecureShellList|global/read-only
     * tlsCrimeExploitProtectionEnabled|global/read-only
     * tlsServerCertContent|global/read-only
     * tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
     * tlsTicketLifetime|global/read-only
     * webManagerAllowUnencryptedWizardsEnabled|vpn/read-only
     * webManagerCustomization|vpn/read-only
     * webManagerRedirectHttpEnabled|vpn/read-only
     * webManagerRedirectHttpOverrideTlsPort|vpn/read-only
     *
     *
     *
     * This has been available since 2.13.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns BrokerResponse The Broker object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getBroker(
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<BrokerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Broker object.
     * Get a Broker object.
     *
     * This object contains global configuration for the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * tlsServerCertContent||x||x
     * tlsServerCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * configSyncAuthenticationClientCertMaxChainDepth|global/read-only
     * configSyncAuthenticationClientCertValidateDateEnabled|global/read-only
     * configSyncClientProfileTcpInitialCongestionWindow|global/read-only
     * configSyncClientProfileTcpKeepaliveCount|global/read-only
     * configSyncClientProfileTcpKeepaliveIdle|global/read-only
     * configSyncClientProfileTcpKeepaliveInterval|global/read-only
     * configSyncClientProfileTcpMaxWindow|global/read-only
     * configSyncClientProfileTcpMss|global/read-only
     * configSyncEnabled|global/read-only
     * configSyncSynchronizeUsernameEnabled|global/read-only
     * configSyncTlsEnabled|global/read-only
     * guaranteedMsgingDefragmentationScheduleDayList|global/read-only
     * guaranteedMsgingDefragmentationScheduleEnabled|global/read-only
     * guaranteedMsgingDefragmentationScheduleTimeList|global/read-only
     * guaranteedMsgingDefragmentationThresholdEnabled|global/read-only
     * guaranteedMsgingDefragmentationThresholdFragmentationPercentage|global/read-only
     * guaranteedMsgingDefragmentationThresholdMinInterval|global/read-only
     * guaranteedMsgingDefragmentationThresholdUsagePercentage|global/read-only
     * guaranteedMsgingEnabled|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-only
     * guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-only
     * guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-only
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-only
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-only
     * guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-only
     * guaranteedMsgingMaxCacheUsage|global/read-only
     * guaranteedMsgingMaxMsgSpoolUsage|global/read-only
     * guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-only
     * guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-only
     * guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-only
     * oauthProfileDefault|global/read-only
     * serviceAmqpEnabled|global/read-only
     * serviceAmqpTlsListenPort|global/read-only
     * serviceEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceEventConnectionCountThreshold.clearValue|global/read-only
     * serviceEventConnectionCountThreshold.setPercent|global/read-only
     * serviceEventConnectionCountThreshold.setValue|global/read-only
     * serviceHealthCheckEnabled|global/read-only
     * serviceHealthCheckListenPort|global/read-only
     * serviceMateLinkEnabled|global/read-only
     * serviceMateLinkListenPort|global/read-only
     * serviceMqttEnabled|global/read-only
     * serviceMsgBackboneEnabled|global/read-only
     * serviceRedundancyEnabled|global/read-only
     * serviceRedundancyFirstListenPort|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-only
     * serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-only
     * serviceRestIncomingEnabled|global/read-only
     * serviceRestOutgoingEnabled|global/read-only
     * serviceSempCorsAllowAnyHostEnabled|global/read-only
     * serviceSempLegacyTimeoutEnabled|global/read-only
     * serviceSempPlainTextEnabled|global/read-only
     * serviceSempPlainTextListenPort|global/read-only
     * serviceSempSessionIdleTimeout|global/read-only
     * serviceSempSessionMaxLifetime|global/read-only
     * serviceSempTlsEnabled|global/read-only
     * serviceSempTlsListenPort|global/read-only
     * serviceSmfCompressionListenPort|global/read-only
     * serviceSmfEnabled|global/read-only
     * serviceSmfEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceSmfEventConnectionCountThreshold.clearValue|global/read-only
     * serviceSmfEventConnectionCountThreshold.setPercent|global/read-only
     * serviceSmfEventConnectionCountThreshold.setValue|global/read-only
     * serviceSmfPlainTextListenPort|global/read-only
     * serviceSmfRoutingControlListenPort|global/read-only
     * serviceSmfTlsListenPort|global/read-only
     * serviceTlsEventConnectionCountThreshold.clearPercent|global/read-only
     * serviceTlsEventConnectionCountThreshold.clearValue|global/read-only
     * serviceTlsEventConnectionCountThreshold.setPercent|global/read-only
     * serviceTlsEventConnectionCountThreshold.setValue|global/read-only
     * serviceWebTransportEnabled|global/read-only
     * serviceWebTransportPlainTextListenPort|global/read-only
     * serviceWebTransportTlsListenPort|global/read-only
     * serviceWebTransportWebUrlSuffix|global/read-only
     * tlsBlockVersion11Enabled|global/read-only
     * tlsCipherSuiteManagementList|global/read-only
     * tlsCipherSuiteMsgBackboneList|global/read-only
     * tlsCipherSuiteSecureShellList|global/read-only
     * tlsCrimeExploitProtectionEnabled|global/read-only
     * tlsServerCertContent|global/read-only
     * tlsStandardDomainCertificateAuthoritiesEnabled|vpn/read-only
     * tlsTicketLifetime|global/read-only
     * webManagerAllowUnencryptedWizardsEnabled|vpn/read-only
     * webManagerCustomization|vpn/read-only
     * webManagerRedirectHttpEnabled|vpn/read-only
     * webManagerRedirectHttpOverrideTlsPort|vpn/read-only
     *
     *
     *
     * This has been available since 2.13.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getBrokerApiRequestOptions(
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Broker object.
     * Update a Broker object. Any attribute missing from the request will be left unchanged.
     *
     * This object contains global configuration for the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * serviceAmqpTlsListenPort||||x||
     * serviceHealthCheckListenPort||||x||
     * serviceMateLinkListenPort||||x||
     * serviceRedundancyFirstListenPort||||x||
     * serviceSempPlainTextListenPort||||x||
     * serviceSempTlsListenPort||||x||
     * serviceSmfCompressionListenPort||||x||
     * serviceSmfPlainTextListenPort||||x||
     * serviceSmfRoutingControlListenPort||||x||
     * serviceSmfTlsListenPort||||x||
     * serviceWebTransportPlainTextListenPort||||x||
     * serviceWebTransportTlsListenPort||||x||
     * serviceWebTransportWebUrlSuffix||||x||
     * tlsServerCertContent|||x|||x
     * tlsServerCertPassword|||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * Broker|tlsServerCertPassword|tlsServerCertContent|
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * authClientCertRevocationCheckMode|global/admin
     * configSyncAuthenticationClientCertMaxChainDepth|global/read-write
     * configSyncAuthenticationClientCertValidateDateEnabled|global/read-write
     * configSyncClientProfileTcpInitialCongestionWindow|global/read-write
     * configSyncClientProfileTcpKeepaliveCount|global/read-write
     * configSyncClientProfileTcpKeepaliveIdle|global/read-write
     * configSyncClientProfileTcpKeepaliveInterval|global/read-write
     * configSyncClientProfileTcpMaxWindow|global/read-write
     * configSyncClientProfileTcpMss|global/read-write
     * configSyncEnabled|global/read-write
     * configSyncSynchronizeUsernameEnabled|global/read-write
     * configSyncTlsEnabled|global/read-write
     * guaranteedMsgingDefragmentationScheduleDayList|global/read-write
     * guaranteedMsgingDefragmentationScheduleEnabled|global/read-write
     * guaranteedMsgingDefragmentationScheduleTimeList|global/read-write
     * guaranteedMsgingDefragmentationThresholdEnabled|global/read-write
     * guaranteedMsgingDefragmentationThresholdFragmentationPercentage|global/read-write
     * guaranteedMsgingDefragmentationThresholdMinInterval|global/read-write
     * guaranteedMsgingDefragmentationThresholdUsagePercentage|global/read-write
     * guaranteedMsgingEnabled|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-write
     * guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-write
     * guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-write
     * guaranteedMsgingMaxCacheUsage|global/read-write
     * guaranteedMsgingMaxMsgSpoolUsage|global/read-write
     * guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-write
     * guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-write
     * guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-write
     * oauthProfileDefault|global/admin
     * serviceAmqpEnabled|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceEventConnectionCountThreshold.clearValue|global/read-write
     * serviceEventConnectionCountThreshold.setPercent|global/read-write
     * serviceEventConnectionCountThreshold.setValue|global/read-write
     * serviceHealthCheckEnabled|global/read-write
     * serviceHealthCheckListenPort|global/read-write
     * serviceMateLinkEnabled|global/read-write
     * serviceMateLinkListenPort|global/read-write
     * serviceMqttEnabled|global/read-write
     * serviceMsgBackboneEnabled|global/read-write
     * serviceRedundancyEnabled|global/read-write
     * serviceRedundancyFirstListenPort|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-write
     * serviceRestIncomingEnabled|global/read-write
     * serviceRestOutgoingEnabled|global/read-write
     * serviceSempCorsAllowAnyHostEnabled|global/read-write
     * serviceSempLegacyTimeoutEnabled|global/read-write
     * serviceSempPlainTextEnabled|global/read-write
     * serviceSempPlainTextListenPort|global/read-write
     * serviceSempSessionIdleTimeout|global/read-write
     * serviceSempSessionMaxLifetime|global/read-write
     * serviceSempTlsEnabled|global/read-write
     * serviceSempTlsListenPort|global/read-write
     * serviceSmfCompressionListenPort|global/read-write
     * serviceSmfEnabled|global/read-write
     * serviceSmfEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceSmfEventConnectionCountThreshold.clearValue|global/read-write
     * serviceSmfEventConnectionCountThreshold.setPercent|global/read-write
     * serviceSmfEventConnectionCountThreshold.setValue|global/read-write
     * serviceSmfPlainTextListenPort|global/read-write
     * serviceSmfRoutingControlListenPort|global/read-write
     * serviceSmfTlsListenPort|global/read-write
     * serviceTlsEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceTlsEventConnectionCountThreshold.clearValue|global/read-write
     * serviceTlsEventConnectionCountThreshold.setPercent|global/read-write
     * serviceTlsEventConnectionCountThreshold.setValue|global/read-write
     * serviceWebTransportEnabled|global/read-write
     * serviceWebTransportPlainTextListenPort|global/read-write
     * serviceWebTransportTlsListenPort|global/read-write
     * serviceWebTransportWebUrlSuffix|global/read-write
     * tlsBlockVersion11Enabled|global/read-write
     * tlsCipherSuiteManagementList|global/read-write
     * tlsCipherSuiteMsgBackboneList|global/read-write
     * tlsCipherSuiteSecureShellList|global/read-write
     * tlsCrimeExploitProtectionEnabled|global/read-write
     * tlsServerCertContent|global/read-write
     * tlsServerCertPassword|global/read-write
     * tlsStandardDomainCertificateAuthoritiesEnabled|global/read-write
     * tlsTicketLifetime|global/read-write
     * webManagerAllowUnencryptedWizardsEnabled|global/read-write
     * webManagerCustomization|vpn/read-write
     * webManagerRedirectHttpEnabled|global/read-write
     * webManagerRedirectHttpOverrideTlsPort|global/read-write
     *
     *
     *
     * This has been available since 2.13.
     * @param body The Broker object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns BrokerResponse The Broker object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateBroker(
        body: Broker,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<BrokerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Broker object.
     * Update a Broker object. Any attribute missing from the request will be left unchanged.
     *
     * This object contains global configuration for the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * serviceAmqpTlsListenPort||||x||
     * serviceHealthCheckListenPort||||x||
     * serviceMateLinkListenPort||||x||
     * serviceRedundancyFirstListenPort||||x||
     * serviceSempPlainTextListenPort||||x||
     * serviceSempTlsListenPort||||x||
     * serviceSmfCompressionListenPort||||x||
     * serviceSmfPlainTextListenPort||||x||
     * serviceSmfRoutingControlListenPort||||x||
     * serviceSmfTlsListenPort||||x||
     * serviceWebTransportPlainTextListenPort||||x||
     * serviceWebTransportTlsListenPort||||x||
     * serviceWebTransportWebUrlSuffix||||x||
     * tlsServerCertContent|||x|||x
     * tlsServerCertPassword|||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * Broker|tlsServerCertPassword|tlsServerCertContent|
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * authClientCertRevocationCheckMode|global/admin
     * configSyncAuthenticationClientCertMaxChainDepth|global/read-write
     * configSyncAuthenticationClientCertValidateDateEnabled|global/read-write
     * configSyncClientProfileTcpInitialCongestionWindow|global/read-write
     * configSyncClientProfileTcpKeepaliveCount|global/read-write
     * configSyncClientProfileTcpKeepaliveIdle|global/read-write
     * configSyncClientProfileTcpKeepaliveInterval|global/read-write
     * configSyncClientProfileTcpMaxWindow|global/read-write
     * configSyncClientProfileTcpMss|global/read-write
     * configSyncEnabled|global/read-write
     * configSyncSynchronizeUsernameEnabled|global/read-write
     * configSyncTlsEnabled|global/read-write
     * guaranteedMsgingDefragmentationScheduleDayList|global/read-write
     * guaranteedMsgingDefragmentationScheduleEnabled|global/read-write
     * guaranteedMsgingDefragmentationScheduleTimeList|global/read-write
     * guaranteedMsgingDefragmentationThresholdEnabled|global/read-write
     * guaranteedMsgingDefragmentationThresholdFragmentationPercentage|global/read-write
     * guaranteedMsgingDefragmentationThresholdMinInterval|global/read-write
     * guaranteedMsgingDefragmentationThresholdUsagePercentage|global/read-write
     * guaranteedMsgingEnabled|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.clearValue|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventCacheUsageThreshold.setValue|global/read-write
     * guaranteedMsgingEventDeliveredUnackedThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventDeliveredUnackedThreshold.setPercent|global/read-write
     * guaranteedMsgingEventDiskUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventDiskUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEgressFlowCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventEndpointCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventIngressFlowCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventMsgCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolFileCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.clearValue|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setPercent|global/read-write
     * guaranteedMsgingEventMsgSpoolUsageThreshold.setValue|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionCountThreshold.setValue|global/read-write
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactedSessionResourceCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.clearPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.clearValue|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.setPercent|global/read-write
     * guaranteedMsgingEventTransactionCountThreshold.setValue|global/read-write
     * guaranteedMsgingMaxCacheUsage|global/read-write
     * guaranteedMsgingMaxMsgSpoolUsage|global/read-write
     * guaranteedMsgingMsgSpoolSyncMirroredMsgAckTimeout|global/read-write
     * guaranteedMsgingMsgSpoolSyncMirroredSpoolFileAckTimeout|global/read-write
     * guaranteedMsgingTransactionReplicationCompatibilityMode|global/read-write
     * oauthProfileDefault|global/admin
     * serviceAmqpEnabled|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceEventConnectionCountThreshold.clearValue|global/read-write
     * serviceEventConnectionCountThreshold.setPercent|global/read-write
     * serviceEventConnectionCountThreshold.setValue|global/read-write
     * serviceHealthCheckEnabled|global/read-write
     * serviceHealthCheckListenPort|global/read-write
     * serviceMateLinkEnabled|global/read-write
     * serviceMateLinkListenPort|global/read-write
     * serviceMqttEnabled|global/read-write
     * serviceMsgBackboneEnabled|global/read-write
     * serviceRedundancyEnabled|global/read-write
     * serviceRedundancyFirstListenPort|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.clearPercent|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.clearValue|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.setPercent|global/read-write
     * serviceRestEventOutgoingConnectionCountThreshold.setValue|global/read-write
     * serviceRestIncomingEnabled|global/read-write
     * serviceRestOutgoingEnabled|global/read-write
     * serviceSempCorsAllowAnyHostEnabled|global/read-write
     * serviceSempLegacyTimeoutEnabled|global/read-write
     * serviceSempPlainTextEnabled|global/read-write
     * serviceSempPlainTextListenPort|global/read-write
     * serviceSempSessionIdleTimeout|global/read-write
     * serviceSempSessionMaxLifetime|global/read-write
     * serviceSempTlsEnabled|global/read-write
     * serviceSempTlsListenPort|global/read-write
     * serviceSmfCompressionListenPort|global/read-write
     * serviceSmfEnabled|global/read-write
     * serviceSmfEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceSmfEventConnectionCountThreshold.clearValue|global/read-write
     * serviceSmfEventConnectionCountThreshold.setPercent|global/read-write
     * serviceSmfEventConnectionCountThreshold.setValue|global/read-write
     * serviceSmfPlainTextListenPort|global/read-write
     * serviceSmfRoutingControlListenPort|global/read-write
     * serviceSmfTlsListenPort|global/read-write
     * serviceTlsEventConnectionCountThreshold.clearPercent|global/read-write
     * serviceTlsEventConnectionCountThreshold.clearValue|global/read-write
     * serviceTlsEventConnectionCountThreshold.setPercent|global/read-write
     * serviceTlsEventConnectionCountThreshold.setValue|global/read-write
     * serviceWebTransportEnabled|global/read-write
     * serviceWebTransportPlainTextListenPort|global/read-write
     * serviceWebTransportTlsListenPort|global/read-write
     * serviceWebTransportWebUrlSuffix|global/read-write
     * tlsBlockVersion11Enabled|global/read-write
     * tlsCipherSuiteManagementList|global/read-write
     * tlsCipherSuiteMsgBackboneList|global/read-write
     * tlsCipherSuiteSecureShellList|global/read-write
     * tlsCrimeExploitProtectionEnabled|global/read-write
     * tlsServerCertContent|global/read-write
     * tlsServerCertPassword|global/read-write
     * tlsStandardDomainCertificateAuthoritiesEnabled|global/read-write
     * tlsTicketLifetime|global/read-write
     * webManagerAllowUnencryptedWizardsEnabled|global/read-write
     * webManagerCustomization|vpn/read-write
     * webManagerRedirectHttpEnabled|global/read-write
     * webManagerRedirectHttpOverrideTlsPort|global/read-write
     *
     *
     *
     * This has been available since 2.13.
     * @param body The Broker object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateBrokerApiRequestOptions(
        body: Broker,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get an About object.
     * Get an About object.
     *
     * This provides metadata about the SEMP API, such as the version of the API supported by the broker.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.13.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns AboutResponse The About object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getAbout(
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<AboutResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an About object.
     * Get an About object.
     *
     * This provides metadata about the SEMP API, such as the version of the API supported by the broker.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.13.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getAboutApiRequestOptions(
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get an API Description object.
     * Get an API Description object.
     *
     * The API Description object provides metadata about the SEMP API.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns AboutApiResponse The API Description object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getAboutApi(
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<AboutApiResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an API Description object.
     * Get an API Description object.
     *
     * The API Description object provides metadata about the SEMP API.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getAboutApiApiRequestOptions(
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a User object.
     * Get a User object.
     *
     * Session and access level information about the user accessing the SEMP API.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns AboutUserResponse The User object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getAboutUser(
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<AboutUserResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a User object.
     * Get a User object.
     *
     * Session and access level information about the user accessing the SEMP API.
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getAboutUserApiRequestOptions(
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of User Message VPN objects.
     * Get a list of User Message VPN objects.
     *
     * This provides information about the Message VPN access level for the username used to access the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns AboutUserMsgVpnsResponse The list of User Message VPN objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getAboutUserMsgVpns(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<AboutUserMsgVpnsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of User Message VPN objects.
     * Get a list of User Message VPN objects.
     *
     * This provides information about the Message VPN access level for the username used to access the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getAboutUserMsgVpnsApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a User Message VPN object.
     * Get a User Message VPN object.
     *
     * This provides information about the Message VPN access level for the username used to access the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns AboutUserMsgVpnResponse The User Message VPN object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getAboutUserMsgVpn(
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<AboutUserMsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a User Message VPN object.
     * Get a User Message VPN object.
     *
     * This provides information about the Message VPN access level for the username used to access the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getAboutUserMsgVpnApiRequestOptions(
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Certificate Authority objects.
     * Get a list of Certificate Authority objects.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * certContent|||x|
     * crlDayList|||x|
     * crlTimeList|||x|
     * crlUrl|||x|
     * ocspNonResponderCertEnabled|||x|
     * ocspOverrideUrl|||x|
     * ocspTimeout|||x|
     * revocationCheckEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthoritiesResponse The list of Certificate Authority objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getCertAuthorities(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<CertAuthoritiesResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Certificate Authority objects.
     * Get a list of Certificate Authority objects.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * certContent|||x|
     * crlDayList|||x|
     * crlTimeList|||x|
     * crlUrl|||x|
     * ocspNonResponderCertEnabled|||x|
     * ocspOverrideUrl|||x|
     * ocspTimeout|||x|
     * revocationCheckEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getCertAuthoritiesApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Certificate Authority object.
     * Create a Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x|||x|
     * certContent|||||x|
     * crlDayList|||||x|
     * crlTimeList|||||x|
     * crlUrl|||||x|
     * ocspNonResponderCertEnabled|||||x|
     * ocspOverrideUrl|||||x|
     * ocspTimeout|||||x|
     * revocationCheckEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityResponse The Certificate Authority object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createCertAuthority(
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Certificate Authority object.
     * Create a Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x|||x|
     * certContent|||||x|
     * crlDayList|||||x|
     * crlTimeList|||||x|
     * crlUrl|||||x|
     * ocspNonResponderCertEnabled|||||x|
     * ocspOverrideUrl|||||x|
     * ocspTimeout|||||x|
     * revocationCheckEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createCertAuthorityApiRequestOptions(
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Certificate Authority object.
     * Delete a Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteCertAuthority(
        certAuthorityName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Certificate Authority object.
     * Delete a Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteCertAuthorityApiRequestOptions(
        certAuthorityName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Certificate Authority object.
     * Get a Certificate Authority object.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * certContent|||x|
     * crlDayList|||x|
     * crlTimeList|||x|
     * crlUrl|||x|
     * ocspNonResponderCertEnabled|||x|
     * ocspOverrideUrl|||x|
     * ocspTimeout|||x|
     * revocationCheckEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityResponse The Certificate Authority object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getCertAuthority(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Certificate Authority object.
     * Get a Certificate Authority object.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * certContent|||x|
     * crlDayList|||x|
     * crlTimeList|||x|
     * crlUrl|||x|
     * ocspNonResponderCertEnabled|||x|
     * ocspOverrideUrl|||x|
     * ocspTimeout|||x|
     * revocationCheckEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Update a Certificate Authority object.
     * Update a Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x|||x|
     * certContent|||||x|
     * crlDayList|||||x|
     * crlTimeList|||||x|
     * crlUrl||||x|x|
     * ocspNonResponderCertEnabled|||||x|
     * ocspOverrideUrl|||||x|
     * ocspTimeout|||||x|
     * revocationCheckEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityResponse The Certificate Authority object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateCertAuthority(
        certAuthorityName: string,
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Update a Certificate Authority object.
     * Update a Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x|||x|
     * certContent|||||x|
     * crlDayList|||||x|
     * crlTimeList|||||x|
     * crlUrl||||x|x|
     * ocspNonResponderCertEnabled|||||x|
     * ocspOverrideUrl|||||x|
     * ocspTimeout|||||x|
     * revocationCheckEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Replace a Certificate Authority object.
     * Replace a Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x|||x|
     * certContent||||||x|
     * crlDayList||||||x|
     * crlTimeList||||||x|
     * crlUrl|||||x|x|
     * ocspNonResponderCertEnabled||||||x|
     * ocspOverrideUrl||||||x|
     * ocspTimeout||||||x|
     * revocationCheckEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityResponse The Certificate Authority object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceCertAuthority(
        certAuthorityName: string,
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Replace a Certificate Authority object.
     * Replace a Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x|||x|
     * certContent||||||x|
     * crlDayList||||||x|
     * crlTimeList||||||x|
     * crlUrl|||||x|x|
     * ocspNonResponderCertEnabled||||||x|
     * ocspOverrideUrl||||||x|
     * ocspTimeout||||||x|
     * revocationCheckEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * CertAuthority|crlDayList|crlTimeList|
     * CertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities and domainCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: CertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of OCSP Responder Trusted Common Name objects.
     * Get a list of OCSP Responder Trusted Common Name objects.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * ocspTlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityOcspTlsTrustedCommonNamesResponse The list of OCSP Responder Trusted Common Name objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getCertAuthorityOcspTlsTrustedCommonNames(
        certAuthorityName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<CertAuthorityOcspTlsTrustedCommonNamesResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of OCSP Responder Trusted Common Name objects.
     * Get a list of OCSP Responder Trusted Common Name objects.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * ocspTlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getCertAuthorityOcspTlsTrustedCommonNamesApiRequestOptions(
        certAuthorityName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create an OCSP Responder Trusted Common Name object.
     * Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x||x|
     * ocspTlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The OCSP Responder Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityOcspTlsTrustedCommonNameResponse The OCSP Responder Trusted Common Name object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        body: CertAuthorityOcspTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityOcspTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create an OCSP Responder Trusted Common Name object.
     * Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x||x|
     * ocspTlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The OCSP Responder Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        body: CertAuthorityOcspTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete an OCSP Responder Trusted Common Name object.
     * Delete an OCSP Responder Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete an OCSP Responder Trusted Common Name object.
     * Delete an OCSP Responder Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get an OCSP Responder Trusted Common Name object.
     * Get an OCSP Responder Trusted Common Name object.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * ocspTlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns CertAuthorityOcspTlsTrustedCommonNameResponse The OCSP Responder Trusted Common Name object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<CertAuthorityOcspTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get an OCSP Responder Trusted Common Name object.
     * Get an OCSP Responder Trusted Common Name object.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|
     * ocspTlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.19. Replaced by clientCertAuthorities.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Client Certificate Authority objects.
     * Get a list of Client Certificate Authority objects.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthoritiesResponse The list of Client Certificate Authority objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getClientCertAuthorities(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<ClientCertAuthoritiesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Client Certificate Authority objects.
     * Get a list of Client Certificate Authority objects.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getClientCertAuthoritiesApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Client Certificate Authority object.
     * Create a Client Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityResponse The Client Certificate Authority object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createClientCertAuthority(
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Client Certificate Authority object.
     * Create a Client Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createClientCertAuthorityApiRequestOptions(
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Client Certificate Authority object.
     * Delete a Client Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteClientCertAuthority(
        certAuthorityName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Client Certificate Authority object.
     * Delete a Client Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteClientCertAuthorityApiRequestOptions(
        certAuthorityName: string,
    ): ApiRequestOptions;

    /**
     * Get a Client Certificate Authority object.
     * Get a Client Certificate Authority object.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityResponse The Client Certificate Authority object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getClientCertAuthority(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Client Certificate Authority object.
     * Get a Client Certificate Authority object.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getClientCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Client Certificate Authority object.
     * Update a Client Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x||||
     * crlUrl||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityResponse The Client Certificate Authority object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateClientCertAuthority(
        certAuthorityName: string,
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Client Certificate Authority object.
     * Update a Client Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x||||
     * crlUrl||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateClientCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Client Certificate Authority object.
     * Replace a Client Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x||||
     * crlUrl|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityResponse The Client Certificate Authority object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceClientCertAuthority(
        certAuthorityName: string,
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Client Certificate Authority object.
     * Replace a Client Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Clients can authenticate with the message broker over TLS by presenting a valid client certificate. The message broker authenticates the client certificate by constructing a full certificate chain (from the client certificate to intermediate CAs to a configured root CA). The intermediate CAs in this chain can be provided by the client, or configured in the message broker. The root CA must be configured on the message broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x||||
     * crlUrl|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * ClientCertAuthority|crlDayList|crlTimeList|
     * ClientCertAuthority|crlTimeList|crlDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Client Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceClientCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: ClientCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of OCSP Responder Trusted Common Name objects.
     * Get a list of OCSP Responder Trusted Common Name objects.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     * ocspTlsTrustedCommonName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityOcspTlsTrustedCommonNamesResponse The list of OCSP Responder Trusted Common Name objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getClientCertAuthorityOcspTlsTrustedCommonNames(
        certAuthorityName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityOcspTlsTrustedCommonNamesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of OCSP Responder Trusted Common Name objects.
     * Get a list of OCSP Responder Trusted Common Name objects.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     * ocspTlsTrustedCommonName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getClientCertAuthorityOcspTlsTrustedCommonNamesApiRequestOptions(
        certAuthorityName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an OCSP Responder Trusted Common Name object.
     * Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|||
     * ocspTlsTrustedCommonName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The OCSP Responder Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityOcspTlsTrustedCommonNameResponse The OCSP Responder Trusted Common Name object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createClientCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        body: ClientCertAuthorityOcspTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityOcspTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an OCSP Responder Trusted Common Name object.
     * Create an OCSP Responder Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x||x|||
     * ocspTlsTrustedCommonName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The OCSP Responder Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createClientCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        body: ClientCertAuthorityOcspTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an OCSP Responder Trusted Common Name object.
     * Delete an OCSP Responder Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteClientCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an OCSP Responder Trusted Common Name object.
     * Delete an OCSP Responder Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteClientCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
    ): ApiRequestOptions;

    /**
     * Get an OCSP Responder Trusted Common Name object.
     * Get an OCSP Responder Trusted Common Name object.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     * ocspTlsTrustedCommonName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ClientCertAuthorityOcspTlsTrustedCommonNameResponse The OCSP Responder Trusted Common Name object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getClientCertAuthorityOcspTlsTrustedCommonName(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<ClientCertAuthorityOcspTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an OCSP Responder Trusted Common Name object.
     * Get an OCSP Responder Trusted Common Name object.
     *
     * When an OCSP override URL is configured, the OCSP responder will be required to sign the OCSP responses with certificates issued to these Trusted Common Names. A maximum of 8 common names can be configured as valid response signers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     * ocspTlsTrustedCommonName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param ocspTlsTrustedCommonName The expected Trusted Common Name of the OCSP responder remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getClientCertAuthorityOcspTlsTrustedCommonNameApiRequestOptions(
        certAuthorityName: string,
        ocspTlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Cluster objects.
     * Get a list of Cluster objects.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * dmrClusterName|x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClustersResponse The list of Cluster objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusters(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClustersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Cluster objects.
     * Get a list of Cluster objects.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * dmrClusterName|x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClustersApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Cluster object.
     * Create a Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||||x||x
     * authenticationClientCertContent||||x||x
     * authenticationClientCertPassword||||x||
     * dmrClusterName|x|x||||
     * nodeName|||x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterResponse The Cluster object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrCluster(
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Cluster object.
     * Create a Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||||x||x
     * authenticationClientCertContent||||x||x
     * authenticationClientCertPassword||||x||
     * dmrClusterName|x|x||||
     * nodeName|||x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterApiRequestOptions(
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Cluster object.
     * Delete a Cluster object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrCluster(
        dmrClusterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Cluster object.
     * Delete a Cluster object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterApiRequestOptions(
        dmrClusterName: string,
    ): ApiRequestOptions;

    /**
     * Get a Cluster object.
     * Get a Cluster object.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * dmrClusterName|x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterResponse The Cluster object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrCluster(
        dmrClusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Cluster object.
     * Get a Cluster object.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * dmrClusterName|x|||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterApiRequestOptions(
        dmrClusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Cluster object.
     * Update a Cluster object. Any attribute missing from the request will be left unchanged.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword|||x|x||x
     * authenticationClientCertContent|||x|x||x
     * authenticationClientCertPassword|||x|x||
     * directOnlyEnabled||x||||
     * dmrClusterName|x|x||||
     * nodeName||x||||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterResponse The Cluster object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateDmrCluster(
        dmrClusterName: string,
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Cluster object.
     * Update a Cluster object. Any attribute missing from the request will be left unchanged.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword|||x|x||x
     * authenticationClientCertContent|||x|x||x
     * authenticationClientCertPassword|||x|x||
     * directOnlyEnabled||x||||
     * dmrClusterName|x|x||||
     * nodeName||x||||
     * tlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateDmrClusterApiRequestOptions(
        dmrClusterName: string,
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Cluster object.
     * Replace a Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword||||x|x||x
     * authenticationClientCertContent||||x|x||x
     * authenticationClientCertPassword||||x|x||
     * directOnlyEnabled||x|||||
     * dmrClusterName|x||x||||
     * nodeName|||x||||
     * tlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterResponse The Cluster object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceDmrCluster(
        dmrClusterName: string,
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Cluster object.
     * Replace a Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cluster is a provisioned object on a message broker that contains global DMR configuration parameters.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword||||x|x||x
     * authenticationClientCertContent||||x|x||x
     * authenticationClientCertPassword||||x|x||
     * directOnlyEnabled||x|||||
     * dmrClusterName|x||x||||
     * nodeName|||x||||
     * tlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * DmrCluster|authenticationClientCertPassword|authenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceDmrClusterApiRequestOptions(
        dmrClusterName: string,
        body: DmrCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule objects.
     * Get a list of Certificate Matching Rule objects.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRulesResponse The list of Certificate Matching Rule objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRules(
        dmrClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRulesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule objects.
     * Get a list of Certificate Matching Rule objects.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRulesApiRequestOptions(
        dmrClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule object.
     * Create a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterCertMatchingRule(
        dmrClusterName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule object.
     * Create a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterCertMatchingRuleApiRequestOptions(
        dmrClusterName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule object.
     * Delete a Certificate Matching Rule object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterCertMatchingRule(
        dmrClusterName: string,
        ruleName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule object.
     * Delete a Certificate Matching Rule object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterCertMatchingRuleApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule object.
     * Get a Certificate Matching Rule object.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleResponse The Certificate Matching Rule object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRule(
        dmrClusterName: string,
        ruleName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule object.
     * Get a Certificate Matching Rule object.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRuleApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Certificate Matching Rule object.
     * Update a Certificate Matching Rule object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateDmrClusterCertMatchingRule(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Certificate Matching Rule object.
     * Update a Certificate Matching Rule object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateDmrClusterCertMatchingRuleApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Certificate Matching Rule object.
     * Replace a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceDmrClusterCertMatchingRule(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Certificate Matching Rule object.
     * Replace a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given link.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceDmrClusterCertMatchingRuleApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * filterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleAttributeFiltersResponse The list of Certificate Matching Rule Attribute Filter objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRuleAttributeFilters(
        dmrClusterName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleAttributeFiltersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * filterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRuleAttributeFiltersApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule Attribute Filter object.
     * Create a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * filterName|x|x||||
     * ruleName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterCertMatchingRuleAttributeFilter(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule Attribute Filter object.
     * Create a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * filterName|x|x||||
     * ruleName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterCertMatchingRuleAttributeFilterApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule Attribute Filter object.
     * Delete a Certificate Matching Rule Attribute Filter object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterCertMatchingRuleAttributeFilter(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule Attribute Filter object.
     * Delete a Certificate Matching Rule Attribute Filter object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterCertMatchingRuleAttributeFilterApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule Attribute Filter object.
     * Get a Certificate Matching Rule Attribute Filter object.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * filterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRuleAttributeFilter(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule Attribute Filter object.
     * Get a Certificate Matching Rule Attribute Filter object.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * filterName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRuleAttributeFilterApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Certificate Matching Rule Attribute Filter object.
     * Update a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x|x||||
     * filterName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateDmrClusterCertMatchingRuleAttributeFilter(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Certificate Matching Rule Attribute Filter object.
     * Update a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x|x||||
     * filterName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateDmrClusterCertMatchingRuleAttributeFilterApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Certificate Matching Rule Attribute Filter object.
     * Replace a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x||x||||
     * filterName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceDmrClusterCertMatchingRuleAttributeFilter(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Certificate Matching Rule Attribute Filter object.
     * Replace a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule Attribute Filter compares a link attribute to a string.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * dmrClusterName|x||x||||
     * filterName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceDmrClusterCertMatchingRuleAttributeFilterApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        filterName: string,
        body: DmrClusterCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule Condition objects.
     * Get a list of Certificate Matching Rule Condition objects.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleConditionsResponse The list of Certificate Matching Rule Condition objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRuleConditions(
        dmrClusterName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleConditionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule Condition objects.
     * Get a list of Certificate Matching Rule Condition objects.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRuleConditionsApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule Condition object.
     * Create a Certificate Matching Rule Condition object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * ruleName|x||x|||
     * source|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Condition object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleConditionResponse The Certificate Matching Rule Condition object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterCertMatchingRuleCondition(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRuleCondition,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleConditionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule Condition object.
     * Create a Certificate Matching Rule Condition object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * ruleName|x||x|||
     * source|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Condition object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterCertMatchingRuleConditionApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        body: DmrClusterCertMatchingRuleCondition,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule Condition object.
     * Delete a Certificate Matching Rule Condition object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterCertMatchingRuleCondition(
        dmrClusterName: string,
        ruleName: string,
        source: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule Condition object.
     * Delete a Certificate Matching Rule Condition object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterCertMatchingRuleConditionApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        source: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule Condition object.
     * Get a Certificate Matching Rule Condition object.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterCertMatchingRuleConditionResponse The Certificate Matching Rule Condition object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterCertMatchingRuleCondition(
        dmrClusterName: string,
        ruleName: string,
        source: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterCertMatchingRuleConditionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule Condition object.
     * Get a Certificate Matching Rule Condition object.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a link attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterCertMatchingRuleConditionApiRequestOptions(
        dmrClusterName: string,
        ruleName: string,
        source: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Link objects.
     * Get a list of Link objects.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinksResponse The list of Link objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinks(
        dmrClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterLinksResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Link objects.
     * Get a list of Link objects.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinksApiRequestOptions(
        dmrClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Link object.
     * Create a Link object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||||x||x
     * dmrClusterName|x||x|||
     * remoteNodeName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkResponse The Link object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterLink(
        dmrClusterName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Link object.
     * Create a Link object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||||x||x
     * dmrClusterName|x||x|||
     * remoteNodeName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterLinkApiRequestOptions(
        dmrClusterName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Link object.
     * Delete a Link object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterLink(
        dmrClusterName: string,
        remoteNodeName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Link object.
     * Delete a Link object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterLinkApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
    ): ApiRequestOptions;

    /**
     * Get a Link object.
     * Get a Link object.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkResponse The Link object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLink(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Link object.
     * Get a Link object.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationBasicPassword||x||x
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Link object.
     * Update a Link object. Any attribute missing from the request will be left unchanged.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword|||x|x||x
     * authenticationScheme||||x||
     * dmrClusterName|x|x||||
     * egressFlowWindowSize||||x||
     * initiator||||x||
     * remoteNodeName|x|x||||
     * span||||x||
     * transportCompressedEnabled||||x||
     * transportTlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkResponse The Link object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateDmrClusterLink(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Link object.
     * Update a Link object. Any attribute missing from the request will be left unchanged.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword|||x|x||x
     * authenticationScheme||||x||
     * dmrClusterName|x|x||||
     * egressFlowWindowSize||||x||
     * initiator||||x||
     * remoteNodeName|x|x||||
     * span||||x||
     * transportCompressedEnabled||||x||
     * transportTlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateDmrClusterLinkApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Link object.
     * Replace a Link object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword||||x|x||x
     * authenticationScheme|||||x||
     * dmrClusterName|x||x||||
     * egressFlowWindowSize|||||x||
     * initiator|||||x||
     * remoteNodeName|x||x||||
     * span|||||x||
     * transportCompressedEnabled|||||x||
     * transportTlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkResponse The Link object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceDmrClusterLink(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Link object.
     * Replace a Link object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Link connects nodes (either within a Cluster or between two different Clusters) and allows them to exchange topology information, subscriptions and data.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationBasicPassword||||x|x||x
     * authenticationScheme|||||x||
     * dmrClusterName|x||x||||
     * egressFlowWindowSize|||||x||
     * initiator|||||x||
     * remoteNodeName|x||x||||
     * span|||||x||
     * transportCompressedEnabled|||||x||
     * transportTlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceDmrClusterLinkApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLink,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Link Attribute objects.
     * Get a list of Link Attribute objects.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkAttributesResponse The list of Link Attribute objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkAttributes(
        dmrClusterName: string,
        remoteNodeName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterLinkAttributesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Link Attribute objects.
     * Get a list of Link Attribute objects.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkAttributesApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Link Attribute object.
     * Create a Link Attribute object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * attributeName|x|x||||
     * attributeValue|x|x||||
     * dmrClusterName|x||x|||
     * remoteNodeName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link Attribute object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkAttributeResponse The Link Attribute object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterLinkAttribute(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkAttribute,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkAttributeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Link Attribute object.
     * Create a Link Attribute object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * attributeName|x|x||||
     * attributeValue|x|x||||
     * dmrClusterName|x||x|||
     * remoteNodeName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Link Attribute object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterLinkAttributeApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkAttribute,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Link Attribute object.
     * Delete a Link Attribute object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterLinkAttribute(
        dmrClusterName: string,
        remoteNodeName: string,
        attributeName: string,
        attributeValue: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Link Attribute object.
     * Delete a Link Attribute object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterLinkAttributeApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        attributeName: string,
        attributeValue: string,
    ): ApiRequestOptions;

    /**
     * Get a Link Attribute object.
     * Get a Link Attribute object.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkAttributeResponse The Link Attribute object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkAttribute(
        dmrClusterName: string,
        remoteNodeName: string,
        attributeName: string,
        attributeValue: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkAttributeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Link Attribute object.
     * Get a Link Attribute object.
     *
     * A Link Attribute is a key+value pair that can be used to locate a DMR Cluster Link, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * dmrClusterName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkAttributeApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        attributeName: string,
        attributeValue: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Remote Address objects.
     * Get a list of Remote Address objects.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * remoteAddress|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkRemoteAddressesResponse The list of Remote Address objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkRemoteAddresses(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterLinkRemoteAddressesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Remote Address objects.
     * Get a list of Remote Address objects.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * remoteAddress|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkRemoteAddressesApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Remote Address object.
     * Create a Remote Address object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * remoteAddress|x|x||||
     * remoteNodeName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Remote Address object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkRemoteAddressResponse The Remote Address object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterLinkRemoteAddress(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkRemoteAddress,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkRemoteAddressResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Remote Address object.
     * Create a Remote Address object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|||
     * remoteAddress|x|x||||
     * remoteNodeName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Remote Address object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterLinkRemoteAddressApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkRemoteAddress,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Remote Address object.
     * Delete a Remote Address object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param remoteAddress The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterLinkRemoteAddress(
        dmrClusterName: string,
        remoteNodeName: string,
        remoteAddress: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Remote Address object.
     * Delete a Remote Address object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param remoteAddress The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterLinkRemoteAddressApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        remoteAddress: string,
    ): ApiRequestOptions;

    /**
     * Get a Remote Address object.
     * Get a Remote Address object.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * remoteAddress|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param remoteAddress The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkRemoteAddressResponse The Remote Address object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkRemoteAddress(
        dmrClusterName: string,
        remoteNodeName: string,
        remoteAddress: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkRemoteAddressResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Remote Address object.
     * Get a Remote Address object.
     *
     * Each Remote Address, consisting of a FQDN or IP address and optional port, is used to connect to the remote node for this Link. Up to 4 addresses may be provided for each Link, and will be tried on a round-robin basis.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x|||
     * remoteAddress|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param remoteAddress The FQDN or IP address (and optional port) of the remote node. If a port is not provided, it will vary based on the transport encoding: 55555 (plain-text), 55443 (encrypted), or 55003 (compressed).
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkRemoteAddressApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        remoteAddress: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|
     * remoteNodeName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkTlsTrustedCommonNamesResponse The list of Trusted Common Name objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkTlsTrustedCommonNames(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DmrClusterLinkTlsTrustedCommonNamesResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|
     * remoteNodeName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkTlsTrustedCommonNamesApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x||x|
     * remoteNodeName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkTlsTrustedCommonNameResponse The Trusted Common Name object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDmrClusterLinkTlsTrustedCommonName(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x||x|
     * remoteNodeName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDmrClusterLinkTlsTrustedCommonNameApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        body: DmrClusterLinkTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDmrClusterLinkTlsTrustedCommonName(
        dmrClusterName: string,
        remoteNodeName: string,
        tlsTrustedCommonName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDmrClusterLinkTlsTrustedCommonNameApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        tlsTrustedCommonName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|
     * remoteNodeName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DmrClusterLinkTlsTrustedCommonNameResponse The Trusted Common Name object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDmrClusterLinkTlsTrustedCommonName(
        dmrClusterName: string,
        remoteNodeName: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DmrClusterLinkTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the Link are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * dmrClusterName|x||x|
     * remoteNodeName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param dmrClusterName The name of the Cluster.
     * @param remoteNodeName The name of the node at the remote end of the Link.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDmrClusterLinkTlsTrustedCommonNameApiRequestOptions(
        dmrClusterName: string,
        remoteNodeName: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Domain Certificate Authority objects.
     * Get a list of Domain Certificate Authority objects.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DomainCertAuthoritiesResponse The list of Domain Certificate Authority objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDomainCertAuthorities(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<DomainCertAuthoritiesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Domain Certificate Authority objects.
     * Get a list of Domain Certificate Authority objects.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDomainCertAuthoritiesApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Domain Certificate Authority object.
     * Create a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DomainCertAuthorityResponse The Domain Certificate Authority object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createDomainCertAuthority(
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DomainCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Domain Certificate Authority object.
     * Create a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * certAuthorityName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createDomainCertAuthorityApiRequestOptions(
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Domain Certificate Authority object.
     * Delete a Domain Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Certificate Authorities trusted for domain verification.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteDomainCertAuthority(
        certAuthorityName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Domain Certificate Authority object.
     * Delete a Domain Certificate Authority object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Certificate Authorities trusted for domain verification.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteDomainCertAuthorityApiRequestOptions(
        certAuthorityName: string,
    ): ApiRequestOptions;

    /**
     * Get a Domain Certificate Authority object.
     * Get a Domain Certificate Authority object.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DomainCertAuthorityResponse The Domain Certificate Authority object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getDomainCertAuthority(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DomainCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Domain Certificate Authority object.
     * Get a Domain Certificate Authority object.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * certAuthorityName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getDomainCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Domain Certificate Authority object.
     * Update a Domain Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DomainCertAuthorityResponse The Domain Certificate Authority object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateDomainCertAuthority(
        certAuthorityName: string,
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DomainCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Domain Certificate Authority object.
     * Update a Domain Certificate Authority object. Any attribute missing from the request will be left unchanged.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateDomainCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Domain Certificate Authority object.
     * Replace a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns DomainCertAuthorityResponse The Domain Certificate Authority object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceDomainCertAuthority(
        certAuthorityName: string,
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<DomainCertAuthorityResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Domain Certificate Authority object.
     * Replace a Domain Certificate Authority object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Certificate Authorities trusted for domain verification.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * certAuthorityName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.19.
     * @param certAuthorityName The name of the Certificate Authority.
     * @param body The Domain Certificate Authority object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceDomainCertAuthorityApiRequestOptions(
        certAuthorityName: string,
        body: DomainCertAuthority,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Message VPN objects.
     * Get a list of Message VPN objects.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     * distributedCacheManagementEnabled|||x|
     * msgVpnName|x|||
     * replicationBridgeAuthenticationBasicPassword||x||x
     * replicationBridgeAuthenticationClientCertContent||x||x
     * replicationBridgeAuthenticationClientCertPassword||x||
     * replicationEnabledQueueBehavior||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnsResponse The list of Message VPN objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpns(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Message VPN objects.
     * Get a list of Message VPN objects.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     * distributedCacheManagementEnabled|||x|
     * msgVpnName|x|||
     * replicationBridgeAuthenticationBasicPassword||x||x
     * replicationBridgeAuthenticationClientCertContent||x||x
     * replicationBridgeAuthenticationClientCertPassword||x||
     * replicationEnabledQueueBehavior||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnsApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Message VPN object.
     * Create a Message VPN object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     * distributedCacheManagementEnabled|||||x|
     * msgVpnName|x|x||||
     * replicationBridgeAuthenticationBasicPassword||||x||x
     * replicationBridgeAuthenticationClientCertContent||||x||x
     * replicationBridgeAuthenticationClientCertPassword||||x||
     * replicationEnabledQueueBehavior||||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnResponse The Message VPN object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpn(
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Message VPN object.
     * Create a Message VPN object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     * distributedCacheManagementEnabled|||||x|
     * msgVpnName|x|x||||
     * replicationBridgeAuthenticationBasicPassword||||x||x
     * replicationBridgeAuthenticationClientCertContent||||x||x
     * replicationBridgeAuthenticationClientCertPassword||||x||
     * replicationEnabledQueueBehavior||||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnApiRequestOptions(
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Message VPN object.
     * Delete a Message VPN object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpn(
        msgVpnName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Message VPN object.
     * Delete a Message VPN object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnApiRequestOptions(
        msgVpnName: string,
    ): ApiRequestOptions;

    /**
     * Get a Message VPN object.
     * Get a Message VPN object.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     * distributedCacheManagementEnabled|||x|
     * msgVpnName|x|||
     * replicationBridgeAuthenticationBasicPassword||x||x
     * replicationBridgeAuthenticationClientCertContent||x||x
     * replicationBridgeAuthenticationClientCertPassword||x||
     * replicationEnabledQueueBehavior||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnResponse The Message VPN object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpn(
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Message VPN object.
     * Get a Message VPN object.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationOauthDefaultProviderName|||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     * distributedCacheManagementEnabled|||x|
     * msgVpnName|x|||
     * replicationBridgeAuthenticationBasicPassword||x||x
     * replicationBridgeAuthenticationClientCertContent||x||x
     * replicationBridgeAuthenticationClientCertPassword||x||
     * replicationEnabledQueueBehavior||x||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnApiRequestOptions(
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Message VPN object.
     * Update a Message VPN object. Any attribute missing from the request will be left unchanged.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationOauthDefaultProviderName|||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     * distributedCacheManagementEnabled|||||x|
     * msgVpnName|x|x||||
     * replicationBridgeAuthenticationBasicPassword|||x|||x
     * replicationBridgeAuthenticationClientCertContent|||x|||x
     * replicationBridgeAuthenticationClientCertPassword|||x|||
     * replicationEnabledQueueBehavior|||x|||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * alias|global/read-write
     * authenticationBasicEnabled|global/read-write
     * authenticationBasicProfileName|global/read-write
     * authenticationBasicRadiusDomain|global/read-write
     * authenticationBasicType|global/read-write
     * authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationClientCertCertificateMatchingRulesEnabled|global/read-write
     * authenticationClientCertEnabled|global/read-write
     * authenticationClientCertMaxChainDepth|global/read-write
     * authenticationClientCertRevocationCheckMode|global/read-write
     * authenticationClientCertUsernameSource|global/read-write
     * authenticationClientCertValidateDateEnabled|global/read-write
     * authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationKerberosEnabled|global/read-write
     * authenticationOauthEnabled|global/read-write
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * bridgingTlsServerCertMaxChainDepth|global/read-write
     * bridgingTlsServerCertValidateDateEnabled|global/read-write
     * bridgingTlsServerCertValidateNameEnabled|global/read-write
     * dmrEnabled|global/read-write
     * exportSubscriptionsEnabled|global/read-write
     * maxConnectionCount|global/read-write
     * maxEgressFlowCount|global/read-write
     * maxEndpointCount|global/read-write
     * maxIngressFlowCount|global/read-write
     * maxMsgSpoolUsage|global/read-write
     * maxSubscriptionCount|global/read-write
     * maxTransactedSessionCount|global/read-write
     * maxTransactionCount|global/read-write
     * mqttRetainMaxMemory|global/read-write
     * replicationBridgeAuthenticationBasicClientUsername|global/read-write
     * replicationBridgeAuthenticationBasicPassword|global/read-write
     * replicationBridgeAuthenticationClientCertContent|global/read-write
     * replicationBridgeAuthenticationClientCertPassword|global/read-write
     * replicationBridgeAuthenticationScheme|global/read-write
     * replicationBridgeCompressedDataEnabled|global/read-write
     * replicationBridgeEgressFlowWindowSize|global/read-write
     * replicationBridgeRetryDelay|global/read-write
     * replicationBridgeTlsEnabled|global/read-write
     * replicationBridgeUnidirectionalClientProfileName|global/read-write
     * replicationEnabled|global/read-write
     * replicationEnabledQueueBehavior|global/read-write
     * replicationQueueMaxMsgSpoolUsage|global/read-write
     * replicationRole|global/read-write
     * restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * restTlsServerCertMaxChainDepth|global/read-write
     * restTlsServerCertValidateDateEnabled|global/read-write
     * restTlsServerCertValidateNameEnabled|global/read-write
     * sempOverMsgBusAdminClientEnabled|global/read-write
     * sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
     * sempOverMsgBusAdminEnabled|global/read-write
     * sempOverMsgBusEnabled|global/read-write
     * sempOverMsgBusShowEnabled|global/read-write
     * serviceAmqpMaxConnectionCount|global/read-write
     * serviceAmqpPlainTextListenPort|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceMqttMaxConnectionCount|global/read-write
     * serviceMqttPlainTextListenPort|global/read-write
     * serviceMqttTlsListenPort|global/read-write
     * serviceMqttTlsWebSocketListenPort|global/read-write
     * serviceMqttWebSocketListenPort|global/read-write
     * serviceRestIncomingMaxConnectionCount|global/read-write
     * serviceRestIncomingPlainTextListenPort|global/read-write
     * serviceRestIncomingTlsListenPort|global/read-write
     * serviceRestOutgoingMaxConnectionCount|global/read-write
     * serviceSmfMaxConnectionCount|global/read-write
     * serviceWebMaxConnectionCount|global/read-write
     *
     *
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnResponse The Message VPN object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpn(
        msgVpnName: string,
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Message VPN object.
     * Update a Message VPN object. Any attribute missing from the request will be left unchanged.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationOauthDefaultProviderName|||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     * distributedCacheManagementEnabled|||||x|
     * msgVpnName|x|x||||
     * replicationBridgeAuthenticationBasicPassword|||x|||x
     * replicationBridgeAuthenticationClientCertContent|||x|||x
     * replicationBridgeAuthenticationClientCertPassword|||x|||
     * replicationEnabledQueueBehavior|||x|||
     * restTlsServerCertEnforceTrustedCommonNameEnabled|||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * alias|global/read-write
     * authenticationBasicEnabled|global/read-write
     * authenticationBasicProfileName|global/read-write
     * authenticationBasicRadiusDomain|global/read-write
     * authenticationBasicType|global/read-write
     * authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationClientCertCertificateMatchingRulesEnabled|global/read-write
     * authenticationClientCertEnabled|global/read-write
     * authenticationClientCertMaxChainDepth|global/read-write
     * authenticationClientCertRevocationCheckMode|global/read-write
     * authenticationClientCertUsernameSource|global/read-write
     * authenticationClientCertValidateDateEnabled|global/read-write
     * authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationKerberosEnabled|global/read-write
     * authenticationOauthEnabled|global/read-write
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * bridgingTlsServerCertMaxChainDepth|global/read-write
     * bridgingTlsServerCertValidateDateEnabled|global/read-write
     * bridgingTlsServerCertValidateNameEnabled|global/read-write
     * dmrEnabled|global/read-write
     * exportSubscriptionsEnabled|global/read-write
     * maxConnectionCount|global/read-write
     * maxEgressFlowCount|global/read-write
     * maxEndpointCount|global/read-write
     * maxIngressFlowCount|global/read-write
     * maxMsgSpoolUsage|global/read-write
     * maxSubscriptionCount|global/read-write
     * maxTransactedSessionCount|global/read-write
     * maxTransactionCount|global/read-write
     * mqttRetainMaxMemory|global/read-write
     * replicationBridgeAuthenticationBasicClientUsername|global/read-write
     * replicationBridgeAuthenticationBasicPassword|global/read-write
     * replicationBridgeAuthenticationClientCertContent|global/read-write
     * replicationBridgeAuthenticationClientCertPassword|global/read-write
     * replicationBridgeAuthenticationScheme|global/read-write
     * replicationBridgeCompressedDataEnabled|global/read-write
     * replicationBridgeEgressFlowWindowSize|global/read-write
     * replicationBridgeRetryDelay|global/read-write
     * replicationBridgeTlsEnabled|global/read-write
     * replicationBridgeUnidirectionalClientProfileName|global/read-write
     * replicationEnabled|global/read-write
     * replicationEnabledQueueBehavior|global/read-write
     * replicationQueueMaxMsgSpoolUsage|global/read-write
     * replicationRole|global/read-write
     * restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * restTlsServerCertMaxChainDepth|global/read-write
     * restTlsServerCertValidateDateEnabled|global/read-write
     * restTlsServerCertValidateNameEnabled|global/read-write
     * sempOverMsgBusAdminClientEnabled|global/read-write
     * sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
     * sempOverMsgBusAdminEnabled|global/read-write
     * sempOverMsgBusEnabled|global/read-write
     * sempOverMsgBusShowEnabled|global/read-write
     * serviceAmqpMaxConnectionCount|global/read-write
     * serviceAmqpPlainTextListenPort|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceMqttMaxConnectionCount|global/read-write
     * serviceMqttPlainTextListenPort|global/read-write
     * serviceMqttTlsListenPort|global/read-write
     * serviceMqttTlsWebSocketListenPort|global/read-write
     * serviceMqttWebSocketListenPort|global/read-write
     * serviceRestIncomingMaxConnectionCount|global/read-write
     * serviceRestIncomingPlainTextListenPort|global/read-write
     * serviceRestIncomingTlsListenPort|global/read-write
     * serviceRestOutgoingMaxConnectionCount|global/read-write
     * serviceSmfMaxConnectionCount|global/read-write
     * serviceWebMaxConnectionCount|global/read-write
     *
     *
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnApiRequestOptions(
        msgVpnName: string,
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Message VPN object.
     * Replace a Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationOauthDefaultProviderName||||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     * distributedCacheManagementEnabled||||||x|
     * msgVpnName|x||x||||
     * replicationBridgeAuthenticationBasicPassword||||x|||x
     * replicationBridgeAuthenticationClientCertContent||||x|||x
     * replicationBridgeAuthenticationClientCertPassword||||x|||
     * replicationEnabledQueueBehavior||||x|||
     * restTlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * alias|global/read-write
     * authenticationBasicEnabled|global/read-write
     * authenticationBasicProfileName|global/read-write
     * authenticationBasicRadiusDomain|global/read-write
     * authenticationBasicType|global/read-write
     * authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationClientCertCertificateMatchingRulesEnabled|global/read-write
     * authenticationClientCertEnabled|global/read-write
     * authenticationClientCertMaxChainDepth|global/read-write
     * authenticationClientCertRevocationCheckMode|global/read-write
     * authenticationClientCertUsernameSource|global/read-write
     * authenticationClientCertValidateDateEnabled|global/read-write
     * authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationKerberosEnabled|global/read-write
     * authenticationOauthEnabled|global/read-write
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * bridgingTlsServerCertMaxChainDepth|global/read-write
     * bridgingTlsServerCertValidateDateEnabled|global/read-write
     * bridgingTlsServerCertValidateNameEnabled|global/read-write
     * dmrEnabled|global/read-write
     * exportSubscriptionsEnabled|global/read-write
     * maxConnectionCount|global/read-write
     * maxEgressFlowCount|global/read-write
     * maxEndpointCount|global/read-write
     * maxIngressFlowCount|global/read-write
     * maxMsgSpoolUsage|global/read-write
     * maxSubscriptionCount|global/read-write
     * maxTransactedSessionCount|global/read-write
     * maxTransactionCount|global/read-write
     * mqttRetainMaxMemory|global/read-write
     * replicationBridgeAuthenticationBasicClientUsername|global/read-write
     * replicationBridgeAuthenticationBasicPassword|global/read-write
     * replicationBridgeAuthenticationClientCertContent|global/read-write
     * replicationBridgeAuthenticationClientCertPassword|global/read-write
     * replicationBridgeAuthenticationScheme|global/read-write
     * replicationBridgeCompressedDataEnabled|global/read-write
     * replicationBridgeEgressFlowWindowSize|global/read-write
     * replicationBridgeRetryDelay|global/read-write
     * replicationBridgeTlsEnabled|global/read-write
     * replicationBridgeUnidirectionalClientProfileName|global/read-write
     * replicationEnabled|global/read-write
     * replicationEnabledQueueBehavior|global/read-write
     * replicationQueueMaxMsgSpoolUsage|global/read-write
     * replicationRole|global/read-write
     * restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * restTlsServerCertMaxChainDepth|global/read-write
     * restTlsServerCertValidateDateEnabled|global/read-write
     * restTlsServerCertValidateNameEnabled|global/read-write
     * sempOverMsgBusAdminClientEnabled|global/read-write
     * sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
     * sempOverMsgBusAdminEnabled|global/read-write
     * sempOverMsgBusEnabled|global/read-write
     * sempOverMsgBusShowEnabled|global/read-write
     * serviceAmqpMaxConnectionCount|global/read-write
     * serviceAmqpPlainTextListenPort|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceMqttMaxConnectionCount|global/read-write
     * serviceMqttPlainTextListenPort|global/read-write
     * serviceMqttTlsListenPort|global/read-write
     * serviceMqttTlsWebSocketListenPort|global/read-write
     * serviceMqttWebSocketListenPort|global/read-write
     * serviceRestIncomingMaxConnectionCount|global/read-write
     * serviceRestIncomingPlainTextListenPort|global/read-write
     * serviceRestIncomingTlsListenPort|global/read-write
     * serviceRestOutgoingMaxConnectionCount|global/read-write
     * serviceSmfMaxConnectionCount|global/read-write
     * serviceWebMaxConnectionCount|global/read-write
     *
     *
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnResponse The Message VPN object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpn(
        msgVpnName: string,
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Message VPN object.
     * Replace a Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Message VPNs (Virtual Private Networks) allow for the segregation of topic space and clients. They also group clients connecting to a network of message brokers, such that messages published within a particular group are only visible to that group's clients.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationOauthDefaultProviderName||||||x|
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     * distributedCacheManagementEnabled||||||x|
     * msgVpnName|x||x||||
     * replicationBridgeAuthenticationBasicPassword||||x|||x
     * replicationBridgeAuthenticationClientCertContent||||x|||x
     * replicationBridgeAuthenticationClientCertPassword||||x|||
     * replicationEnabledQueueBehavior||||x|||
     * restTlsServerCertEnforceTrustedCommonNameEnabled||||||x|
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     * MsgVpn|authenticationBasicProfileName|authenticationBasicType|
     * MsgVpn|authorizationProfileName|authorizationType|
     * MsgVpn|eventPublishTopicFormatMqttEnabled|eventPublishTopicFormatSmfEnabled|
     * MsgVpn|eventPublishTopicFormatSmfEnabled|eventPublishTopicFormatMqttEnabled|
     * MsgVpn|replicationBridgeAuthenticationBasicClientUsername|replicationBridgeAuthenticationBasicPassword|
     * MsgVpn|replicationBridgeAuthenticationBasicPassword|replicationBridgeAuthenticationBasicClientUsername|
     * MsgVpn|replicationBridgeAuthenticationClientCertPassword|replicationBridgeAuthenticationClientCertContent|
     * MsgVpn|replicationEnabledQueueBehavior|replicationEnabled|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * alias|global/read-write
     * authenticationBasicEnabled|global/read-write
     * authenticationBasicProfileName|global/read-write
     * authenticationBasicRadiusDomain|global/read-write
     * authenticationBasicType|global/read-write
     * authenticationClientCertAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationClientCertCertificateMatchingRulesEnabled|global/read-write
     * authenticationClientCertEnabled|global/read-write
     * authenticationClientCertMaxChainDepth|global/read-write
     * authenticationClientCertRevocationCheckMode|global/read-write
     * authenticationClientCertUsernameSource|global/read-write
     * authenticationClientCertValidateDateEnabled|global/read-write
     * authenticationKerberosAllowApiProvidedUsernameEnabled|global/read-write
     * authenticationKerberosEnabled|global/read-write
     * authenticationOauthEnabled|global/read-write
     * bridgingTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * bridgingTlsServerCertMaxChainDepth|global/read-write
     * bridgingTlsServerCertValidateDateEnabled|global/read-write
     * bridgingTlsServerCertValidateNameEnabled|global/read-write
     * dmrEnabled|global/read-write
     * exportSubscriptionsEnabled|global/read-write
     * maxConnectionCount|global/read-write
     * maxEgressFlowCount|global/read-write
     * maxEndpointCount|global/read-write
     * maxIngressFlowCount|global/read-write
     * maxMsgSpoolUsage|global/read-write
     * maxSubscriptionCount|global/read-write
     * maxTransactedSessionCount|global/read-write
     * maxTransactionCount|global/read-write
     * mqttRetainMaxMemory|global/read-write
     * replicationBridgeAuthenticationBasicClientUsername|global/read-write
     * replicationBridgeAuthenticationBasicPassword|global/read-write
     * replicationBridgeAuthenticationClientCertContent|global/read-write
     * replicationBridgeAuthenticationClientCertPassword|global/read-write
     * replicationBridgeAuthenticationScheme|global/read-write
     * replicationBridgeCompressedDataEnabled|global/read-write
     * replicationBridgeEgressFlowWindowSize|global/read-write
     * replicationBridgeRetryDelay|global/read-write
     * replicationBridgeTlsEnabled|global/read-write
     * replicationBridgeUnidirectionalClientProfileName|global/read-write
     * replicationEnabled|global/read-write
     * replicationEnabledQueueBehavior|global/read-write
     * replicationQueueMaxMsgSpoolUsage|global/read-write
     * replicationRole|global/read-write
     * restTlsServerCertEnforceTrustedCommonNameEnabled|global/read-write
     * restTlsServerCertMaxChainDepth|global/read-write
     * restTlsServerCertValidateDateEnabled|global/read-write
     * restTlsServerCertValidateNameEnabled|global/read-write
     * sempOverMsgBusAdminClientEnabled|global/read-write
     * sempOverMsgBusAdminDistributedCacheEnabled|global/read-write
     * sempOverMsgBusAdminEnabled|global/read-write
     * sempOverMsgBusEnabled|global/read-write
     * sempOverMsgBusShowEnabled|global/read-write
     * serviceAmqpMaxConnectionCount|global/read-write
     * serviceAmqpPlainTextListenPort|global/read-write
     * serviceAmqpTlsListenPort|global/read-write
     * serviceMqttMaxConnectionCount|global/read-write
     * serviceMqttPlainTextListenPort|global/read-write
     * serviceMqttTlsListenPort|global/read-write
     * serviceMqttTlsWebSocketListenPort|global/read-write
     * serviceMqttWebSocketListenPort|global/read-write
     * serviceRestIncomingMaxConnectionCount|global/read-write
     * serviceRestIncomingPlainTextListenPort|global/read-write
     * serviceRestIncomingTlsListenPort|global/read-write
     * serviceRestOutgoingMaxConnectionCount|global/read-write
     * serviceSmfMaxConnectionCount|global/read-write
     * serviceWebMaxConnectionCount|global/read-write
     *
     *
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnApiRequestOptions(
        msgVpnName: string,
        body: MsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of ACL Profile objects.
     * Get a list of ACL Profile objects.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilesResponse The list of ACL Profile objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfiles(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of ACL Profile objects.
     * Get a list of ACL Profile objects.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfilesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an ACL Profile object.
     * Create an ACL Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileResponse The ACL Profile object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfile(
        msgVpnName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an ACL Profile object.
     * Create an ACL Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfileApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an ACL Profile object.
     * Delete an ACL Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfile(
        msgVpnName: string,
        aclProfileName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an ACL Profile object.
     * Delete an ACL Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfileApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
    ): ApiRequestOptions;

    /**
     * Get an ACL Profile object.
     * Get an ACL Profile object.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileResponse The ACL Profile object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfile(
        msgVpnName: string,
        aclProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an ACL Profile object.
     * Get an ACL Profile object.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an ACL Profile object.
     * Update an ACL Profile object. Any attribute missing from the request will be left unchanged.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileResponse The ACL Profile object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnAclProfile(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an ACL Profile object.
     * Update an ACL Profile object. Any attribute missing from the request will be left unchanged.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnAclProfileApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an ACL Profile object.
     * Replace an ACL Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileResponse The ACL Profile object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnAclProfile(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an ACL Profile object.
     * Replace an ACL Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An ACL Profile controls whether an authenticated client is permitted to establish a connection with the message broker or permitted to publish and subscribe to specific topics.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The ACL Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnAclProfileApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Client Connect Exception objects.
     * Get a list of Client Connect Exception objects.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * clientConnectExceptionAddress|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileClientConnectExceptionsResponse The list of Client Connect Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileClientConnectExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileClientConnectExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Client Connect Exception objects.
     * Get a list of Client Connect Exception objects.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * clientConnectExceptionAddress|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileClientConnectExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Client Connect Exception object.
     * Create a Client Connect Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * clientConnectExceptionAddress|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Client Connect Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileClientConnectExceptionResponse The Client Connect Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfileClientConnectException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileClientConnectException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileClientConnectExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Client Connect Exception object.
     * Create a Client Connect Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * clientConnectExceptionAddress|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Client Connect Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfileClientConnectExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileClientConnectException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Client Connect Exception object.
     * Delete a Client Connect Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param clientConnectExceptionAddress The IP address/netmask of the client connect exception in CIDR form.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfileClientConnectException(
        msgVpnName: string,
        aclProfileName: string,
        clientConnectExceptionAddress: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Client Connect Exception object.
     * Delete a Client Connect Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param clientConnectExceptionAddress The IP address/netmask of the client connect exception in CIDR form.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfileClientConnectExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        clientConnectExceptionAddress: string,
    ): ApiRequestOptions;

    /**
     * Get a Client Connect Exception object.
     * Get a Client Connect Exception object.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * clientConnectExceptionAddress|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param clientConnectExceptionAddress The IP address/netmask of the client connect exception in CIDR form.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileClientConnectExceptionResponse The Client Connect Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileClientConnectException(
        msgVpnName: string,
        aclProfileName: string,
        clientConnectExceptionAddress: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileClientConnectExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Client Connect Exception object.
     * Get a Client Connect Exception object.
     *
     * A Client Connect Exception is an exception to the default action to take when a client using the ACL Profile connects to the Message VPN. Exceptions must be expressed as an IP address/netmask in CIDR form.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * clientConnectExceptionAddress|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param clientConnectExceptionAddress The IP address/netmask of the client connect exception in CIDR form.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileClientConnectExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        clientConnectExceptionAddress: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Publish Topic Exception objects.
     * Get a list of Publish Topic Exception objects.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * publishExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishExceptionsResponse The list of Publish Topic Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfilePublishExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Publish Topic Exception objects.
     * Get a list of Publish Topic Exception objects.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * publishExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfilePublishExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Publish Topic Exception object.
     * Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x||x|
     * msgVpnName|x||x||x|
     * publishExceptionTopic|x|x|||x|
     * topicSyntax|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Publish Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishExceptionResponse The Publish Topic Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfilePublishException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfilePublishException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishExceptionResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Publish Topic Exception object.
     * Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x||x|
     * msgVpnName|x||x||x|
     * publishExceptionTopic|x|x|||x|
     * topicSyntax|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Publish Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfilePublishExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfilePublishException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Publish Topic Exception object.
     * Delete a Publish Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfilePublishException(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        publishExceptionTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Publish Topic Exception object.
     * Delete a Publish Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfilePublishExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        publishExceptionTopic: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Publish Topic Exception object.
     * Get a Publish Topic Exception object.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * publishExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishExceptionResponse The Publish Topic Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfilePublishException(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        publishExceptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishExceptionResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Publish Topic Exception object.
     * Get a Publish Topic Exception object.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * publishExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by publishTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfilePublishExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        publishExceptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Publish Topic Exception objects.
     * Get a list of Publish Topic Exception objects.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * publishTopicException|x|||
     * publishTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishTopicExceptionsResponse The list of Publish Topic Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfilePublishTopicExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishTopicExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Publish Topic Exception objects.
     * Get a list of Publish Topic Exception objects.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * publishTopicException|x|||
     * publishTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfilePublishTopicExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Publish Topic Exception object.
     * Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * publishTopicException|x|x||||
     * publishTopicExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Publish Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishTopicExceptionResponse The Publish Topic Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfilePublishTopicException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfilePublishTopicException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishTopicExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Publish Topic Exception object.
     * Create a Publish Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * publishTopicException|x|x||||
     * publishTopicExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Publish Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfilePublishTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfilePublishTopicException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Publish Topic Exception object.
     * Delete a Publish Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param publishTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfilePublishTopicException(
        msgVpnName: string,
        aclProfileName: string,
        publishTopicExceptionSyntax: string,
        publishTopicException: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Publish Topic Exception object.
     * Delete a Publish Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param publishTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfilePublishTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        publishTopicExceptionSyntax: string,
        publishTopicException: string,
    ): ApiRequestOptions;

    /**
     * Get a Publish Topic Exception object.
     * Get a Publish Topic Exception object.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * publishTopicException|x|||
     * publishTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param publishTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfilePublishTopicExceptionResponse The Publish Topic Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfilePublishTopicException(
        msgVpnName: string,
        aclProfileName: string,
        publishTopicExceptionSyntax: string,
        publishTopicException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfilePublishTopicExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Publish Topic Exception object.
     * Get a Publish Topic Exception object.
     *
     * A Publish Topic Exception is an exception to the default action to take when a client using the ACL Profile publishes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * publishTopicException|x|||
     * publishTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param publishTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param publishTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfilePublishTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        publishTopicExceptionSyntax: string,
        publishTopicException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Subscribe Topic Exception objects.
     * Get a list of Subscribe Topic Exception objects.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * subscribeExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeExceptionsResponse The list of Subscribe Topic Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Subscribe Topic Exception objects.
     * Get a list of Subscribe Topic Exception objects.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * subscribeExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Subscribe Topic Exception object.
     * Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x||x|
     * msgVpnName|x||x||x|
     * subscribeExceptionTopic|x|x|||x|
     * topicSyntax|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeExceptionResponse The Subscribe Topic Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfileSubscribeException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeExceptionResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Subscribe Topic Exception object.
     * Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x||x|
     * msgVpnName|x||x||x|
     * subscribeExceptionTopic|x|x|||x|
     * topicSyntax|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfileSubscribeExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Subscribe Topic Exception object.
     * Delete a Subscribe Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfileSubscribeException(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        subscribeExceptionTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Subscribe Topic Exception object.
     * Delete a Subscribe Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfileSubscribeExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        subscribeExceptionTopic: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Subscribe Topic Exception object.
     * Get a Subscribe Topic Exception object.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * subscribeExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeExceptionResponse The Subscribe Topic Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeException(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        subscribeExceptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeExceptionResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Subscribe Topic Exception object.
     * Get a Subscribe Topic Exception object.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|
     * msgVpnName|x||x|
     * subscribeExceptionTopic|x||x|
     * topicSyntax|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.14. Replaced by subscribeTopicExceptions.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param topicSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeExceptionTopic The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        topicSyntax: string,
        subscribeExceptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Subscribe Share Name Exception objects.
     * Get a list of Subscribe Share Name Exception objects.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeShareNameException|x|||
     * subscribeShareNameExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeShareNameExceptionsResponse The list of Subscribe Share Name Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeShareNameExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeShareNameExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Subscribe Share Name Exception objects.
     * Get a list of Subscribe Share Name Exception objects.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeShareNameException|x|||
     * subscribeShareNameExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeShareNameExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Subscribe Share Name Exception object.
     * Create a Subscribe Share Name Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * subscribeShareNameException|x|x||||
     * subscribeShareNameExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Share Name Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeShareNameExceptionResponse The Subscribe Share Name Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfileSubscribeShareNameException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeShareNameException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeShareNameExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Subscribe Share Name Exception object.
     * Create a Subscribe Share Name Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * subscribeShareNameException|x|x||||
     * subscribeShareNameExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Share Name Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfileSubscribeShareNameExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeShareNameException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Subscribe Share Name Exception object.
     * Delete a Subscribe Share Name Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeShareNameExceptionSyntax The syntax of the subscribe share name for the exception to the default action taken.
     * @param subscribeShareNameException The subscribe share name exception to the default action taken. May include wildcard characters.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfileSubscribeShareNameException(
        msgVpnName: string,
        aclProfileName: string,
        subscribeShareNameExceptionSyntax: string,
        subscribeShareNameException: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Subscribe Share Name Exception object.
     * Delete a Subscribe Share Name Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeShareNameExceptionSyntax The syntax of the subscribe share name for the exception to the default action taken.
     * @param subscribeShareNameException The subscribe share name exception to the default action taken. May include wildcard characters.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfileSubscribeShareNameExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        subscribeShareNameExceptionSyntax: string,
        subscribeShareNameException: string,
    ): ApiRequestOptions;

    /**
     * Get a Subscribe Share Name Exception object.
     * Get a Subscribe Share Name Exception object.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeShareNameException|x|||
     * subscribeShareNameExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeShareNameExceptionSyntax The syntax of the subscribe share name for the exception to the default action taken.
     * @param subscribeShareNameException The subscribe share name exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeShareNameExceptionResponse The Subscribe Share Name Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeShareNameException(
        msgVpnName: string,
        aclProfileName: string,
        subscribeShareNameExceptionSyntax: string,
        subscribeShareNameException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeShareNameExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Subscribe Share Name Exception object.
     * Get a Subscribe Share Name Exception object.
     *
     * A Subscribe Share Name Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a share-name subscription in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeShareNameException|x|||
     * subscribeShareNameExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeShareNameExceptionSyntax The syntax of the subscribe share name for the exception to the default action taken.
     * @param subscribeShareNameException The subscribe share name exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeShareNameExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        subscribeShareNameExceptionSyntax: string,
        subscribeShareNameException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Subscribe Topic Exception objects.
     * Get a list of Subscribe Topic Exception objects.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeTopicException|x|||
     * subscribeTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeTopicExceptionsResponse The list of Subscribe Topic Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeTopicExceptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeTopicExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Subscribe Topic Exception objects.
     * Get a list of Subscribe Topic Exception objects.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeTopicException|x|||
     * subscribeTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeTopicExceptionsApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Subscribe Topic Exception object.
     * Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * subscribeTopicException|x|x||||
     * subscribeTopicExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeTopicExceptionResponse The Subscribe Topic Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAclProfileSubscribeTopicException(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeTopicException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeTopicExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Subscribe Topic Exception object.
     * Create a Subscribe Topic Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * aclProfileName|x||x|||
     * msgVpnName|x||x|||
     * subscribeTopicException|x|x||||
     * subscribeTopicExceptionSyntax|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param body The Subscribe Topic Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAclProfileSubscribeTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        body: MsgVpnAclProfileSubscribeTopicException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Subscribe Topic Exception object.
     * Delete a Subscribe Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAclProfileSubscribeTopicException(
        msgVpnName: string,
        aclProfileName: string,
        subscribeTopicExceptionSyntax: string,
        subscribeTopicException: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Subscribe Topic Exception object.
     * Delete a Subscribe Topic Exception object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAclProfileSubscribeTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        subscribeTopicExceptionSyntax: string,
        subscribeTopicException: string,
    ): ApiRequestOptions;

    /**
     * Get a Subscribe Topic Exception object.
     * Get a Subscribe Topic Exception object.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeTopicException|x|||
     * subscribeTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAclProfileSubscribeTopicExceptionResponse The Subscribe Topic Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAclProfileSubscribeTopicException(
        msgVpnName: string,
        aclProfileName: string,
        subscribeTopicExceptionSyntax: string,
        subscribeTopicException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAclProfileSubscribeTopicExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Subscribe Topic Exception object.
     * Get a Subscribe Topic Exception object.
     *
     * A Subscribe Topic Exception is an exception to the default action to take when a client using the ACL Profile subscribes to a topic in the Message VPN. Exceptions must be expressed as a topic.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * aclProfileName|x|||
     * msgVpnName|x|||
     * subscribeTopicException|x|||
     * subscribeTopicExceptionSyntax|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param aclProfileName The name of the ACL Profile.
     * @param subscribeTopicExceptionSyntax The syntax of the topic for the exception to the default action taken.
     * @param subscribeTopicException The topic for the exception to the default action taken. May include wildcard characters.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAclProfileSubscribeTopicExceptionApiRequestOptions(
        msgVpnName: string,
        aclProfileName: string,
        subscribeTopicExceptionSyntax: string,
        subscribeTopicException: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of OAuth Profile objects.
     * Get a list of OAuth Profile objects.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfilesResponse The list of OAuth Profile objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfiles(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfilesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of OAuth Profile objects.
     * Get a list of OAuth Profile objects.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfilesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an OAuth Profile object.
     * Create an OAuth Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientSecret||||x||x
     * msgVpnName|x||x|||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResponse The OAuth Profile object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAuthenticationOauthProfile(
        msgVpnName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an OAuth Profile object.
     * Create an OAuth Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientSecret||||x||x
     * msgVpnName|x||x|||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAuthenticationOauthProfileApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an OAuth Profile object.
     * Delete an OAuth Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAuthenticationOauthProfile(
        msgVpnName: string,
        oauthProfileName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an OAuth Profile object.
     * Delete an OAuth Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAuthenticationOauthProfileApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
    ): ApiRequestOptions;

    /**
     * Get an OAuth Profile object.
     * Get an OAuth Profile object.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResponse The OAuth Profile object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfile(
        msgVpnName: string,
        oauthProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an OAuth Profile object.
     * Get an OAuth Profile object.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfileApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an OAuth Profile object.
     * Update an OAuth Profile object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientSecret|||x|||x
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResponse The OAuth Profile object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnAuthenticationOauthProfile(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an OAuth Profile object.
     * Update an OAuth Profile object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientSecret|||x|||x
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnAuthenticationOauthProfileApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an OAuth Profile object.
     * Replace an OAuth Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientSecret||||x|||x
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResponse The OAuth Profile object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnAuthenticationOauthProfile(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an OAuth Profile object.
     * Replace an OAuth Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientSecret||||x|||x
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnAuthenticationOauthProfileApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse The list of Required Claim objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfileClientRequiredClaims(
        msgVpnName: string,
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileClientRequiredClaimsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfileClientRequiredClaimsApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|x||||
     * clientRequiredClaimValue||x||||
     * msgVpnName|x||x|||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse The Required Claim object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAuthenticationOauthProfileClientRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfileClientRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|x||||
     * clientRequiredClaimValue||x||||
     * msgVpnName|x||x|||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAuthenticationOauthProfileClientRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfileClientRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAuthenticationOauthProfileClientRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        clientRequiredClaimName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAuthenticationOauthProfileClientRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        clientRequiredClaimName: string,
    ): ApiRequestOptions;

    /**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse The Required Claim object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfileClientRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        clientRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileClientRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfileClientRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        clientRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse The list of Required Claim objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaims(
        msgVpnName: string,
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaimsApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * oauthProfileName|x||x|||
     * resourceServerRequiredClaimName|x|x||||
     * resourceServerRequiredClaimValue||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse The Required Claim object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAuthenticationOauthProfileResourceServerRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * oauthProfileName|x||x|||
     * resourceServerRequiredClaimName|x|x||||
     * resourceServerRequiredClaimValue||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAuthenticationOauthProfileResourceServerRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        body: MsgVpnAuthenticationOauthProfileResourceServerRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAuthenticationOauthProfileResourceServerRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAuthenticationOauthProfileResourceServerRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
    ): ApiRequestOptions;

    /**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse The Required Claim object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaim(
        msgVpnName: string,
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProfileResourceServerRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.25.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProfileResourceServerRequiredClaimApiRequestOptions(
        msgVpnName: string,
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of OAuth Provider objects.
     * Get a list of OAuth Provider objects.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * audienceClaimName|||x|
     * audienceClaimSource|||x|
     * audienceClaimValue|||x|
     * audienceValidationEnabled|||x|
     * authorizationGroupClaimName|||x|
     * authorizationGroupClaimSource|||x|
     * authorizationGroupEnabled|||x|
     * disconnectOnTokenExpirationEnabled|||x|
     * enabled|||x|
     * jwksRefreshInterval|||x|
     * jwksUri|||x|
     * msgVpnName|x||x|
     * oauthProviderName|x||x|
     * tokenIgnoreTimeLimitsEnabled|||x|
     * tokenIntrospectionParameterName|||x|
     * tokenIntrospectionPassword||x|x|x
     * tokenIntrospectionTimeout|||x|
     * tokenIntrospectionUri|||x|
     * tokenIntrospectionUsername|||x|
     * usernameClaimName|||x|
     * usernameClaimSource|||x|
     * usernameValidateEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProvidersResponse The list of OAuth Provider objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProviders(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProvidersResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of OAuth Provider objects.
     * Get a list of OAuth Provider objects.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * audienceClaimName|||x|
     * audienceClaimSource|||x|
     * audienceClaimValue|||x|
     * audienceValidationEnabled|||x|
     * authorizationGroupClaimName|||x|
     * authorizationGroupClaimSource|||x|
     * authorizationGroupEnabled|||x|
     * disconnectOnTokenExpirationEnabled|||x|
     * enabled|||x|
     * jwksRefreshInterval|||x|
     * jwksUri|||x|
     * msgVpnName|x||x|
     * oauthProviderName|x||x|
     * tokenIgnoreTimeLimitsEnabled|||x|
     * tokenIntrospectionParameterName|||x|
     * tokenIntrospectionPassword||x|x|x
     * tokenIntrospectionTimeout|||x|
     * tokenIntrospectionUri|||x|
     * tokenIntrospectionUsername|||x|
     * usernameClaimName|||x|
     * usernameClaimSource|||x|
     * usernameValidateEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProvidersApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create an OAuth Provider object.
     * Create an OAuth Provider object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * audienceClaimName|||||x|
     * audienceClaimSource|||||x|
     * audienceClaimValue|||||x|
     * audienceValidationEnabled|||||x|
     * authorizationGroupClaimName|||||x|
     * authorizationGroupClaimSource|||||x|
     * authorizationGroupEnabled|||||x|
     * disconnectOnTokenExpirationEnabled|||||x|
     * enabled|||||x|
     * jwksRefreshInterval|||||x|
     * jwksUri|||||x|
     * msgVpnName|x||x||x|
     * oauthProviderName|x|x|||x|
     * tokenIgnoreTimeLimitsEnabled|||||x|
     * tokenIntrospectionParameterName|||||x|
     * tokenIntrospectionPassword||||x|x|x
     * tokenIntrospectionTimeout|||||x|
     * tokenIntrospectionUri|||||x|
     * tokenIntrospectionUsername|||||x|
     * usernameClaimName|||||x|
     * usernameClaimSource|||||x|
     * usernameValidateEnabled|||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProviderResponse The OAuth Provider object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAuthenticationOauthProvider(
        msgVpnName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProviderResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create an OAuth Provider object.
     * Create an OAuth Provider object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * audienceClaimName|||||x|
     * audienceClaimSource|||||x|
     * audienceClaimValue|||||x|
     * audienceValidationEnabled|||||x|
     * authorizationGroupClaimName|||||x|
     * authorizationGroupClaimSource|||||x|
     * authorizationGroupEnabled|||||x|
     * disconnectOnTokenExpirationEnabled|||||x|
     * enabled|||||x|
     * jwksRefreshInterval|||||x|
     * jwksUri|||||x|
     * msgVpnName|x||x||x|
     * oauthProviderName|x|x|||x|
     * tokenIgnoreTimeLimitsEnabled|||||x|
     * tokenIntrospectionParameterName|||||x|
     * tokenIntrospectionPassword||||x|x|x
     * tokenIntrospectionTimeout|||||x|
     * tokenIntrospectionUri|||||x|
     * tokenIntrospectionUsername|||||x|
     * usernameClaimName|||||x|
     * usernameClaimSource|||||x|
     * usernameValidateEnabled|||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAuthenticationOauthProviderApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete an OAuth Provider object.
     * Delete an OAuth Provider object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAuthenticationOauthProvider(
        msgVpnName: string,
        oauthProviderName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete an OAuth Provider object.
     * Delete an OAuth Provider object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAuthenticationOauthProviderApiRequestOptions(
        msgVpnName: string,
        oauthProviderName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get an OAuth Provider object.
     * Get an OAuth Provider object.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * audienceClaimName|||x|
     * audienceClaimSource|||x|
     * audienceClaimValue|||x|
     * audienceValidationEnabled|||x|
     * authorizationGroupClaimName|||x|
     * authorizationGroupClaimSource|||x|
     * authorizationGroupEnabled|||x|
     * disconnectOnTokenExpirationEnabled|||x|
     * enabled|||x|
     * jwksRefreshInterval|||x|
     * jwksUri|||x|
     * msgVpnName|x||x|
     * oauthProviderName|x||x|
     * tokenIgnoreTimeLimitsEnabled|||x|
     * tokenIntrospectionParameterName|||x|
     * tokenIntrospectionPassword||x|x|x
     * tokenIntrospectionTimeout|||x|
     * tokenIntrospectionUri|||x|
     * tokenIntrospectionUsername|||x|
     * usernameClaimName|||x|
     * usernameClaimSource|||x|
     * usernameValidateEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProviderResponse The OAuth Provider object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthenticationOauthProvider(
        msgVpnName: string,
        oauthProviderName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProviderResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get an OAuth Provider object.
     * Get an OAuth Provider object.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * audienceClaimName|||x|
     * audienceClaimSource|||x|
     * audienceClaimValue|||x|
     * audienceValidationEnabled|||x|
     * authorizationGroupClaimName|||x|
     * authorizationGroupClaimSource|||x|
     * authorizationGroupEnabled|||x|
     * disconnectOnTokenExpirationEnabled|||x|
     * enabled|||x|
     * jwksRefreshInterval|||x|
     * jwksUri|||x|
     * msgVpnName|x||x|
     * oauthProviderName|x||x|
     * tokenIgnoreTimeLimitsEnabled|||x|
     * tokenIntrospectionParameterName|||x|
     * tokenIntrospectionPassword||x|x|x
     * tokenIntrospectionTimeout|||x|
     * tokenIntrospectionUri|||x|
     * tokenIntrospectionUsername|||x|
     * usernameClaimName|||x|
     * usernameClaimSource|||x|
     * usernameValidateEnabled|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthenticationOauthProviderApiRequestOptions(
        msgVpnName: string,
        oauthProviderName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Update an OAuth Provider object.
     * Update an OAuth Provider object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * audienceClaimName|||||x|
     * audienceClaimSource|||||x|
     * audienceClaimValue|||||x|
     * audienceValidationEnabled|||||x|
     * authorizationGroupClaimName|||||x|
     * authorizationGroupClaimSource|||||x|
     * authorizationGroupEnabled|||||x|
     * disconnectOnTokenExpirationEnabled|||||x|
     * enabled|||||x|
     * jwksRefreshInterval|||||x|
     * jwksUri|||||x|
     * msgVpnName|x|x|||x|
     * oauthProviderName|x|x|||x|
     * tokenIgnoreTimeLimitsEnabled|||||x|
     * tokenIntrospectionParameterName|||||x|
     * tokenIntrospectionPassword|||x||x|x
     * tokenIntrospectionTimeout|||||x|
     * tokenIntrospectionUri|||||x|
     * tokenIntrospectionUsername|||||x|
     * usernameClaimName|||||x|
     * usernameClaimSource|||||x|
     * usernameValidateEnabled|||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProviderResponse The OAuth Provider object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnAuthenticationOauthProvider(
        msgVpnName: string,
        oauthProviderName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProviderResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Update an OAuth Provider object.
     * Update an OAuth Provider object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * audienceClaimName|||||x|
     * audienceClaimSource|||||x|
     * audienceClaimValue|||||x|
     * audienceValidationEnabled|||||x|
     * authorizationGroupClaimName|||||x|
     * authorizationGroupClaimSource|||||x|
     * authorizationGroupEnabled|||||x|
     * disconnectOnTokenExpirationEnabled|||||x|
     * enabled|||||x|
     * jwksRefreshInterval|||||x|
     * jwksUri|||||x|
     * msgVpnName|x|x|||x|
     * oauthProviderName|x|x|||x|
     * tokenIgnoreTimeLimitsEnabled|||||x|
     * tokenIntrospectionParameterName|||||x|
     * tokenIntrospectionPassword|||x||x|x
     * tokenIntrospectionTimeout|||||x|
     * tokenIntrospectionUri|||||x|
     * tokenIntrospectionUsername|||||x|
     * usernameClaimName|||||x|
     * usernameClaimSource|||||x|
     * usernameValidateEnabled|||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnAuthenticationOauthProviderApiRequestOptions(
        msgVpnName: string,
        oauthProviderName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Replace an OAuth Provider object.
     * Replace an OAuth Provider object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * audienceClaimName||||||x|
     * audienceClaimSource||||||x|
     * audienceClaimValue||||||x|
     * audienceValidationEnabled||||||x|
     * authorizationGroupClaimName||||||x|
     * authorizationGroupClaimSource||||||x|
     * authorizationGroupEnabled||||||x|
     * disconnectOnTokenExpirationEnabled||||||x|
     * enabled||||||x|
     * jwksRefreshInterval||||||x|
     * jwksUri||||||x|
     * msgVpnName|x||x|||x|
     * oauthProviderName|x||x|||x|
     * tokenIgnoreTimeLimitsEnabled||||||x|
     * tokenIntrospectionParameterName||||||x|
     * tokenIntrospectionPassword||||x||x|x
     * tokenIntrospectionTimeout||||||x|
     * tokenIntrospectionUri||||||x|
     * tokenIntrospectionUsername||||||x|
     * usernameClaimName||||||x|
     * usernameClaimSource||||||x|
     * usernameValidateEnabled||||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthenticationOauthProviderResponse The OAuth Provider object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnAuthenticationOauthProvider(
        msgVpnName: string,
        oauthProviderName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthenticationOauthProviderResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Replace an OAuth Provider object.
     * Replace an OAuth Provider object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth Providers contain information about the issuer of an OAuth token that is needed to validate the token and derive a client username from it.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * audienceClaimName||||||x|
     * audienceClaimSource||||||x|
     * audienceClaimValue||||||x|
     * audienceValidationEnabled||||||x|
     * authorizationGroupClaimName||||||x|
     * authorizationGroupClaimSource||||||x|
     * authorizationGroupEnabled||||||x|
     * disconnectOnTokenExpirationEnabled||||||x|
     * enabled||||||x|
     * jwksRefreshInterval||||||x|
     * jwksUri||||||x|
     * msgVpnName|x||x|||x|
     * oauthProviderName|x||x|||x|
     * tokenIgnoreTimeLimitsEnabled||||||x|
     * tokenIntrospectionParameterName||||||x|
     * tokenIntrospectionPassword||||x||x|x
     * tokenIntrospectionTimeout||||||x|
     * tokenIntrospectionUri||||||x|
     * tokenIntrospectionUsername||||||x|
     * usernameClaimName||||||x|
     * usernameClaimSource||||||x|
     * usernameValidateEnabled||||||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.25. Replaced by authenticationOauthProfiles.
     * @param msgVpnName The name of the Message VPN.
     * @param oauthProviderName The name of the OAuth Provider.
     * @param body The OAuth Provider object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnAuthenticationOauthProviderApiRequestOptions(
        msgVpnName: string,
        oauthProviderName: string,
        body: MsgVpnAuthenticationOauthProvider,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Authorization Group objects.
     * Get a list of Authorization Group objects.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|||
     * msgVpnName|x|||
     * orderAfterAuthorizationGroupName||x||
     * orderBeforeAuthorizationGroupName||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthorizationGroupsResponse The list of Authorization Group objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthorizationGroups(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnAuthorizationGroupsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Authorization Group objects.
     * Get a list of Authorization Group objects.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|||
     * msgVpnName|x|||
     * orderAfterAuthorizationGroupName||x||
     * orderBeforeAuthorizationGroupName||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthorizationGroupsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an Authorization Group object.
     * Create an Authorization Group object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|x||||
     * msgVpnName|x||x|||
     * orderAfterAuthorizationGroupName||||x||
     * orderBeforeAuthorizationGroupName||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthorizationGroupResponse The Authorization Group object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnAuthorizationGroup(
        msgVpnName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthorizationGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an Authorization Group object.
     * Create an Authorization Group object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|x||||
     * msgVpnName|x||x|||
     * orderAfterAuthorizationGroupName||||x||
     * orderBeforeAuthorizationGroupName||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnAuthorizationGroupApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an Authorization Group object.
     * Delete an Authorization Group object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnAuthorizationGroup(
        msgVpnName: string,
        authorizationGroupName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an Authorization Group object.
     * Delete an Authorization Group object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnAuthorizationGroupApiRequestOptions(
        msgVpnName: string,
        authorizationGroupName: string,
    ): ApiRequestOptions;

    /**
     * Get an Authorization Group object.
     * Get an Authorization Group object.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|||
     * msgVpnName|x|||
     * orderAfterAuthorizationGroupName||x||
     * orderBeforeAuthorizationGroupName||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthorizationGroupResponse The Authorization Group object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnAuthorizationGroup(
        msgVpnName: string,
        authorizationGroupName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthorizationGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an Authorization Group object.
     * Get an Authorization Group object.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationGroupName|x|||
     * msgVpnName|x|||
     * orderAfterAuthorizationGroupName||x||
     * orderBeforeAuthorizationGroupName||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnAuthorizationGroupApiRequestOptions(
        msgVpnName: string,
        authorizationGroupName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an Authorization Group object.
     * Update an Authorization Group object. Any attribute missing from the request will be left unchanged.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName||||x||
     * authorizationGroupName|x|x||||
     * clientProfileName||||x||
     * msgVpnName|x|x||||
     * orderAfterAuthorizationGroupName|||x|||
     * orderBeforeAuthorizationGroupName|||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthorizationGroupResponse The Authorization Group object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnAuthorizationGroup(
        msgVpnName: string,
        authorizationGroupName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthorizationGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an Authorization Group object.
     * Update an Authorization Group object. Any attribute missing from the request will be left unchanged.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName||||x||
     * authorizationGroupName|x|x||||
     * clientProfileName||||x||
     * msgVpnName|x|x||||
     * orderAfterAuthorizationGroupName|||x|||
     * orderBeforeAuthorizationGroupName|||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnAuthorizationGroupApiRequestOptions(
        msgVpnName: string,
        authorizationGroupName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an Authorization Group object.
     * Replace an Authorization Group object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|||||x||
     * authorizationGroupName|x||x||||
     * clientProfileName|||||x||
     * msgVpnName|x||x||||
     * orderAfterAuthorizationGroupName||||x|||
     * orderBeforeAuthorizationGroupName||||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnAuthorizationGroupResponse The Authorization Group object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnAuthorizationGroup(
        msgVpnName: string,
        authorizationGroupName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnAuthorizationGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an Authorization Group object.
     * Replace an Authorization Group object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * To use client authorization groups configured on an external server to provide client authorizations, Authorization Group objects must be created on the Message VPN that match the authorization groups provisioned on the external server. These objects must be configured with the client profiles and ACL profiles that will be assigned to the clients that belong to those authorization groups. A newly created group is placed at the end of the group list which is the lowest priority.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|||||x||
     * authorizationGroupName|x||x||||
     * clientProfileName|||||x||
     * msgVpnName|x||x||||
     * orderAfterAuthorizationGroupName||||x|||
     * orderBeforeAuthorizationGroupName||||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnAuthorizationGroup|orderAfterAuthorizationGroupName||orderBeforeAuthorizationGroupName
     * MsgVpnAuthorizationGroup|orderBeforeAuthorizationGroupName||orderAfterAuthorizationGroupName
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param authorizationGroupName The name of the Authorization Group. For LDAP groups, special care is needed if the group name contains special characters such as '#', '+', ';', '=' as the value of the group name returned from the LDAP server might prepend those characters with '\'. For example a group name called 'test#,lab,com' will be returned from the LDAP server as 'test\#,lab,com'.
     * @param body The Authorization Group object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnAuthorizationGroupApiRequestOptions(
        msgVpnName: string,
        authorizationGroupName: string,
        body: MsgVpnAuthorizationGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Bridge objects.
     * Get a list of Bridge objects.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteAuthenticationBasicPassword||x||x
     * remoteAuthenticationClientCertContent||x||x
     * remoteAuthenticationClientCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgesResponse The list of Bridge objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridges(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnBridgesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Bridge objects.
     * Get a list of Bridge objects.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteAuthenticationBasicPassword||x||x
     * remoteAuthenticationClientCertContent||x||x
     * remoteAuthenticationClientCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Bridge object.
     * Create a Bridge object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * msgVpnName|x||x|||
     * remoteAuthenticationBasicPassword||||x||x
     * remoteAuthenticationClientCertContent||||x||x
     * remoteAuthenticationClientCertPassword||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeResponse The Bridge object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnBridge(
        msgVpnName: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Bridge object.
     * Create a Bridge object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * msgVpnName|x||x|||
     * remoteAuthenticationBasicPassword||||x||x
     * remoteAuthenticationClientCertContent||||x||x
     * remoteAuthenticationClientCertPassword||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnBridgeApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Bridge object.
     * Delete a Bridge object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnBridge(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Bridge object.
     * Delete a Bridge object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnBridgeApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
    ): ApiRequestOptions;

    /**
     * Get a Bridge object.
     * Get a Bridge object.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteAuthenticationBasicPassword||x||x
     * remoteAuthenticationClientCertContent||x||x
     * remoteAuthenticationClientCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeResponse The Bridge object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridge(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Bridge object.
     * Get a Bridge object.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteAuthenticationBasicPassword||x||x
     * remoteAuthenticationClientCertContent||x||x
     * remoteAuthenticationClientCertPassword||x||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Bridge object.
     * Update a Bridge object. Any attribute missing from the request will be left unchanged.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * maxTtl||||x||
     * msgVpnName|x|x||||
     * remoteAuthenticationBasicClientUsername||||x||
     * remoteAuthenticationBasicPassword|||x|x||x
     * remoteAuthenticationClientCertContent|||x|x||x
     * remoteAuthenticationClientCertPassword|||x|x||
     * remoteAuthenticationScheme||||x||
     * remoteDeliverToOnePriority||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeResponse The Bridge object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnBridge(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Bridge object.
     * Update a Bridge object. Any attribute missing from the request will be left unchanged.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * maxTtl||||x||
     * msgVpnName|x|x||||
     * remoteAuthenticationBasicClientUsername||||x||
     * remoteAuthenticationBasicPassword|||x|x||x
     * remoteAuthenticationClientCertContent|||x|x||x
     * remoteAuthenticationClientCertPassword|||x|x||
     * remoteAuthenticationScheme||||x||
     * remoteDeliverToOnePriority||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnBridgeApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Bridge object.
     * Replace a Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * bridgeName|x||x||||
     * bridgeVirtualRouter|x||x||||
     * maxTtl|||||x||
     * msgVpnName|x||x||||
     * remoteAuthenticationBasicClientUsername|||||x||
     * remoteAuthenticationBasicPassword||||x|x||x
     * remoteAuthenticationClientCertContent||||x|x||x
     * remoteAuthenticationClientCertPassword||||x|x||
     * remoteAuthenticationScheme|||||x||
     * remoteDeliverToOnePriority|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeResponse The Bridge object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnBridge(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Bridge object.
     * Replace a Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Bridges can be used to link two Message VPNs so that messages published to one Message VPN that match the topic subscriptions set for the bridge are also delivered to the linked Message VPN.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * bridgeName|x||x||||
     * bridgeVirtualRouter|x||x||||
     * maxTtl|||||x||
     * msgVpnName|x||x||||
     * remoteAuthenticationBasicClientUsername|||||x||
     * remoteAuthenticationBasicPassword||||x|x||x
     * remoteAuthenticationClientCertContent||||x|x||x
     * remoteAuthenticationClientCertPassword||||x|x||
     * remoteAuthenticationScheme|||||x||
     * remoteDeliverToOnePriority|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridge|remoteAuthenticationBasicClientUsername|remoteAuthenticationBasicPassword|
     * MsgVpnBridge|remoteAuthenticationBasicPassword|remoteAuthenticationBasicClientUsername|
     * MsgVpnBridge|remoteAuthenticationClientCertPassword|remoteAuthenticationClientCertContent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnBridgeApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Remote Message VPN objects.
     * Get a list of Remote Message VPN objects.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * password||x||x
     * remoteMsgVpnInterface|x|||
     * remoteMsgVpnLocation|x|||
     * remoteMsgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteMsgVpnsResponse The list of Remote Message VPN objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeRemoteMsgVpns(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteMsgVpnsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Remote Message VPN objects.
     * Get a list of Remote Message VPN objects.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * password||x||x
     * remoteMsgVpnInterface|x|||
     * remoteMsgVpnLocation|x|||
     * remoteMsgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeRemoteMsgVpnsApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Remote Message VPN object.
     * Create a Remote Message VPN object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x|||
     * bridgeVirtualRouter|x||x|||
     * msgVpnName|x||x|||
     * password||||x||x
     * remoteMsgVpnInterface|x|||||
     * remoteMsgVpnLocation|x|x||||
     * remoteMsgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteMsgVpnResponse The Remote Message VPN object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnBridgeRemoteMsgVpn(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteMsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Remote Message VPN object.
     * Create a Remote Message VPN object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x|||
     * bridgeVirtualRouter|x||x|||
     * msgVpnName|x||x|||
     * password||||x||x
     * remoteMsgVpnInterface|x|||||
     * remoteMsgVpnLocation|x|x||||
     * remoteMsgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnBridgeRemoteMsgVpnApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Remote Message VPN object.
     * Delete a Remote Message VPN object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnBridgeRemoteMsgVpn(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Remote Message VPN object.
     * Delete a Remote Message VPN object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnBridgeRemoteMsgVpnApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
    ): ApiRequestOptions;

    /**
     * Get a Remote Message VPN object.
     * Get a Remote Message VPN object.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * password||x||x
     * remoteMsgVpnInterface|x|||
     * remoteMsgVpnLocation|x|||
     * remoteMsgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteMsgVpnResponse The Remote Message VPN object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeRemoteMsgVpn(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteMsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Remote Message VPN object.
     * Get a Remote Message VPN object.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * password||x||x
     * remoteMsgVpnInterface|x|||
     * remoteMsgVpnLocation|x|||
     * remoteMsgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeRemoteMsgVpnApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Remote Message VPN object.
     * Update a Remote Message VPN object. Any attribute missing from the request will be left unchanged.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * clientUsername||||x||
     * compressedDataEnabled||||x||
     * egressFlowWindowSize||||x||
     * msgVpnName|x|x||||
     * password|||x|x||x
     * remoteMsgVpnInterface|x|x||||
     * remoteMsgVpnLocation|x|x||||
     * remoteMsgVpnName|x|x||||
     * tlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteMsgVpnResponse The Remote Message VPN object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnBridgeRemoteMsgVpn(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteMsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Remote Message VPN object.
     * Update a Remote Message VPN object. Any attribute missing from the request will be left unchanged.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * bridgeName|x|x||||
     * bridgeVirtualRouter|x|x||||
     * clientUsername||||x||
     * compressedDataEnabled||||x||
     * egressFlowWindowSize||||x||
     * msgVpnName|x|x||||
     * password|||x|x||x
     * remoteMsgVpnInterface|x|x||||
     * remoteMsgVpnLocation|x|x||||
     * remoteMsgVpnName|x|x||||
     * tlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnBridgeRemoteMsgVpnApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Remote Message VPN object.
     * Replace a Remote Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * bridgeName|x||x||||
     * bridgeVirtualRouter|x||x||||
     * clientUsername|||||x||
     * compressedDataEnabled|||||x||
     * egressFlowWindowSize|||||x||
     * msgVpnName|x||x||||
     * password||||x|x||x
     * remoteMsgVpnInterface|x||x||||
     * remoteMsgVpnLocation|x||x||||
     * remoteMsgVpnName|x||x||||
     * tlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteMsgVpnResponse The Remote Message VPN object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnBridgeRemoteMsgVpn(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteMsgVpnResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Remote Message VPN object.
     * Replace a Remote Message VPN object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The Remote Message VPN is the Message VPN that the Bridge connects to.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * bridgeName|x||x||||
     * bridgeVirtualRouter|x||x||||
     * clientUsername|||||x||
     * compressedDataEnabled|||||x||
     * egressFlowWindowSize|||||x||
     * msgVpnName|x||x||||
     * password||||x|x||x
     * remoteMsgVpnInterface|x||x||||
     * remoteMsgVpnLocation|x||x||||
     * remoteMsgVpnName|x||x||||
     * tlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnBridgeRemoteMsgVpn|clientUsername|password|
     * MsgVpnBridgeRemoteMsgVpn|password|clientUsername|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteMsgVpnName The name of the remote Message VPN.
     * @param remoteMsgVpnLocation The location of the remote Message VPN as either an FQDN with port, IP address with port, or virtual router name (starting with "v:").
     * @param remoteMsgVpnInterface The physical interface on the local Message VPN host for connecting to the remote Message VPN. By default, an interface is chosen automatically (recommended), but if specified, `remoteMsgVpnLocation` must not be a virtual router name.
     * @param body The Remote Message VPN object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnBridgeRemoteMsgVpnApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteMsgVpnName: string,
        remoteMsgVpnLocation: string,
        remoteMsgVpnInterface: string,
        body: MsgVpnBridgeRemoteMsgVpn,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Remote Subscription objects.
     * Get a list of Remote Subscription objects.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteSubscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteSubscriptionsResponse The list of Remote Subscription objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeRemoteSubscriptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteSubscriptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Remote Subscription objects.
     * Get a list of Remote Subscription objects.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteSubscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeRemoteSubscriptionsApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Remote Subscription object.
     * Create a Remote Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x|||
     * bridgeVirtualRouter|x||x|||
     * deliverAlwaysEnabled||x||||
     * msgVpnName|x||x|||
     * remoteSubscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Remote Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteSubscriptionResponse The Remote Subscription object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnBridgeRemoteSubscription(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeRemoteSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Remote Subscription object.
     * Create a Remote Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x|||
     * bridgeVirtualRouter|x||x|||
     * deliverAlwaysEnabled||x||||
     * msgVpnName|x||x|||
     * remoteSubscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Remote Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnBridgeRemoteSubscriptionApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeRemoteSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Remote Subscription object.
     * Delete a Remote Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteSubscriptionTopic The topic of the Bridge remote subscription.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnBridgeRemoteSubscription(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteSubscriptionTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Remote Subscription object.
     * Delete a Remote Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteSubscriptionTopic The topic of the Bridge remote subscription.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnBridgeRemoteSubscriptionApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteSubscriptionTopic: string,
    ): ApiRequestOptions;

    /**
     * Get a Remote Subscription object.
     * Get a Remote Subscription object.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteSubscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteSubscriptionTopic The topic of the Bridge remote subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeRemoteSubscriptionResponse The Remote Subscription object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeRemoteSubscription(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteSubscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeRemoteSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Remote Subscription object.
     * Get a Remote Subscription object.
     *
     * A Remote Subscription is a topic subscription used by the Message VPN Bridge to attract messages from the remote message broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x|||
     * bridgeVirtualRouter|x|||
     * msgVpnName|x|||
     * remoteSubscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param remoteSubscriptionTopic The topic of the Bridge remote subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeRemoteSubscriptionApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        remoteSubscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x||x|
     * bridgeVirtualRouter|x||x|
     * msgVpnName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeTlsTrustedCommonNamesResponse The list of Trusted Common Name objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeTlsTrustedCommonNames(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeTlsTrustedCommonNamesResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x||x|
     * bridgeVirtualRouter|x||x|
     * msgVpnName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeTlsTrustedCommonNamesApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x||x|
     * bridgeVirtualRouter|x||x||x|
     * msgVpnName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeTlsTrustedCommonNameResponse The Trusted Common Name object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnBridgeTlsTrustedCommonName(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * bridgeName|x||x||x|
     * bridgeVirtualRouter|x||x||x|
     * msgVpnName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnBridgeTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        body: MsgVpnBridgeTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnBridgeTlsTrustedCommonName(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        tlsTrustedCommonName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnBridgeTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        tlsTrustedCommonName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x||x|
     * bridgeVirtualRouter|x||x|
     * msgVpnName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnBridgeTlsTrustedCommonNameResponse The Trusted Common Name object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnBridgeTlsTrustedCommonName(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnBridgeTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the Bridge are used by encrypted transports to verify the name in the certificate presented by the remote node. They must include the common name of the remote node's server certificate or client certificate, depending upon the initiator of the connection.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * bridgeName|x||x|
     * bridgeVirtualRouter|x||x|
     * msgVpnName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since 2.18. Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param bridgeName The name of the Bridge.
     * @param bridgeVirtualRouter The virtual router of the Bridge.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnBridgeTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        bridgeName: string,
        bridgeVirtualRouter: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule objects.
     * Get a list of Certificate Matching Rule objects.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRulesResponse The list of Certificate Matching Rule objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRules(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRulesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule objects.
     * Get a list of Certificate Matching Rule objects.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRulesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule object.
     * Create a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnCertMatchingRule(
        msgVpnName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule object.
     * Create a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnCertMatchingRuleApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule object.
     * Delete a Certificate Matching Rule object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnCertMatchingRule(
        msgVpnName: string,
        ruleName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule object.
     * Delete a Certificate Matching Rule object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnCertMatchingRuleApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule object.
     * Get a Certificate Matching Rule object.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleResponse The Certificate Matching Rule object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRule(
        msgVpnName: string,
        ruleName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule object.
     * Get a Certificate Matching Rule object.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRuleApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Certificate Matching Rule object.
     * Update a Certificate Matching Rule object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnCertMatchingRule(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Certificate Matching Rule object.
     * Update a Certificate Matching Rule object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnCertMatchingRuleApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Certificate Matching Rule object.
     * Replace a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleResponse The Certificate Matching Rule object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnCertMatchingRule(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Certificate Matching Rule object.
     * Replace a Certificate Matching Rule object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule is a collection of conditions and attribute filters that all have to be satisfied for certificate to be acceptable as authentication for a given username.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnCertMatchingRuleApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRule,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * filterName|x|||
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleAttributeFiltersResponse The list of Certificate Matching Rule Attribute Filter objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRuleAttributeFilters(
        msgVpnName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleAttributeFiltersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     * Get a list of Certificate Matching Rule Attribute Filter objects.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * filterName|x|||
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRuleAttributeFiltersApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule Attribute Filter object.
     * Create a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * filterName|x|x||||
     * msgVpnName|x||x|||
     * ruleName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnCertMatchingRuleAttributeFilter(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule Attribute Filter object.
     * Create a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * filterName|x|x||||
     * msgVpnName|x||x|||
     * ruleName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnCertMatchingRuleAttributeFilterApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule Attribute Filter object.
     * Delete a Certificate Matching Rule Attribute Filter object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnCertMatchingRuleAttributeFilter(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule Attribute Filter object.
     * Delete a Certificate Matching Rule Attribute Filter object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnCertMatchingRuleAttributeFilterApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule Attribute Filter object.
     * Get a Certificate Matching Rule Attribute Filter object.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * filterName|x|||
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRuleAttributeFilter(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule Attribute Filter object.
     * Get a Certificate Matching Rule Attribute Filter object.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * filterName|x|||
     * msgVpnName|x|||
     * ruleName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRuleAttributeFilterApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Certificate Matching Rule Attribute Filter object.
     * Update a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * filterName|x|x||||
     * msgVpnName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnCertMatchingRuleAttributeFilter(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Certificate Matching Rule Attribute Filter object.
     * Update a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be left unchanged.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * filterName|x|x||||
     * msgVpnName|x|x||||
     * ruleName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnCertMatchingRuleAttributeFilterApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Certificate Matching Rule Attribute Filter object.
     * Replace a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * filterName|x||x||||
     * msgVpnName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleAttributeFilterResponse The Certificate Matching Rule Attribute Filter object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnCertMatchingRuleAttributeFilter(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleAttributeFilterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Certificate Matching Rule Attribute Filter object.
     * Replace a Certificate Matching Rule Attribute Filter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cert Matching Rule Attribute Filter compares a username attribute to a string.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * filterName|x||x||||
     * msgVpnName|x||x||||
     * ruleName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.28.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param filterName The name of the filter.
     * @param body The Certificate Matching Rule Attribute Filter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnCertMatchingRuleAttributeFilterApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        filterName: string,
        body: MsgVpnCertMatchingRuleAttributeFilter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Certificate Matching Rule Condition objects.
     * Get a list of Certificate Matching Rule Condition objects.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleConditionsResponse The list of Certificate Matching Rule Condition objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRuleConditions(
        msgVpnName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleConditionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Certificate Matching Rule Condition objects.
     * Get a list of Certificate Matching Rule Condition objects.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRuleConditionsApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Certificate Matching Rule Condition object.
     * Create a Certificate Matching Rule Condition object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * ruleName|x||x|||
     * source|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Condition object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleConditionResponse The Certificate Matching Rule Condition object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnCertMatchingRuleCondition(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRuleCondition,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleConditionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Certificate Matching Rule Condition object.
     * Create a Certificate Matching Rule Condition object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * ruleName|x||x|||
     * source|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param body The Certificate Matching Rule Condition object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnCertMatchingRuleConditionApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        body: MsgVpnCertMatchingRuleCondition,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Certificate Matching Rule Condition object.
     * Delete a Certificate Matching Rule Condition object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnCertMatchingRuleCondition(
        msgVpnName: string,
        ruleName: string,
        source: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Certificate Matching Rule Condition object.
     * Delete a Certificate Matching Rule Condition object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnCertMatchingRuleConditionApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        source: string,
    ): ApiRequestOptions;

    /**
     * Get a Certificate Matching Rule Condition object.
     * Get a Certificate Matching Rule Condition object.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnCertMatchingRuleConditionResponse The Certificate Matching Rule Condition object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnCertMatchingRuleCondition(
        msgVpnName: string,
        ruleName: string,
        source: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnCertMatchingRuleConditionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Certificate Matching Rule Condition object.
     * Get a Certificate Matching Rule Condition object.
     *
     * A Cert Matching Rule Condition compares data extracted from a certificate to a username attribute or an expression.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * ruleName|x|||
     * source|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param ruleName The name of the rule.
     * @param source Certificate field to be compared with the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnCertMatchingRuleConditionApiRequestOptions(
        msgVpnName: string,
        ruleName: string,
        source: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Client Profile objects.
     * Get a list of Client Profile objects.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||x|
     * apiQueueManagementCopyFromOnCreateName|||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||x|
     * clientProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientProfilesResponse The list of Client Profile objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientProfiles(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnClientProfilesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Client Profile objects.
     * Get a list of Client Profile objects.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||x|
     * apiQueueManagementCopyFromOnCreateName|||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||x|
     * clientProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientProfilesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Client Profile object.
     * Create a Client Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||||x|
     * apiQueueManagementCopyFromOnCreateName|||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||||x|
     * clientProfileName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientProfileResponse The Client Profile object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnClientProfile(
        msgVpnName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Client Profile object.
     * Create a Client Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||||x|
     * apiQueueManagementCopyFromOnCreateName|||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||||x|
     * clientProfileName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnClientProfileApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Client Profile object.
     * Delete a Client Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnClientProfile(
        msgVpnName: string,
        clientProfileName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Client Profile object.
     * Delete a Client Profile object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnClientProfileApiRequestOptions(
        msgVpnName: string,
        clientProfileName: string,
    ): ApiRequestOptions;

    /**
     * Get a Client Profile object.
     * Get a Client Profile object.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||x|
     * apiQueueManagementCopyFromOnCreateName|||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||x|
     * clientProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientProfileResponse The Client Profile object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientProfile(
        msgVpnName: string,
        clientProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Client Profile object.
     * Get a Client Profile object.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowCutThroughForwardingEnabled|||x|
     * apiQueueManagementCopyFromOnCreateName|||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||x|
     * clientProfileName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientProfileApiRequestOptions(
        msgVpnName: string,
        clientProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Client Profile object.
     * Update a Client Profile object. Any attribute missing from the request will be left unchanged.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * allowCutThroughForwardingEnabled|||||x|
     * apiQueueManagementCopyFromOnCreateName|||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||||x|
     * clientProfileName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientProfileResponse The Client Profile object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnClientProfile(
        msgVpnName: string,
        clientProfileName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Client Profile object.
     * Update a Client Profile object. Any attribute missing from the request will be left unchanged.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * allowCutThroughForwardingEnabled|||||x|
     * apiQueueManagementCopyFromOnCreateName|||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName|||||x|
     * clientProfileName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnClientProfileApiRequestOptions(
        msgVpnName: string,
        clientProfileName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Client Profile object.
     * Replace a Client Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * allowCutThroughForwardingEnabled||||||x|
     * apiQueueManagementCopyFromOnCreateName||||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName||||||x|
     * clientProfileName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientProfileResponse The Client Profile object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnClientProfile(
        msgVpnName: string,
        clientProfileName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Client Profile object.
     * Replace a Client Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Client Profiles are used to assign common configuration properties to clients that have been successfully authorized.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * allowCutThroughForwardingEnabled||||||x|
     * apiQueueManagementCopyFromOnCreateName||||||x|
     * apiTopicEndpointManagementCopyFromOnCreateName||||||x|
     * clientProfileName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientProfileName The name of the Client Profile.
     * @param body The Client Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnClientProfileApiRequestOptions(
        msgVpnName: string,
        clientProfileName: string,
        body: MsgVpnClientProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Client Username objects.
     * Get a list of Client Username objects.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientUsername|x|||
     * msgVpnName|x|||
     * password||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernamesResponse The list of Client Username objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientUsernames(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernamesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Client Username objects.
     * Get a list of Client Username objects.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientUsername|x|||
     * msgVpnName|x|||
     * password||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientUsernamesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Client Username object.
     * Create a Client Username object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientUsername|x|x||||
     * msgVpnName|x||x|||
     * password||||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameResponse The Client Username object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnClientUsername(
        msgVpnName: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Client Username object.
     * Create a Client Username object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientUsername|x|x||||
     * msgVpnName|x||x|||
     * password||||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnClientUsernameApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Client Username object.
     * Delete a Client Username object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnClientUsername(
        msgVpnName: string,
        clientUsername: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Client Username object.
     * Delete a Client Username object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnClientUsernameApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
    ): ApiRequestOptions;

    /**
     * Get a Client Username object.
     * Get a Client Username object.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientUsername|x|||
     * msgVpnName|x|||
     * password||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameResponse The Client Username object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientUsername(
        msgVpnName: string,
        clientUsername: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Client Username object.
     * Get a Client Username object.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientUsername|x|||
     * msgVpnName|x|||
     * password||x||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientUsernameApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Client Username object.
     * Update a Client Username object. Any attribute missing from the request will be left unchanged.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName||||x||
     * clientProfileName||||x||
     * clientUsername|x|x||||
     * msgVpnName|x|x||||
     * password|||x|||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameResponse The Client Username object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnClientUsername(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Client Username object.
     * Update a Client Username object. Any attribute missing from the request will be left unchanged.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * aclProfileName||||x||
     * clientProfileName||||x||
     * clientUsername|x|x||||
     * msgVpnName|x|x||||
     * password|||x|||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnClientUsernameApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Client Username object.
     * Replace a Client Username object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|||||x||
     * clientProfileName|||||x||
     * clientUsername|x||x||||
     * msgVpnName|x||x||||
     * password||||x|||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameResponse The Client Username object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnClientUsername(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Client Username object.
     * Replace a Client Username object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A client is only authorized to connect to a Message VPN that is associated with a Client Username that the client has been assigned.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * aclProfileName|||||x||
     * clientProfileName|||||x||
     * clientUsername|x||x||||
     * msgVpnName|x||x||||
     * password||||x|||x
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnClientUsernameApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsername,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Client Username Attribute objects.
     * Get a list of Client Username Attribute objects.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * clientUsername|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameAttributesResponse The list of Client Username Attribute objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientUsernameAttributes(
        msgVpnName: string,
        clientUsername: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameAttributesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Client Username Attribute objects.
     * Get a list of Client Username Attribute objects.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * clientUsername|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientUsernameAttributesApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Client Username Attribute object.
     * Create a Client Username Attribute object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * attributeName|x|x||||
     * attributeValue|x|x||||
     * clientUsername|x||x|||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username Attribute object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameAttributeResponse The Client Username Attribute object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnClientUsernameAttribute(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsernameAttribute,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameAttributeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Client Username Attribute object.
     * Create a Client Username Attribute object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * attributeName|x|x||||
     * attributeValue|x|x||||
     * clientUsername|x||x|||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param body The Client Username Attribute object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnClientUsernameAttributeApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        body: MsgVpnClientUsernameAttribute,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Client Username Attribute object.
     * Delete a Client Username Attribute object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnClientUsernameAttribute(
        msgVpnName: string,
        clientUsername: string,
        attributeName: string,
        attributeValue: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Client Username Attribute object.
     * Delete a Client Username Attribute object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnClientUsernameAttributeApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        attributeName: string,
        attributeValue: string,
    ): ApiRequestOptions;

    /**
     * Get a Client Username Attribute object.
     * Get a Client Username Attribute object.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * clientUsername|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnClientUsernameAttributeResponse The Client Username Attribute object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnClientUsernameAttribute(
        msgVpnName: string,
        clientUsername: string,
        attributeName: string,
        attributeValue: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnClientUsernameAttributeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Client Username Attribute object.
     * Get a Client Username Attribute object.
     *
     * A ClientUsername Attribute is a key+value pair that can be used to locate a client username, for example when using client certificate mapping.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * attributeName|x|||
     * attributeValue|x|||
     * clientUsername|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param clientUsername The name of the Client Username.
     * @param attributeName The name of the Attribute.
     * @param attributeValue The value of the Attribute.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnClientUsernameAttributeApiRequestOptions(
        msgVpnName: string,
        clientUsername: string,
        attributeName: string,
        attributeValue: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Distributed Cache objects.
     * Get a list of Distributed Cache objects.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCachesResponse The list of Distributed Cache objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCaches(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCachesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Distributed Cache objects.
     * Get a list of Distributed Cache objects.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCachesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Distributed Cache object.
     * Create a Distributed Cache object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheResponse The Distributed Cache object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCache(
        msgVpnName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Distributed Cache object.
     * Create a Distributed Cache object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Distributed Cache object.
     * Delete a Distributed Cache object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCache(
        msgVpnName: string,
        cacheName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Distributed Cache object.
     * Delete a Distributed Cache object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
    ): ApiRequestOptions;

    /**
     * Get a Distributed Cache object.
     * Get a Distributed Cache object.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheResponse The Distributed Cache object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCache(
        msgVpnName: string,
        cacheName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Distributed Cache object.
     * Get a Distributed Cache object.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Distributed Cache object.
     * Update a Distributed Cache object. Any attribute missing from the request will be left unchanged.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * cacheVirtualRouter||x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheResponse The Distributed Cache object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnDistributedCache(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Distributed Cache object.
     * Update a Distributed Cache object. Any attribute missing from the request will be left unchanged.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * cacheVirtualRouter||x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnDistributedCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Distributed Cache object.
     * Replace a Distributed Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * cacheVirtualRouter||x|||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheResponse The Distributed Cache object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnDistributedCache(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Distributed Cache object.
     * Replace a Distributed Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Distributed Cache is a collection of one or more Cache Clusters that belong to the same Message VPN. Each Cache Cluster in a Distributed Cache is configured to subscribe to a different set of topics. This effectively divides up the configured topic space, to provide scaling to very large topic spaces or very high cached message throughput.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * cacheVirtualRouter||x|||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnDistributedCache|scheduledDeleteMsgDayList|scheduledDeleteMsgTimeList|
     * MsgVpnDistributedCache|scheduledDeleteMsgTimeList|scheduledDeleteMsgDayList|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Distributed Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnDistributedCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Cache Cluster objects.
     * Get a list of Cache Cluster objects.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClustersResponse The list of Cache Cluster objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusters(
        msgVpnName: string,
        cacheName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClustersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Cache Cluster objects.
     * Get a list of Cache Cluster objects.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClustersApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Cache Cluster object.
     * Create a Cache Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterResponse The Cache Cluster object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCacheCluster(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Cache Cluster object.
     * Create a Cache Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Cache Cluster object.
     * Delete a Cache Cluster object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCacheCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Cache Cluster object.
     * Delete a Cache Cluster object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
    ): ApiRequestOptions;

    /**
     * Get a Cache Cluster object.
     * Get a Cache Cluster object.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterResponse The Cache Cluster object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Cache Cluster object.
     * Get a Cache Cluster object.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Cache Cluster object.
     * Update a Cache Cluster object. Any attribute missing from the request will be left unchanged.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * clusterName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterResponse The Cache Cluster object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnDistributedCacheCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Cache Cluster object.
     * Update a Cache Cluster object. Any attribute missing from the request will be left unchanged.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * clusterName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnDistributedCacheClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Cache Cluster object.
     * Replace a Cache Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * clusterName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterResponse The Cache Cluster object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnDistributedCacheCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Cache Cluster object.
     * Replace a Cache Cluster object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cache Cluster is a collection of one or more Cache Instances that subscribe to exactly the same topics. Cache Instances are grouped together in a Cache Cluster for the purpose of fault tolerance and load balancing. As published messages are received, the message broker message bus sends these live data messages to the Cache Instances in the Cache Cluster. This enables client cache requests to be served by any of Cache Instances in the Cache Cluster.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * clusterName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThresholdByPercent|clearPercent|setPercent|
     * EventThresholdByPercent|setPercent|clearPercent|
     * EventThresholdByValue|clearValue|setValue|
     * EventThresholdByValue|setValue|clearValue|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnDistributedCacheClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Home Cache Cluster objects.
     * Get a list of Home Cache Cluster objects.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse The list of Home Cache Cluster objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusters(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClustersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Home Cache Cluster objects.
     * Get a list of Home Cache Cluster objects.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClustersApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Home Cache Cluster object.
     * Create a Home Cache Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * homeClusterName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Home Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse The Home Cache Cluster object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCacheClusterGlobalCachingHomeCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterGlobalCachingHomeCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Home Cache Cluster object.
     * Create a Home Cache Cluster object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * homeClusterName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Home Cache Cluster object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheClusterGlobalCachingHomeClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterGlobalCachingHomeCluster,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Home Cache Cluster object.
     * Delete a Home Cache Cluster object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCacheClusterGlobalCachingHomeCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Home Cache Cluster object.
     * Delete a Home Cache Cluster object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheClusterGlobalCachingHomeClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
    ): ApiRequestOptions;

    /**
     * Get a Home Cache Cluster object.
     * Get a Home Cache Cluster object.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse The Home Cache Cluster object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeCluster(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClusterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Home Cache Cluster object.
     * Get a Home Cache Cluster object.
     *
     * A Home Cache Cluster is a Cache Cluster that is the "definitive" Cache Cluster for a given topic in the context of the Global Caching feature.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Topic Prefix objects.
     * Get a list of Topic Prefix objects.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     * topicPrefix|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse The list of Topic Prefix objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixes(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Topic Prefix objects.
     * Get a list of Topic Prefix objects.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     * topicPrefix|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixesApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Topic Prefix object.
     * Create a Topic Prefix object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * homeClusterName|x||x|||
     * msgVpnName|x||x|||
     * topicPrefix|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param body The Topic Prefix object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse The Topic Prefix object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        body: MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Topic Prefix object.
     * Create a Topic Prefix object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * homeClusterName|x||x|||
     * msgVpnName|x||x|||
     * topicPrefix|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param body The Topic Prefix object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        body: MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Topic Prefix object.
     * Delete a Topic Prefix object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param topicPrefix A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        topicPrefix: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Topic Prefix object.
     * Delete a Topic Prefix object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param topicPrefix A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        topicPrefix: string,
    ): ApiRequestOptions;

    /**
     * Get a Topic Prefix object.
     * Get a Topic Prefix object.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     * topicPrefix|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param topicPrefix A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse The Topic Prefix object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefix(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        topicPrefix: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Topic Prefix object.
     * Get a Topic Prefix object.
     *
     * A Topic Prefix is a prefix for a global topic that is available from the containing Home Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * homeClusterName|x|||
     * msgVpnName|x|||
     * topicPrefix|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param homeClusterName The name of the remote Home Cache Cluster.
     * @param topicPrefix A topic prefix for global topics available from the remote Home Cache Cluster. A wildcard (/>) is implied at the end of the prefix.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterGlobalCachingHomeClusterTopicPrefixApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        homeClusterName: string,
        topicPrefix: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Cache Instance objects.
     * Get a list of Cache Instance objects.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * instanceName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterInstancesResponse The list of Cache Instance objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterInstances(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterInstancesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Cache Instance objects.
     * Get a list of Cache Instance objects.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * instanceName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterInstancesApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Cache Instance object.
     * Create a Cache Instance object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * instanceName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterInstanceResponse The Cache Instance object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCacheClusterInstance(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterInstanceResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Cache Instance object.
     * Create a Cache Instance object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * instanceName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheClusterInstanceApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Cache Instance object.
     * Delete a Cache Instance object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCacheClusterInstance(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Cache Instance object.
     * Delete a Cache Instance object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheClusterInstanceApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
    ): ApiRequestOptions;

    /**
     * Get a Cache Instance object.
     * Get a Cache Instance object.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * instanceName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterInstanceResponse The Cache Instance object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterInstance(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterInstanceResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Cache Instance object.
     * Get a Cache Instance object.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * instanceName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterInstanceApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Cache Instance object.
     * Update a Cache Instance object. Any attribute missing from the request will be left unchanged.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * clusterName|x|x||||
     * instanceName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterInstanceResponse The Cache Instance object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnDistributedCacheClusterInstance(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterInstanceResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Cache Instance object.
     * Update a Cache Instance object. Any attribute missing from the request will be left unchanged.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * clusterName|x|x||||
     * instanceName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnDistributedCacheClusterInstanceApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Cache Instance object.
     * Replace a Cache Instance object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * clusterName|x||x||||
     * instanceName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterInstanceResponse The Cache Instance object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnDistributedCacheClusterInstance(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterInstanceResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Cache Instance object.
     * Replace a Cache Instance object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Cache Instance is a single Cache process that belongs to a single Cache Cluster. A Cache Instance object provisioned on the broker is used to disseminate configuration information to the Cache process. Cache Instances listen for and cache live data messages that match the topic subscriptions configured for their parent Cache Cluster.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * clusterName|x||x||||
     * instanceName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param instanceName The name of the Cache Instance.
     * @param body The Cache Instance object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnDistributedCacheClusterInstanceApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        instanceName: string,
        body: MsgVpnDistributedCacheClusterInstance,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Topic objects.
     * Get a list of Topic objects.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     * topic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterTopicsResponse The list of Topic objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterTopics(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterTopicsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Topic objects.
     * Get a list of Topic objects.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     * topic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterTopicsApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Topic object.
     * Create a Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * msgVpnName|x||x|||
     * topic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterTopicResponse The Topic object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDistributedCacheClusterTopic(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Topic object.
     * Create a Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x||x|||
     * clusterName|x||x|||
     * msgVpnName|x||x|||
     * topic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param body The Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDistributedCacheClusterTopicApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        body: MsgVpnDistributedCacheClusterTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Topic object.
     * Delete a Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param topic The value of the Topic in the form a/b/c.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDistributedCacheClusterTopic(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        topic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Topic object.
     * Delete a Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param topic The value of the Topic in the form a/b/c.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDistributedCacheClusterTopicApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        topic: string,
    ): ApiRequestOptions;

    /**
     * Get a Topic object.
     * Get a Topic object.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     * topic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param topic The value of the Topic in the form a/b/c.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDistributedCacheClusterTopicResponse The Topic object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDistributedCacheClusterTopic(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        topic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDistributedCacheClusterTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Topic object.
     * Get a Topic object.
     *
     * The Cache Instances that belong to the containing Cache Cluster will cache any messages published to topics that match a Topic Subscription.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * clusterName|x|||
     * msgVpnName|x|||
     * topic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the Distributed Cache.
     * @param clusterName The name of the Cache Cluster.
     * @param topic The value of the Topic in the form a/b/c.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDistributedCacheClusterTopicApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        clusterName: string,
        topic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of DMR Bridge objects.
     * Get a list of DMR Bridge objects.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDmrBridgesResponse The list of DMR Bridge objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDmrBridges(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnDmrBridgesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of DMR Bridge objects.
     * Get a list of DMR Bridge objects.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDmrBridgesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a DMR Bridge object.
     * Create a DMR Bridge object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * remoteNodeName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDmrBridgeResponse The DMR Bridge object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnDmrBridge(
        msgVpnName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDmrBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a DMR Bridge object.
     * Create a DMR Bridge object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * remoteNodeName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnDmrBridgeApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a DMR Bridge object.
     * Delete a DMR Bridge object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnDmrBridge(
        msgVpnName: string,
        remoteNodeName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a DMR Bridge object.
     * Delete a DMR Bridge object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnDmrBridgeApiRequestOptions(
        msgVpnName: string,
        remoteNodeName: string,
    ): ApiRequestOptions;

    /**
     * Get a DMR Bridge object.
     * Get a DMR Bridge object.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDmrBridgeResponse The DMR Bridge object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnDmrBridge(
        msgVpnName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDmrBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a DMR Bridge object.
     * Get a DMR Bridge object.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * remoteNodeName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnDmrBridgeApiRequestOptions(
        msgVpnName: string,
        remoteNodeName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a DMR Bridge object.
     * Update a DMR Bridge object. Any attribute missing from the request will be left unchanged.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * remoteNodeName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDmrBridgeResponse The DMR Bridge object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnDmrBridge(
        msgVpnName: string,
        remoteNodeName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDmrBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a DMR Bridge object.
     * Update a DMR Bridge object. Any attribute missing from the request will be left unchanged.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * remoteNodeName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnDmrBridgeApiRequestOptions(
        msgVpnName: string,
        remoteNodeName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a DMR Bridge object.
     * Replace a DMR Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * remoteNodeName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnDmrBridgeResponse The DMR Bridge object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnDmrBridge(
        msgVpnName: string,
        remoteNodeName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnDmrBridgeResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a DMR Bridge object.
     * Replace a DMR Bridge object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A DMR Bridge is required to establish a data channel over a corresponding external link to the remote node for a given Message VPN. Each DMR Bridge identifies which external link the Message VPN should use, and what the name of the equivalent Message VPN at the remote node is.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * remoteNodeName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param remoteNodeName The name of the node at the remote end of the DMR Bridge.
     * @param body The DMR Bridge object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnDmrBridgeApiRequestOptions(
        msgVpnName: string,
        remoteNodeName: string,
        body: MsgVpnDmrBridge,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of JNDI Connection Factory objects.
     * Get a list of JNDI Connection Factory objects.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiConnectionFactoriesResponse The list of JNDI Connection Factory objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiConnectionFactories(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnJndiConnectionFactoriesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of JNDI Connection Factory objects.
     * Get a list of JNDI Connection Factory objects.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiConnectionFactoriesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a JNDI Connection Factory object.
     * Create a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiConnectionFactoryResponse The JNDI Connection Factory object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnJndiConnectionFactory(
        msgVpnName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiConnectionFactoryResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a JNDI Connection Factory object.
     * Create a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnJndiConnectionFactoryApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a JNDI Connection Factory object.
     * Delete a JNDI Connection Factory object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnJndiConnectionFactory(
        msgVpnName: string,
        connectionFactoryName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a JNDI Connection Factory object.
     * Delete a JNDI Connection Factory object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnJndiConnectionFactoryApiRequestOptions(
        msgVpnName: string,
        connectionFactoryName: string,
    ): ApiRequestOptions;

    /**
     * Get a JNDI Connection Factory object.
     * Get a JNDI Connection Factory object.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiConnectionFactoryResponse The JNDI Connection Factory object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiConnectionFactory(
        msgVpnName: string,
        connectionFactoryName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiConnectionFactoryResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a JNDI Connection Factory object.
     * Get a JNDI Connection Factory object.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * connectionFactoryName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiConnectionFactoryApiRequestOptions(
        msgVpnName: string,
        connectionFactoryName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a JNDI Connection Factory object.
     * Update a JNDI Connection Factory object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * connectionFactoryName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiConnectionFactoryResponse The JNDI Connection Factory object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnJndiConnectionFactory(
        msgVpnName: string,
        connectionFactoryName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiConnectionFactoryResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a JNDI Connection Factory object.
     * Update a JNDI Connection Factory object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * connectionFactoryName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnJndiConnectionFactoryApiRequestOptions(
        msgVpnName: string,
        connectionFactoryName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a JNDI Connection Factory object.
     * Replace a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * connectionFactoryName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiConnectionFactoryResponse The JNDI Connection Factory object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnJndiConnectionFactory(
        msgVpnName: string,
        connectionFactoryName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiConnectionFactoryResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a JNDI Connection Factory object.
     * Replace a JNDI Connection Factory object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Connection Factory objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * connectionFactoryName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param connectionFactoryName The name of the JMS Connection Factory.
     * @param body The JNDI Connection Factory object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnJndiConnectionFactoryApiRequestOptions(
        msgVpnName: string,
        connectionFactoryName: string,
        body: MsgVpnJndiConnectionFactory,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of JNDI Queue objects.
     * Get a list of JNDI Queue objects.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiQueuesResponse The list of JNDI Queue objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiQueues(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnJndiQueuesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of JNDI Queue objects.
     * Get a list of JNDI Queue objects.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiQueuesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a JNDI Queue object.
     * Create a JNDI Queue object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiQueueResponse The JNDI Queue object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnJndiQueue(
        msgVpnName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a JNDI Queue object.
     * Create a JNDI Queue object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnJndiQueueApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a JNDI Queue object.
     * Delete a JNDI Queue object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnJndiQueue(
        msgVpnName: string,
        queueName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a JNDI Queue object.
     * Delete a JNDI Queue object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnJndiQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
    ): ApiRequestOptions;

    /**
     * Get a JNDI Queue object.
     * Get a JNDI Queue object.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiQueueResponse The JNDI Queue object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiQueue(
        msgVpnName: string,
        queueName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a JNDI Queue object.
     * Get a JNDI Queue object.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a JNDI Queue object.
     * Update a JNDI Queue object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiQueueResponse The JNDI Queue object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnJndiQueue(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a JNDI Queue object.
     * Update a JNDI Queue object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnJndiQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a JNDI Queue object.
     * Replace a JNDI Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiQueueResponse The JNDI Queue object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnJndiQueue(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a JNDI Queue object.
     * Replace a JNDI Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Queue objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The JNDI name of the JMS Queue.
     * @param body The JNDI Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnJndiQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnJndiQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of JNDI Topic objects.
     * Get a list of JNDI Topic objects.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiTopicsResponse The list of JNDI Topic objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiTopics(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnJndiTopicsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of JNDI Topic objects.
     * Get a list of JNDI Topic objects.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiTopicsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a JNDI Topic object.
     * Create a JNDI Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiTopicResponse The JNDI Topic object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnJndiTopic(
        msgVpnName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a JNDI Topic object.
     * Create a JNDI Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnJndiTopicApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a JNDI Topic object.
     * Delete a JNDI Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnJndiTopic(
        msgVpnName: string,
        topicName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a JNDI Topic object.
     * Delete a JNDI Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnJndiTopicApiRequestOptions(
        msgVpnName: string,
        topicName: string,
    ): ApiRequestOptions;

    /**
     * Get a JNDI Topic object.
     * Get a JNDI Topic object.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiTopicResponse The JNDI Topic object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnJndiTopic(
        msgVpnName: string,
        topicName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a JNDI Topic object.
     * Get a JNDI Topic object.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnJndiTopicApiRequestOptions(
        msgVpnName: string,
        topicName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a JNDI Topic object.
     * Update a JNDI Topic object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * topicName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiTopicResponse The JNDI Topic object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnJndiTopic(
        msgVpnName: string,
        topicName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a JNDI Topic object.
     * Update a JNDI Topic object. Any attribute missing from the request will be left unchanged.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * topicName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnJndiTopicApiRequestOptions(
        msgVpnName: string,
        topicName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a JNDI Topic object.
     * Replace a JNDI Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * topicName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnJndiTopicResponse The JNDI Topic object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnJndiTopic(
        msgVpnName: string,
        topicName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnJndiTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a JNDI Topic object.
     * Replace a JNDI Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The message broker provides an internal JNDI store for provisioned Topic objects that clients can access through JNDI lookups.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * topicName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.2.
     * @param msgVpnName The name of the Message VPN.
     * @param topicName The JNDI name of the JMS Topic.
     * @param body The JNDI Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnJndiTopicApiRequestOptions(
        msgVpnName: string,
        topicName: string,
        body: MsgVpnJndiTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of MQTT Retain Cache objects.
     * Get a list of MQTT Retain Cache objects.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttRetainCachesResponse The list of MQTT Retain Cache objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttRetainCaches(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnMqttRetainCachesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of MQTT Retain Cache objects.
     * Get a list of MQTT Retain Cache objects.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttRetainCachesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an MQTT Retain Cache object.
     * Create an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttRetainCacheResponse The MQTT Retain Cache object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnMqttRetainCache(
        msgVpnName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttRetainCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an MQTT Retain Cache object.
     * Create an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * cacheName|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnMqttRetainCacheApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an MQTT Retain Cache object.
     * Delete an MQTT Retain Cache object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnMqttRetainCache(
        msgVpnName: string,
        cacheName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an MQTT Retain Cache object.
     * Delete an MQTT Retain Cache object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnMqttRetainCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
    ): ApiRequestOptions;

    /**
     * Get an MQTT Retain Cache object.
     * Get an MQTT Retain Cache object.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttRetainCacheResponse The MQTT Retain Cache object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttRetainCache(
        msgVpnName: string,
        cacheName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttRetainCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an MQTT Retain Cache object.
     * Get an MQTT Retain Cache object.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * cacheName|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttRetainCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an MQTT Retain Cache object.
     * Update an MQTT Retain Cache object. Any attribute missing from the request will be left unchanged.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttRetainCacheResponse The MQTT Retain Cache object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnMqttRetainCache(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttRetainCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an MQTT Retain Cache object.
     * Update an MQTT Retain Cache object. Any attribute missing from the request will be left unchanged.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * cacheName|x|x||||
     * msgVpnName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnMqttRetainCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an MQTT Retain Cache object.
     * Replace an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttRetainCacheResponse The MQTT Retain Cache object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnMqttRetainCache(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttRetainCacheResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an MQTT Retain Cache object.
     * Replace an MQTT Retain Cache object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Using MQTT retained messages allows publishing MQTT clients to indicate that a message must be stored for later delivery to subscribing clients when those subscribing clients add subscriptions matching the retained message's topic. An MQTT Retain Cache processes all retained messages for a Message VPN.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * cacheName|x||x||||
     * msgVpnName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.11.
     * @param msgVpnName The name of the Message VPN.
     * @param cacheName The name of the MQTT Retain Cache.
     * @param body The MQTT Retain Cache object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnMqttRetainCacheApiRequestOptions(
        msgVpnName: string,
        cacheName: string,
        body: MsgVpnMqttRetainCache,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of MQTT Session objects.
     * Get a list of MQTT Session objects.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionsResponse The list of MQTT Session objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttSessions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of MQTT Session objects.
     * Get a list of MQTT Session objects.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttSessionsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an MQTT Session object.
     * Create an MQTT Session object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionResponse The MQTT Session object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnMqttSession(
        msgVpnName: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an MQTT Session object.
     * Create an MQTT Session object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnMqttSessionApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an MQTT Session object.
     * Delete an MQTT Session object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnMqttSession(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an MQTT Session object.
     * Delete an MQTT Session object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnMqttSessionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
    ): ApiRequestOptions;

    /**
     * Get an MQTT Session object.
     * Get an MQTT Session object.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionResponse The MQTT Session object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttSession(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an MQTT Session object.
     * Get an MQTT Session object.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttSessionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an MQTT Session object.
     * Update an MQTT Session object. Any attribute missing from the request will be left unchanged.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x|x||||
     * owner||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionResponse The MQTT Session object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnMqttSession(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an MQTT Session object.
     * Update an MQTT Session object. Any attribute missing from the request will be left unchanged.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x|x||||
     * owner||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnMqttSessionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an MQTT Session object.
     * Replace an MQTT Session object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x||x||||
     * mqttSessionVirtualRouter|x||x||||
     * msgVpnName|x||x||||
     * owner|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionResponse The MQTT Session object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnMqttSession(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an MQTT Session object.
     * Replace an MQTT Session object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An MQTT Session object is a virtual representation of an MQTT client connection. An MQTT session holds the state of an MQTT client (that is, it is used to contain a client's QoS 0 and QoS 1 subscription sets and any undelivered QoS 1 messages).
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x||x||||
     * mqttSessionVirtualRouter|x||x||||
     * msgVpnName|x||x||||
     * owner|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The MQTT Session object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnMqttSessionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSession,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Subscription objects.
     * Get a list of Subscription objects.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionSubscriptionsResponse The list of Subscription objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttSessionSubscriptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionSubscriptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Subscription objects.
     * Get a list of Subscription objects.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttSessionSubscriptionsApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Subscription object.
     * Create a Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x||x|||
     * mqttSessionVirtualRouter|x||x|||
     * msgVpnName|x||x|||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionSubscriptionResponse The Subscription object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnMqttSessionSubscription(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Subscription object.
     * Create a Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x||x|||
     * mqttSessionVirtualRouter|x||x|||
     * msgVpnName|x||x|||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnMqttSessionSubscriptionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Subscription object.
     * Delete a Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnMqttSessionSubscription(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Subscription object.
     * Delete a Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnMqttSessionSubscriptionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
    ): ApiRequestOptions;

    /**
     * Get a Subscription object.
     * Get a Subscription object.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionSubscriptionResponse The Subscription object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnMqttSessionSubscription(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Subscription object.
     * Get a Subscription object.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * mqttSessionClientId|x|||
     * mqttSessionVirtualRouter|x|||
     * msgVpnName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnMqttSessionSubscriptionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Subscription object.
     * Update a Subscription object. Any attribute missing from the request will be left unchanged.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x|x||||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionSubscriptionResponse The Subscription object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnMqttSessionSubscription(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Subscription object.
     * Update a Subscription object. Any attribute missing from the request will be left unchanged.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x|x||||
     * mqttSessionVirtualRouter|x|x||||
     * msgVpnName|x|x||||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnMqttSessionSubscriptionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Subscription object.
     * Replace a Subscription object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x||x||||
     * mqttSessionVirtualRouter|x||x||||
     * msgVpnName|x||x||||
     * subscriptionTopic|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnMqttSessionSubscriptionResponse The Subscription object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnMqttSessionSubscription(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnMqttSessionSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Subscription object.
     * Replace a Subscription object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * An MQTT session contains a client's QoS 0 and QoS 1 subscription sets. On creation, a subscription defaults to QoS 0.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * mqttSessionClientId|x||x||||
     * mqttSessionVirtualRouter|x||x||||
     * msgVpnName|x||x||||
     * subscriptionTopic|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param mqttSessionClientId The Client ID of the MQTT Session, which corresponds to the ClientId provided in the MQTT CONNECT packet.
     * @param mqttSessionVirtualRouter The virtual router of the MQTT Session.
     * @param subscriptionTopic The MQTT subscription topic.
     * @param body The Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnMqttSessionSubscriptionApiRequestOptions(
        msgVpnName: string,
        mqttSessionClientId: string,
        mqttSessionVirtualRouter: string,
        subscriptionTopic: string,
        body: MsgVpnMqttSessionSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Queue Template objects.
     * Get a list of Queue Template objects.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueTemplatesResponse The list of Queue Template objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueueTemplates(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnQueueTemplatesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Queue Template objects.
     * Get a list of Queue Template objects.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueueTemplatesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Queue Template object.
     * Create a Queue Template object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueTemplateResponse The Queue Template object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnQueueTemplate(
        msgVpnName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Queue Template object.
     * Create a Queue Template object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnQueueTemplateApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Queue Template object.
     * Delete a Queue Template object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnQueueTemplate(
        msgVpnName: string,
        queueTemplateName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Queue Template object.
     * Delete a Queue Template object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnQueueTemplateApiRequestOptions(
        msgVpnName: string,
        queueTemplateName: string,
    ): ApiRequestOptions;

    /**
     * Get a Queue Template object.
     * Get a Queue Template object.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueTemplateResponse The Queue Template object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueueTemplate(
        msgVpnName: string,
        queueTemplateName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Queue Template object.
     * Get a Queue Template object.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueueTemplateApiRequestOptions(
        msgVpnName: string,
        queueTemplateName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Queue Template object.
     * Update a Queue Template object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueTemplateResponse The Queue Template object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnQueueTemplate(
        msgVpnName: string,
        queueTemplateName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Queue Template object.
     * Update a Queue Template object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnQueueTemplateApiRequestOptions(
        msgVpnName: string,
        queueTemplateName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Queue Template object.
     * Replace a Queue Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueTemplateName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueTemplateResponse The Queue Template object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnQueueTemplate(
        msgVpnName: string,
        queueTemplateName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Queue Template object.
     * Replace a Queue Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue Template provides a mechanism for specifying the initial state for client created queues.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueTemplateName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param queueTemplateName The name of the Queue Template.
     * @param body The Queue Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnQueueTemplateApiRequestOptions(
        msgVpnName: string,
        queueTemplateName: string,
        body: MsgVpnQueueTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Queue objects.
     * Get a list of Queue objects.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueuesResponse The list of Queue objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueues(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnQueuesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Queue objects.
     * Get a list of Queue objects.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueuesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Queue object.
     * Create a Queue object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueResponse The Queue object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnQueue(
        msgVpnName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Queue object.
     * Create a Queue object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnQueueApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Queue object.
     * Delete a Queue object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnQueue(
        msgVpnName: string,
        queueName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Queue object.
     * Delete a Queue object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
    ): ApiRequestOptions;

    /**
     * Get a Queue object.
     * Get a Queue object.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueResponse The Queue object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueue(
        msgVpnName: string,
        queueName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Queue object.
     * Get a Queue object.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Queue object.
     * Update a Queue object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * accessType||||x||
     * msgVpnName|x|x||||
     * owner||||x||
     * permission||||x||
     * queueName|x|x||||
     * respectMsgPriorityEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueResponse The Queue object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnQueue(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Queue object.
     * Update a Queue object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * accessType||||x||
     * msgVpnName|x|x||||
     * owner||||x||
     * permission||||x||
     * queueName|x|x||||
     * respectMsgPriorityEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Queue object.
     * Replace a Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * accessType|||||x||
     * msgVpnName|x||x||||
     * owner|||||x||
     * permission|||||x||
     * queueName|x||x||||
     * respectMsgPriorityEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueResponse The Queue object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnQueue(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Queue object.
     * Replace a Queue object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue acts as both a destination that clients can publish messages to, and as an endpoint that clients can bind consumers to and consume messages from.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * accessType|||||x||
     * msgVpnName|x||x||||
     * owner|||||x||
     * permission|||||x||
     * queueName|x||x||||
     * respectMsgPriorityEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnQueueApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueue,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Queue Subscription objects.
     * Get a list of Queue Subscription objects.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueSubscriptionsResponse The list of Queue Subscription objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueueSubscriptions(
        msgVpnName: string,
        queueName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnQueueSubscriptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Queue Subscription objects.
     * Get a list of Queue Subscription objects.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueueSubscriptionsApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Queue Subscription object.
     * Create a Queue Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x||x|||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueSubscriptionResponse The Queue Subscription object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnQueueSubscription(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueueSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Queue Subscription object.
     * Create a Queue Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueName|x||x|||
     * subscriptionTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param body The Queue Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnQueueSubscriptionApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        body: MsgVpnQueueSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Queue Subscription object.
     * Delete a Queue Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param subscriptionTopic The topic of the Subscription.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnQueueSubscription(
        msgVpnName: string,
        queueName: string,
        subscriptionTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Queue Subscription object.
     * Delete a Queue Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param subscriptionTopic The topic of the Subscription.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnQueueSubscriptionApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        subscriptionTopic: string,
    ): ApiRequestOptions;

    /**
     * Get a Queue Subscription object.
     * Get a Queue Subscription object.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param subscriptionTopic The topic of the Subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnQueueSubscriptionResponse The Queue Subscription object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnQueueSubscription(
        msgVpnName: string,
        queueName: string,
        subscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnQueueSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Queue Subscription object.
     * Get a Queue Subscription object.
     *
     * One or more Queue Subscriptions can be added to a durable queue so that Guaranteed messages published to matching topics are also delivered to and spooled by the queue.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueName|x|||
     * subscriptionTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param queueName The name of the Queue.
     * @param subscriptionTopic The topic of the Subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnQueueSubscriptionApiRequestOptions(
        msgVpnName: string,
        queueName: string,
        subscriptionTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Replay Log objects.
     * Get a list of Replay Log objects.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogsResponse The list of Replay Log objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplayLogs(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Replay Log objects.
     * Get a list of Replay Log objects.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplayLogsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Replay Log object.
     * Create a Replay Log object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replayLogName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogResponse The Replay Log object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnReplayLog(
        msgVpnName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Replay Log object.
     * Create a Replay Log object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replayLogName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnReplayLogApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Replay Log object.
     * Delete a Replay Log object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnReplayLog(
        msgVpnName: string,
        replayLogName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Replay Log object.
     * Delete a Replay Log object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnReplayLogApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
    ): ApiRequestOptions;

    /**
     * Get a Replay Log object.
     * Get a Replay Log object.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogResponse The Replay Log object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplayLog(
        msgVpnName: string,
        replayLogName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Replay Log object.
     * Get a Replay Log object.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplayLogApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Replay Log object.
     * Update a Replay Log object. Any attribute missing from the request will be left unchanged.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * replayLogName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogResponse The Replay Log object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnReplayLog(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Replay Log object.
     * Update a Replay Log object. Any attribute missing from the request will be left unchanged.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * replayLogName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnReplayLogApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Replay Log object.
     * Replace a Replay Log object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * replayLogName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogResponse The Replay Log object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnReplayLog(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Replay Log object.
     * Replace a Replay Log object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * When the Message Replay feature is enabled, message brokers store persistent messages in a Replay Log. These messages are kept until the log is full, after which the oldest messages are removed to free up space for new messages.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * replayLogName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.10.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Replay Log object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnReplayLogApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLog,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Topic Filter Subscription objects.
     * Get a list of Topic Filter Subscription objects.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     * topicFilterSubscription|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogTopicFilterSubscriptionsResponse The list of Topic Filter Subscription objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplayLogTopicFilterSubscriptions(
        msgVpnName: string,
        replayLogName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogTopicFilterSubscriptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Topic Filter Subscription objects.
     * Get a list of Topic Filter Subscription objects.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     * topicFilterSubscription|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplayLogTopicFilterSubscriptionsApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Topic Filter Subscription object.
     * Create a Topic Filter Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replayLogName|x||x|||
     * topicFilterSubscription|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Topic Filter Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogTopicFilterSubscriptionResponse The Topic Filter Subscription object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnReplayLogTopicFilterSubscription(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLogTopicFilterSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogTopicFilterSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Topic Filter Subscription object.
     * Create a Topic Filter Subscription object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replayLogName|x||x|||
     * topicFilterSubscription|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param body The Topic Filter Subscription object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnReplayLogTopicFilterSubscriptionApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        body: MsgVpnReplayLogTopicFilterSubscription,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Topic Filter Subscription object.
     * Delete a Topic Filter Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param topicFilterSubscription The topic of the Subscription.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnReplayLogTopicFilterSubscription(
        msgVpnName: string,
        replayLogName: string,
        topicFilterSubscription: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Topic Filter Subscription object.
     * Delete a Topic Filter Subscription object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param topicFilterSubscription The topic of the Subscription.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnReplayLogTopicFilterSubscriptionApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        topicFilterSubscription: string,
    ): ApiRequestOptions;

    /**
     * Get a Topic Filter Subscription object.
     * Get a Topic Filter Subscription object.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     * topicFilterSubscription|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param topicFilterSubscription The topic of the Subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplayLogTopicFilterSubscriptionResponse The Topic Filter Subscription object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplayLogTopicFilterSubscription(
        msgVpnName: string,
        replayLogName: string,
        topicFilterSubscription: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplayLogTopicFilterSubscriptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Topic Filter Subscription object.
     * Get a Topic Filter Subscription object.
     *
     * One or more Subscriptions can be added to a replay-log so that only guaranteed messages published to matching topics are stored in the Replay Log.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replayLogName|x|||
     * topicFilterSubscription|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.27.
     * @param msgVpnName The name of the Message VPN.
     * @param replayLogName The name of the Replay Log.
     * @param topicFilterSubscription The topic of the Subscription.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplayLogTopicFilterSubscriptionApiRequestOptions(
        msgVpnName: string,
        replayLogName: string,
        topicFilterSubscription: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Replicated Topic objects.
     * Get a list of Replicated Topic objects.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replicatedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplicatedTopicsResponse The list of Replicated Topic objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplicatedTopics(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnReplicatedTopicsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Replicated Topic objects.
     * Get a list of Replicated Topic objects.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replicatedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplicatedTopicsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Replicated Topic object.
     * Create a Replicated Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replicatedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplicatedTopicResponse The Replicated Topic object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnReplicatedTopic(
        msgVpnName: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplicatedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Replicated Topic object.
     * Create a Replicated Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * replicatedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnReplicatedTopicApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Replicated Topic object.
     * Delete a Replicated Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnReplicatedTopic(
        msgVpnName: string,
        replicatedTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Replicated Topic object.
     * Delete a Replicated Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnReplicatedTopicApiRequestOptions(
        msgVpnName: string,
        replicatedTopic: string,
    ): ApiRequestOptions;

    /**
     * Get a Replicated Topic object.
     * Get a Replicated Topic object.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replicatedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplicatedTopicResponse The Replicated Topic object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnReplicatedTopic(
        msgVpnName: string,
        replicatedTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplicatedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Replicated Topic object.
     * Get a Replicated Topic object.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * replicatedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnReplicatedTopicApiRequestOptions(
        msgVpnName: string,
        replicatedTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Replicated Topic object.
     * Update a Replicated Topic object. Any attribute missing from the request will be left unchanged.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * replicatedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplicatedTopicResponse The Replicated Topic object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnReplicatedTopic(
        msgVpnName: string,
        replicatedTopic: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplicatedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Replicated Topic object.
     * Update a Replicated Topic object. Any attribute missing from the request will be left unchanged.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * replicatedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnReplicatedTopicApiRequestOptions(
        msgVpnName: string,
        replicatedTopic: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Replicated Topic object.
     * Replace a Replicated Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * replicatedTopic|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnReplicatedTopicResponse The Replicated Topic object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnReplicatedTopic(
        msgVpnName: string,
        replicatedTopic: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnReplicatedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Replicated Topic object.
     * Replace a Replicated Topic object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * To indicate which messages should be replicated between the active and standby site, a Replicated Topic subscription must be configured on a Message VPN. If a published message matches both a replicated topic and an endpoint on the active site, then the message is replicated to the standby site.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * replicatedTopic|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param replicatedTopic The topic for applying replication. Published messages matching this topic will be replicated to the standby site.
     * @param body The Replicated Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnReplicatedTopicApiRequestOptions(
        msgVpnName: string,
        replicatedTopic: string,
        body: MsgVpnReplicatedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of REST Delivery Point objects.
     * Get a list of REST Delivery Point objects.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointsResponse The list of REST Delivery Point objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPoints(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of REST Delivery Point objects.
     * Get a list of REST Delivery Point objects.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a REST Delivery Point object.
     * Create a REST Delivery Point object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointResponse The REST Delivery Point object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPoint(
        msgVpnName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a REST Delivery Point object.
     * Create a REST Delivery Point object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a REST Delivery Point object.
     * Delete a REST Delivery Point object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPoint(
        msgVpnName: string,
        restDeliveryPointName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a REST Delivery Point object.
     * Delete a REST Delivery Point object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
    ): ApiRequestOptions;

    /**
     * Get a REST Delivery Point object.
     * Get a REST Delivery Point object.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointResponse The REST Delivery Point object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPoint(
        msgVpnName: string,
        restDeliveryPointName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a REST Delivery Point object.
     * Get a REST Delivery Point object.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a REST Delivery Point object.
     * Update a REST Delivery Point object. Any attribute missing from the request will be left unchanged.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientProfileName||||x||
     * msgVpnName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointResponse The REST Delivery Point object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnRestDeliveryPoint(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a REST Delivery Point object.
     * Update a REST Delivery Point object. Any attribute missing from the request will be left unchanged.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientProfileName||||x||
     * msgVpnName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnRestDeliveryPointApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a REST Delivery Point object.
     * Replace a REST Delivery Point object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientProfileName|||||x||
     * msgVpnName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointResponse The REST Delivery Point object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnRestDeliveryPoint(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a REST Delivery Point object.
     * Replace a REST Delivery Point object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A REST Delivery Point manages delivery of messages from queues to a named list of REST Consumers.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientProfileName|||||x||
     * msgVpnName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Delivery Point object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnRestDeliveryPointApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Queue Binding objects.
     * Get a list of Queue Binding objects.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingsResponse The list of Queue Binding objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointQueueBindings(
        msgVpnName: string,
        restDeliveryPointName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Queue Binding objects.
     * Get a list of Queue Binding objects.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointQueueBindingsApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Queue Binding object.
     * Create a Queue Binding object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingResponse The Queue Binding object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPointQueueBinding(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Queue Binding object.
     * Create a Queue Binding object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointQueueBindingApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Queue Binding object.
     * Delete a Queue Binding object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPointQueueBinding(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Queue Binding object.
     * Delete a Queue Binding object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointQueueBindingApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
    ): ApiRequestOptions;

    /**
     * Get a Queue Binding object.
     * Get a Queue Binding object.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingResponse The Queue Binding object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointQueueBinding(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Queue Binding object.
     * Get a Queue Binding object.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointQueueBindingApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Queue Binding object.
     * Update a Queue Binding object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingResponse The Queue Binding object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnRestDeliveryPointQueueBinding(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Queue Binding object.
     * Update a Queue Binding object. Any attribute missing from the request will be left unchanged.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnRestDeliveryPointQueueBindingApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Queue Binding object.
     * Replace a Queue Binding object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueBindingName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingResponse The Queue Binding object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnRestDeliveryPointQueueBinding(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Queue Binding object.
     * Replace a Queue Binding object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Queue Binding for a REST Delivery Point attracts messages to be delivered to REST consumers. If the queue does not exist it can be created subsequently, and once the queue is operational the broker performs the queue binding. Removing the queue binding does not delete the queue itself. Similarly, removing the queue does not remove the queue binding, which fails until the queue is recreated or the queue binding is deleted.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * queueBindingName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Queue Binding object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnRestDeliveryPointQueueBindingApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBinding,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Request Header objects.
     * Get a list of Request Header objects.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * headerName|x|||
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse The list of Request Header objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointQueueBindingRequestHeaders(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingRequestHeadersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Request Header objects.
     * Get a list of Request Header objects.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * headerName|x|||
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointQueueBindingRequestHeadersApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Request Header object.
     * Create a Request Header object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * headerName|x|x||||
     * msgVpnName|x||x|||
     * queueBindingName|x||x|||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse The Request Header object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPointQueueBindingRequestHeader(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Request Header object.
     * Create a Request Header object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * headerName|x|x||||
     * msgVpnName|x||x|||
     * queueBindingName|x||x|||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointQueueBindingRequestHeaderApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Request Header object.
     * Delete a Request Header object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A request header to be added to the HTTP request.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPointQueueBindingRequestHeader(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Request Header object.
     * Delete a Request Header object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A request header to be added to the HTTP request.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointQueueBindingRequestHeaderApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
    ): ApiRequestOptions;

    /**
     * Get a Request Header object.
     * Get a Request Header object.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * headerName|x|||
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse The Request Header object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointQueueBindingRequestHeader(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Request Header object.
     * Get a Request Header object.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * headerName|x|||
     * msgVpnName|x|||
     * queueBindingName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointQueueBindingRequestHeaderApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Request Header object.
     * Update a Request Header object. Any attribute missing from the request will be left unchanged.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * headerName|x|x||||
     * msgVpnName|x|x||||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse The Request Header object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnRestDeliveryPointQueueBindingRequestHeader(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Request Header object.
     * Update a Request Header object. Any attribute missing from the request will be left unchanged.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * headerName|x|x||||
     * msgVpnName|x|x||||
     * queueBindingName|x|x||||
     * restDeliveryPointName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnRestDeliveryPointQueueBindingRequestHeaderApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Request Header object.
     * Replace a Request Header object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * headerName|x||x||||
     * msgVpnName|x||x||||
     * queueBindingName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse The Request Header object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnRestDeliveryPointQueueBindingRequestHeader(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointQueueBindingRequestHeaderResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Request Header object.
     * Replace a Request Header object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A request header to be added to the HTTP request.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * headerName|x||x||||
     * msgVpnName|x||x||||
     * queueBindingName|x||x||||
     * restDeliveryPointName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.23.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param queueBindingName The name of a queue in the Message VPN.
     * @param headerName The name of the HTTP request header.
     * @param body The Request Header object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnRestDeliveryPointQueueBindingRequestHeaderApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        queueBindingName: string,
        headerName: string,
        body: MsgVpnRestDeliveryPointQueueBindingRequestHeader,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of REST Consumer objects.
     * Get a list of REST Consumer objects.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * authenticationHttpBasicPassword||x||x
     * authenticationHttpHeaderValue||x||x
     * authenticationOauthClientSecret||x||x
     * authenticationOauthJwtSecretKey||x||x
     * msgVpnName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumersResponse The list of REST Consumer objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumers(
        msgVpnName: string,
        restDeliveryPointName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of REST Consumer objects.
     * Get a list of REST Consumer objects.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * authenticationHttpBasicPassword||x||x
     * authenticationHttpHeaderValue||x||x
     * authenticationOauthClientSecret||x||x
     * authenticationOauthJwtSecretKey||x||x
     * msgVpnName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumersApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a REST Consumer object.
     * Create a REST Consumer object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||||x||x
     * authenticationClientCertContent||||x||x
     * authenticationClientCertPassword||||x||
     * authenticationHttpBasicPassword||||x||x
     * authenticationHttpHeaderValue||||x||x
     * authenticationOauthClientSecret||||x||x
     * authenticationOauthJwtSecretKey||||x||x
     * msgVpnName|x||x|||
     * restConsumerName|x|x||||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerResponse The REST Consumer object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPointRestConsumer(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a REST Consumer object.
     * Create a REST Consumer object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||||x||x
     * authenticationClientCertContent||||x||x
     * authenticationClientCertPassword||||x||
     * authenticationHttpBasicPassword||||x||x
     * authenticationHttpHeaderValue||||x||x
     * authenticationOauthClientSecret||||x||x
     * authenticationOauthJwtSecretKey||||x||x
     * msgVpnName|x||x|||
     * restConsumerName|x|x||||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointRestConsumerApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a REST Consumer object.
     * Delete a REST Consumer object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPointRestConsumer(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a REST Consumer object.
     * Delete a REST Consumer object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointRestConsumerApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
    ): ApiRequestOptions;

    /**
     * Get a REST Consumer object.
     * Get a REST Consumer object.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * authenticationHttpBasicPassword||x||x
     * authenticationHttpHeaderValue||x||x
     * authenticationOauthClientSecret||x||x
     * authenticationOauthJwtSecretKey||x||x
     * msgVpnName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerResponse The REST Consumer object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumer(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a REST Consumer object.
     * Get a REST Consumer object.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authenticationAwsSecretAccessKey||x||x
     * authenticationClientCertContent||x||x
     * authenticationClientCertPassword||x||
     * authenticationHttpBasicPassword||x||x
     * authenticationHttpHeaderValue||x||x
     * authenticationOauthClientSecret||x||x
     * authenticationOauthJwtSecretKey||x||x
     * msgVpnName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumerApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a REST Consumer object.
     * Update a REST Consumer object. Any attribute missing from the request will be left unchanged.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationAwsSecretAccessKey|||x|||x
     * authenticationClientCertContent|||x|x||x
     * authenticationClientCertPassword|||x|x||
     * authenticationHttpBasicPassword|||x|x||x
     * authenticationHttpBasicUsername||||x||
     * authenticationHttpHeaderValue|||x|||x
     * authenticationOauthClientId||||x||
     * authenticationOauthClientScope||||x||
     * authenticationOauthClientSecret|||x|x||x
     * authenticationOauthClientTokenEndpoint||||x||
     * authenticationOauthJwtSecretKey|||x|x||x
     * authenticationOauthJwtTokenEndpoint||||x||
     * authenticationScheme||||x||
     * msgVpnName|x|x||||
     * outgoingConnectionCount||||x||
     * remoteHost||||x||
     * remotePort||||x||
     * restConsumerName|x|x||||
     * restDeliveryPointName|x|x||||
     * tlsCipherSuiteList||||x||
     * tlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerResponse The REST Consumer object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnRestDeliveryPointRestConsumer(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a REST Consumer object.
     * Update a REST Consumer object. Any attribute missing from the request will be left unchanged.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authenticationAwsSecretAccessKey|||x|||x
     * authenticationClientCertContent|||x|x||x
     * authenticationClientCertPassword|||x|x||
     * authenticationHttpBasicPassword|||x|x||x
     * authenticationHttpBasicUsername||||x||
     * authenticationHttpHeaderValue|||x|||x
     * authenticationOauthClientId||||x||
     * authenticationOauthClientScope||||x||
     * authenticationOauthClientSecret|||x|x||x
     * authenticationOauthClientTokenEndpoint||||x||
     * authenticationOauthJwtSecretKey|||x|x||x
     * authenticationOauthJwtTokenEndpoint||||x||
     * authenticationScheme||||x||
     * msgVpnName|x|x||||
     * outgoingConnectionCount||||x||
     * remoteHost||||x||
     * remotePort||||x||
     * restConsumerName|x|x||||
     * restDeliveryPointName|x|x||||
     * tlsCipherSuiteList||||x||
     * tlsEnabled||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnRestDeliveryPointRestConsumerApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a REST Consumer object.
     * Replace a REST Consumer object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationAwsSecretAccessKey||||x|||x
     * authenticationClientCertContent||||x|x||x
     * authenticationClientCertPassword||||x|x||
     * authenticationHttpBasicPassword||||x|x||x
     * authenticationHttpBasicUsername|||||x||
     * authenticationHttpHeaderValue||||x|||x
     * authenticationOauthClientId|||||x||
     * authenticationOauthClientScope|||||x||
     * authenticationOauthClientSecret||||x|x||x
     * authenticationOauthClientTokenEndpoint|||||x||
     * authenticationOauthJwtSecretKey||||x|x||x
     * authenticationOauthJwtTokenEndpoint|||||x||
     * authenticationScheme|||||x||
     * msgVpnName|x||x||||
     * outgoingConnectionCount|||||x||
     * remoteHost|||||x||
     * remotePort|||||x||
     * restConsumerName|x||x||||
     * restDeliveryPointName|x||x||||
     * tlsCipherSuiteList|||||x||
     * tlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerResponse The REST Consumer object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnRestDeliveryPointRestConsumer(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a REST Consumer object.
     * Replace a REST Consumer object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * REST Consumer objects establish HTTP connectivity to REST consumer applications who wish to receive messages from a broker.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authenticationAwsSecretAccessKey||||x|||x
     * authenticationClientCertContent||||x|x||x
     * authenticationClientCertPassword||||x|x||
     * authenticationHttpBasicPassword||||x|x||x
     * authenticationHttpBasicUsername|||||x||
     * authenticationHttpHeaderValue||||x|||x
     * authenticationOauthClientId|||||x||
     * authenticationOauthClientScope|||||x||
     * authenticationOauthClientSecret||||x|x||x
     * authenticationOauthClientTokenEndpoint|||||x||
     * authenticationOauthJwtSecretKey||||x|x||x
     * authenticationOauthJwtTokenEndpoint|||||x||
     * authenticationScheme|||||x||
     * msgVpnName|x||x||||
     * outgoingConnectionCount|||||x||
     * remoteHost|||||x||
     * remotePort|||||x||
     * restConsumerName|x||x||||
     * restDeliveryPointName|x||x||||
     * tlsCipherSuiteList|||||x||
     * tlsEnabled|||||x||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * MsgVpnRestDeliveryPointRestConsumer|authenticationClientCertPassword|authenticationClientCertContent|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicPassword|authenticationHttpBasicUsername|
     * MsgVpnRestDeliveryPointRestConsumer|authenticationHttpBasicUsername|authenticationHttpBasicPassword|
     * MsgVpnRestDeliveryPointRestConsumer|remotePort|tlsEnabled|
     * MsgVpnRestDeliveryPointRestConsumer|tlsEnabled|remotePort|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The REST Consumer object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnRestDeliveryPointRestConsumerApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumer,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Claim objects.
     * Get a list of Claim objects.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthJwtClaimName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse The list of Claim objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaims(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Claim objects.
     * Get a list of Claim objects.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthJwtClaimName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaimsApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Claim object.
     * Create a Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * oauthJwtClaimName|x|x||||
     * oauthJwtClaimValue||x||||
     * restConsumerName|x||x|||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse The Claim object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Claim object.
     * Create a Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * oauthJwtClaimName|x|x||||
     * oauthJwtClaimValue||x||||
     * restConsumerName|x||x|||
     * restDeliveryPointName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointRestConsumerOauthJwtClaimApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumerOauthJwtClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Claim object.
     * Delete a Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param oauthJwtClaimName The name of the additional claim. Cannot be "exp", "iat", or "jti".
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        oauthJwtClaimName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Claim object.
     * Delete a Claim object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param oauthJwtClaimName The name of the additional claim. Cannot be "exp", "iat", or "jti".
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointRestConsumerOauthJwtClaimApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        oauthJwtClaimName: string,
    ): ApiRequestOptions;

    /**
     * Get a Claim object.
     * Get a Claim object.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthJwtClaimName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param oauthJwtClaimName The name of the additional claim. Cannot be "exp", "iat", or "jti".
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse The Claim object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaim(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        oauthJwtClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerOauthJwtClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Claim object.
     * Get a Claim object.
     *
     * A Claim is added to the JWT sent to the OAuth token request endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthJwtClaimName|x|||
     * restConsumerName|x|||
     * restDeliveryPointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.21.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param oauthJwtClaimName The name of the additional claim. Cannot be "exp", "iat", or "jti".
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumerOauthJwtClaimApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        oauthJwtClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|
     * restConsumerName|x||x|
     * restDeliveryPointName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse The list of Trusted Common Name objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNames(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a list of Trusted Common Name objects.
     * Get a list of Trusted Common Name objects.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|
     * restConsumerName|x||x|
     * restDeliveryPointName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNamesApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x||x|
     * restConsumerName|x||x||x|
     * restDeliveryPointName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse The Trusted Common Name object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Create a Trusted Common Name object.
     * Create a Trusted Common Name object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x||x|
     * restConsumerName|x||x||x|
     * restDeliveryPointName|x||x||x|
     * tlsTrustedCommonName|x|x|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param body The Trusted Common Name object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        body: MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        tlsTrustedCommonName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Delete a Trusted Common Name object.
     * Delete a Trusted Common Name object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        tlsTrustedCommonName: string,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|
     * restConsumerName|x||x|
     * restDeliveryPointName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse The Trusted Common Name object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonName(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a Trusted Common Name object.
     * Get a Trusted Common Name object.
     *
     * The Trusted Common Names for the REST Consumer are used by encrypted transports to verify the name in the certificate presented by the remote REST consumer. They must include the common name of the remote REST consumer's server certificate.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|
     * restConsumerName|x||x|
     * restDeliveryPointName|x||x|
     * tlsTrustedCommonName|x||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been deprecated since (will be deprecated in next SEMP version). Common Name validation has been replaced by Server Certificate Name validation.
     * @param msgVpnName The name of the Message VPN.
     * @param restDeliveryPointName The name of the REST Delivery Point.
     * @param restConsumerName The name of the REST Consumer.
     * @param tlsTrustedCommonName The expected trusted common name of the remote certificate.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnRestDeliveryPointRestConsumerTlsTrustedCommonNameApiRequestOptions(
        msgVpnName: string,
        restDeliveryPointName: string,
        restConsumerName: string,
        tlsTrustedCommonName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Sequenced Topic objects.
     * Get a list of Sequenced Topic objects.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * sequencedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnSequencedTopicsResponse The list of Sequenced Topic objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnSequencedTopics(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnSequencedTopicsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Sequenced Topic objects.
     * Get a list of Sequenced Topic objects.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * sequencedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnSequencedTopicsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Sequenced Topic object.
     * Create a Sequenced Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * sequencedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Sequenced Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnSequencedTopicResponse The Sequenced Topic object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnSequencedTopic(
        msgVpnName: string,
        body: MsgVpnSequencedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnSequencedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Sequenced Topic object.
     * Create a Sequenced Topic object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * sequencedTopic|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Sequenced Topic object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnSequencedTopicApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnSequencedTopic,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Sequenced Topic object.
     * Delete a Sequenced Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param sequencedTopic Topic for applying sequence numbers.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnSequencedTopic(
        msgVpnName: string,
        sequencedTopic: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Sequenced Topic object.
     * Delete a Sequenced Topic object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param sequencedTopic Topic for applying sequence numbers.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnSequencedTopicApiRequestOptions(
        msgVpnName: string,
        sequencedTopic: string,
    ): ApiRequestOptions;

    /**
     * Get a Sequenced Topic object.
     * Get a Sequenced Topic object.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * sequencedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param sequencedTopic Topic for applying sequence numbers.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnSequencedTopicResponse The Sequenced Topic object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnSequencedTopic(
        msgVpnName: string,
        sequencedTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnSequencedTopicResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Sequenced Topic object.
     * Get a Sequenced Topic object.
     *
     * A Sequenced Topic is a topic subscription for which any matching messages received on the Message VPN are assigned a sequence number that is monotonically increased by a value of one per message.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * sequencedTopic|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.0.
     * @param msgVpnName The name of the Message VPN.
     * @param sequencedTopic Topic for applying sequence numbers.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnSequencedTopicApiRequestOptions(
        msgVpnName: string,
        sequencedTopic: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Topic Endpoint Template objects.
     * Get a list of Topic Endpoint Template objects.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointTemplatesResponse The list of Topic Endpoint Template objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnTopicEndpointTemplates(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointTemplatesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Topic Endpoint Template objects.
     * Get a list of Topic Endpoint Template objects.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnTopicEndpointTemplatesApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Topic Endpoint Template object.
     * Create a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicEndpointTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointTemplateResponse The Topic Endpoint Template object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnTopicEndpointTemplate(
        msgVpnName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Topic Endpoint Template object.
     * Create a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicEndpointTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnTopicEndpointTemplateApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Topic Endpoint Template object.
     * Delete a Topic Endpoint Template object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnTopicEndpointTemplate(
        msgVpnName: string,
        topicEndpointTemplateName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Topic Endpoint Template object.
     * Delete a Topic Endpoint Template object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnTopicEndpointTemplateApiRequestOptions(
        msgVpnName: string,
        topicEndpointTemplateName: string,
    ): ApiRequestOptions;

    /**
     * Get a Topic Endpoint Template object.
     * Get a Topic Endpoint Template object.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointTemplateResponse The Topic Endpoint Template object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnTopicEndpointTemplate(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Topic Endpoint Template object.
     * Get a Topic Endpoint Template object.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointTemplateName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnTopicEndpointTemplateApiRequestOptions(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Topic Endpoint Template object.
     * Update a Topic Endpoint Template object. Any attribute missing from the request will be left unchanged.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * topicEndpointTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointTemplateResponse The Topic Endpoint Template object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnTopicEndpointTemplate(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Topic Endpoint Template object.
     * Update a Topic Endpoint Template object. Any attribute missing from the request will be left unchanged.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * topicEndpointTemplateName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnTopicEndpointTemplateApiRequestOptions(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Topic Endpoint Template object.
     * Replace a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * topicEndpointTemplateName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointTemplateResponse The Topic Endpoint Template object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnTopicEndpointTemplate(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointTemplateResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Topic Endpoint Template object.
     * Replace a Topic Endpoint Template object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Topic Endpoint Template provides a mechanism for specifying the initial state for client created topic endpoints.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * topicEndpointTemplateName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.14.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointTemplateName The name of the Topic Endpoint Template.
     * @param body The Topic Endpoint Template object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnTopicEndpointTemplateApiRequestOptions(
        msgVpnName: string,
        topicEndpointTemplateName: string,
        body: MsgVpnTopicEndpointTemplate,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Topic Endpoint objects.
     * Get a list of Topic Endpoint objects.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointsResponse The list of Topic Endpoint objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnTopicEndpoints(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Topic Endpoint objects.
     * Get a list of Topic Endpoint objects.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnTopicEndpointsApiRequestOptions(
        msgVpnName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Topic Endpoint object.
     * Create a Topic Endpoint object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicEndpointName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointResponse The Topic Endpoint object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createMsgVpnTopicEndpoint(
        msgVpnName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Topic Endpoint object.
     * Create a Topic Endpoint object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x||x|||
     * topicEndpointName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createMsgVpnTopicEndpointApiRequestOptions(
        msgVpnName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Topic Endpoint object.
     * Delete a Topic Endpoint object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteMsgVpnTopicEndpoint(
        msgVpnName: string,
        topicEndpointName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Topic Endpoint object.
     * Delete a Topic Endpoint object. The deletion of instances of this object are synchronized to HA mates and replication sites via config-sync.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteMsgVpnTopicEndpointApiRequestOptions(
        msgVpnName: string,
        topicEndpointName: string,
    ): ApiRequestOptions;

    /**
     * Get a Topic Endpoint object.
     * Get a Topic Endpoint object.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointResponse The Topic Endpoint object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getMsgVpnTopicEndpoint(
        msgVpnName: string,
        topicEndpointName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Topic Endpoint object.
     * Get a Topic Endpoint object.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * topicEndpointName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-only" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getMsgVpnTopicEndpointApiRequestOptions(
        msgVpnName: string,
        topicEndpointName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Topic Endpoint object.
     * Update a Topic Endpoint object. Any attribute missing from the request will be left unchanged.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * accessType||||x||
     * msgVpnName|x|x||||
     * owner||||x||
     * permission||||x||
     * respectMsgPriorityEnabled||||x||
     * topicEndpointName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointResponse The Topic Endpoint object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateMsgVpnTopicEndpoint(
        msgVpnName: string,
        topicEndpointName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Topic Endpoint object.
     * Update a Topic Endpoint object. Any attribute missing from the request will be left unchanged.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * accessType||||x||
     * msgVpnName|x|x||||
     * owner||||x||
     * permission||||x||
     * respectMsgPriorityEnabled||||x||
     * topicEndpointName|x|x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateMsgVpnTopicEndpointApiRequestOptions(
        msgVpnName: string,
        topicEndpointName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Topic Endpoint object.
     * Replace a Topic Endpoint object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * accessType|||||x||
     * msgVpnName|x||x||||
     * owner|||||x||
     * permission|||||x||
     * respectMsgPriorityEnabled|||||x||
     * topicEndpointName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns MsgVpnTopicEndpointResponse The Topic Endpoint object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceMsgVpnTopicEndpoint(
        msgVpnName: string,
        topicEndpointName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<MsgVpnTopicEndpointResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Topic Endpoint object.
     * Replace a Topic Endpoint object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Topic Endpoint attracts messages published to a topic for which the Topic Endpoint has a matching topic subscription. The topic subscription for the Topic Endpoint is specified in the client request to bind a Flow to that Topic Endpoint. Queues are significantly more flexible than Topic Endpoints and are the recommended approach for most applications. The use of Topic Endpoints should be restricted to JMS applications.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * accessType|||||x||
     * msgVpnName|x||x||||
     * owner|||||x||
     * permission|||||x||
     * respectMsgPriorityEnabled|||||x||
     * topicEndpointName|x||x||||
     *
     *
     *
     * The following attributes in the request may only be provided in certain combinations with other attributes:
     *
     *
     * Class|Attribute|Requires|Conflicts
     * :---|:---|:---|:---
     * EventThreshold|clearPercent|setPercent|clearValue, setValue
     * EventThreshold|clearValue|setValue|clearPercent, setPercent
     * EventThreshold|setPercent|clearPercent|clearValue, setValue
     * EventThreshold|setValue|clearValue|clearPercent, setPercent
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "vpn/read-write" is required to perform this operation.
     *
     * This has been available since 2.1.
     * @param msgVpnName The name of the Message VPN.
     * @param topicEndpointName The name of the Topic Endpoint.
     * @param body The Topic Endpoint object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceMsgVpnTopicEndpointApiRequestOptions(
        msgVpnName: string,
        topicEndpointName: string,
        body: MsgVpnTopicEndpoint,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of OAuth Profile objects.
     * Get a list of OAuth Profile objects.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfilesResponse The list of OAuth Profile objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfiles(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfilesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of OAuth Profile objects.
     * Get a list of OAuth Profile objects.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfilesApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an OAuth Profile object.
     * Create an OAuth Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientSecret||||x||x
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResponse The OAuth Profile object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfile(
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an OAuth Profile object.
     * Create an OAuth Profile object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientSecret||||x||x
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileApiRequestOptions(
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an OAuth Profile object.
     * Delete an OAuth Profile object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfile(
        oauthProfileName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an OAuth Profile object.
     * Delete an OAuth Profile object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileApiRequestOptions(
        oauthProfileName: string,
    ): ApiRequestOptions;

    /**
     * Get an OAuth Profile object.
     * Get an OAuth Profile object.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResponse The OAuth Profile object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfile(
        oauthProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an OAuth Profile object.
     * Get an OAuth Profile object.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientSecret||x||x
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileApiRequestOptions(
        oauthProfileName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an OAuth Profile object.
     * Update an OAuth Profile object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientSecret|||x|||x
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * accessLevelGroupsClaimName|global/admin
     * clientId|global/admin
     * clientRedirectUri|global/admin
     * clientRequiredType|global/admin
     * clientScope|global/admin
     * clientSecret|global/admin
     * clientValidateTypeEnabled|global/admin
     * defaultGlobalAccessLevel|global/admin
     * displayName|global/admin
     * enabled|global/admin
     * endpointAuthorization|global/admin
     * endpointDiscovery|global/admin
     * endpointDiscoveryRefreshInterval|global/admin
     * endpointIntrospection|global/admin
     * endpointIntrospectionTimeout|global/admin
     * endpointJwks|global/admin
     * endpointJwksRefreshInterval|global/admin
     * endpointToken|global/admin
     * endpointTokenTimeout|global/admin
     * endpointUserinfo|global/admin
     * endpointUserinfoTimeout|global/admin
     * interactiveEnabled|global/admin
     * interactivePromptForExpiredSession|global/admin
     * interactivePromptForNewSession|global/admin
     * issuer|global/admin
     * oauthRole|global/admin
     * resourceServerParseAccessTokenEnabled|global/admin
     * resourceServerRequiredAudience|global/admin
     * resourceServerRequiredIssuer|global/admin
     * resourceServerRequiredScope|global/admin
     * resourceServerRequiredType|global/admin
     * resourceServerValidateAudienceEnabled|global/admin
     * resourceServerValidateIssuerEnabled|global/admin
     * resourceServerValidateScopeEnabled|global/admin
     * resourceServerValidateTypeEnabled|global/admin
     * sempEnabled|global/admin
     * usernameClaimName|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResponse The OAuth Profile object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateOauthProfile(
        oauthProfileName: string,
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an OAuth Profile object.
     * Update an OAuth Profile object. Any attribute missing from the request will be left unchanged.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * clientSecret|||x|||x
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * accessLevelGroupsClaimName|global/admin
     * clientId|global/admin
     * clientRedirectUri|global/admin
     * clientRequiredType|global/admin
     * clientScope|global/admin
     * clientSecret|global/admin
     * clientValidateTypeEnabled|global/admin
     * defaultGlobalAccessLevel|global/admin
     * displayName|global/admin
     * enabled|global/admin
     * endpointAuthorization|global/admin
     * endpointDiscovery|global/admin
     * endpointDiscoveryRefreshInterval|global/admin
     * endpointIntrospection|global/admin
     * endpointIntrospectionTimeout|global/admin
     * endpointJwks|global/admin
     * endpointJwksRefreshInterval|global/admin
     * endpointToken|global/admin
     * endpointTokenTimeout|global/admin
     * endpointUserinfo|global/admin
     * endpointUserinfoTimeout|global/admin
     * interactiveEnabled|global/admin
     * interactivePromptForExpiredSession|global/admin
     * interactivePromptForNewSession|global/admin
     * issuer|global/admin
     * oauthRole|global/admin
     * resourceServerParseAccessTokenEnabled|global/admin
     * resourceServerRequiredAudience|global/admin
     * resourceServerRequiredIssuer|global/admin
     * resourceServerRequiredScope|global/admin
     * resourceServerRequiredType|global/admin
     * resourceServerValidateAudienceEnabled|global/admin
     * resourceServerValidateIssuerEnabled|global/admin
     * resourceServerValidateScopeEnabled|global/admin
     * resourceServerValidateTypeEnabled|global/admin
     * sempEnabled|global/admin
     * usernameClaimName|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateOauthProfileApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an OAuth Profile object.
     * Replace an OAuth Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientSecret||||x|||x
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * accessLevelGroupsClaimName|global/admin
     * clientId|global/admin
     * clientRedirectUri|global/admin
     * clientRequiredType|global/admin
     * clientScope|global/admin
     * clientSecret|global/admin
     * clientValidateTypeEnabled|global/admin
     * defaultGlobalAccessLevel|global/admin
     * displayName|global/admin
     * enabled|global/admin
     * endpointAuthorization|global/admin
     * endpointDiscovery|global/admin
     * endpointDiscoveryRefreshInterval|global/admin
     * endpointIntrospection|global/admin
     * endpointIntrospectionTimeout|global/admin
     * endpointJwks|global/admin
     * endpointJwksRefreshInterval|global/admin
     * endpointToken|global/admin
     * endpointTokenTimeout|global/admin
     * endpointUserinfo|global/admin
     * endpointUserinfoTimeout|global/admin
     * interactiveEnabled|global/admin
     * interactivePromptForExpiredSession|global/admin
     * interactivePromptForNewSession|global/admin
     * issuer|global/admin
     * oauthRole|global/admin
     * resourceServerParseAccessTokenEnabled|global/admin
     * resourceServerRequiredAudience|global/admin
     * resourceServerRequiredIssuer|global/admin
     * resourceServerRequiredScope|global/admin
     * resourceServerRequiredType|global/admin
     * resourceServerValidateAudienceEnabled|global/admin
     * resourceServerValidateIssuerEnabled|global/admin
     * resourceServerValidateScopeEnabled|global/admin
     * resourceServerValidateTypeEnabled|global/admin
     * sempEnabled|global/admin
     * usernameClaimName|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResponse The OAuth Profile object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceOauthProfile(
        oauthProfileName: string,
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an OAuth Profile object.
     * Replace an OAuth Profile object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * OAuth profiles specify how to securely authenticate to an OAuth provider.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * clientSecret||||x|||x
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * accessLevelGroupsClaimName|global/admin
     * clientId|global/admin
     * clientRedirectUri|global/admin
     * clientRequiredType|global/admin
     * clientScope|global/admin
     * clientSecret|global/admin
     * clientValidateTypeEnabled|global/admin
     * defaultGlobalAccessLevel|global/admin
     * displayName|global/admin
     * enabled|global/admin
     * endpointAuthorization|global/admin
     * endpointDiscovery|global/admin
     * endpointDiscoveryRefreshInterval|global/admin
     * endpointIntrospection|global/admin
     * endpointIntrospectionTimeout|global/admin
     * endpointJwks|global/admin
     * endpointJwksRefreshInterval|global/admin
     * endpointToken|global/admin
     * endpointTokenTimeout|global/admin
     * endpointUserinfo|global/admin
     * endpointUserinfoTimeout|global/admin
     * interactiveEnabled|global/admin
     * interactivePromptForExpiredSession|global/admin
     * interactivePromptForNewSession|global/admin
     * issuer|global/admin
     * oauthRole|global/admin
     * resourceServerParseAccessTokenEnabled|global/admin
     * resourceServerRequiredAudience|global/admin
     * resourceServerRequiredIssuer|global/admin
     * resourceServerRequiredScope|global/admin
     * resourceServerRequiredType|global/admin
     * resourceServerValidateAudienceEnabled|global/admin
     * resourceServerValidateIssuerEnabled|global/admin
     * resourceServerValidateScopeEnabled|global/admin
     * resourceServerValidateTypeEnabled|global/admin
     * sempEnabled|global/admin
     * usernameClaimName|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The OAuth Profile object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceOauthProfileApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfile,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Group Access Level objects.
     * Get a list of Group Access Level objects.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupsResponse The list of Group Access Level objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileAccessLevelGroups(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Group Access Level objects.
     * Get a list of Group Access Level objects.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileAccessLevelGroupsApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Group Access Level object.
     * Create a Group Access Level object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * groupName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupResponse The Group Access Level object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileAccessLevelGroup(
        oauthProfileName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Group Access Level object.
     * Create a Group Access Level object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * groupName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileAccessLevelGroupApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Group Access Level object.
     * Delete a Group Access Level object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileAccessLevelGroup(
        oauthProfileName: string,
        groupName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Group Access Level object.
     * Delete a Group Access Level object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileAccessLevelGroupApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
    ): ApiRequestOptions;

    /**
     * Get a Group Access Level object.
     * Get a Group Access Level object.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupResponse The Group Access Level object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileAccessLevelGroup(
        oauthProfileName: string,
        groupName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Group Access Level object.
     * Get a Group Access Level object.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileAccessLevelGroupApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Group Access Level object.
     * Update a Group Access Level object. Any attribute missing from the request will be left unchanged.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * groupName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupResponse The Group Access Level object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateOauthProfileAccessLevelGroup(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Group Access Level object.
     * Update a Group Access Level object. Any attribute missing from the request will be left unchanged.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * groupName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateOauthProfileAccessLevelGroupApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Group Access Level object.
     * Replace a Group Access Level object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * groupName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupResponse The Group Access Level object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceOauthProfileAccessLevelGroup(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Group Access Level object.
     * Replace a Group Access Level object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * The name of a group as it exists on the OAuth server being used to authenticate SEMP users.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * groupName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation. Requests which include the following attributes require greater access scope/level:
     *
     *
     * Attribute|Access Scope/Level
     * :---|:---:
     * globalAccessLevel|global/admin
     *
     *
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Group Access Level object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceOauthProfileAccessLevelGroupApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroup,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Message VPN Access-Level Exception objects.
     * Get a list of Message VPN Access-Level Exception objects.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse The list of Message VPN Access-Level Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptions(
        oauthProfileName: string,
        groupName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Message VPN Access-Level Exception objects.
     * Get a list of Message VPN Access-Level Exception objects.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionsApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Message VPN Access-Level Exception object.
     * Create a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * groupName|x||x|||
     * msgVpnName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileAccessLevelGroupMsgVpnAccessLevelException(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Message VPN Access-Level Exception object.
     * Create a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * groupName|x||x|||
     * msgVpnName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Message VPN Access-Level Exception object.
     * Delete a Message VPN Access-Level Exception object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileAccessLevelGroupMsgVpnAccessLevelException(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Message VPN Access-Level Exception object.
     * Delete a Message VPN Access-Level Exception object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
    ): ApiRequestOptions;

    /**
     * Get a Message VPN Access-Level Exception object.
     * Get a Message VPN Access-Level Exception object.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileAccessLevelGroupMsgVpnAccessLevelException(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Message VPN Access-Level Exception object.
     * Get a Message VPN Access-Level Exception object.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * groupName|x|||
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Message VPN Access-Level Exception object.
     * Update a Message VPN Access-Level Exception object. Any attribute missing from the request will be left unchanged.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * groupName|x|x||||
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateOauthProfileAccessLevelGroupMsgVpnAccessLevelException(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Message VPN Access-Level Exception object.
     * Update a Message VPN Access-Level Exception object. Any attribute missing from the request will be left unchanged.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * groupName|x|x||||
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Message VPN Access-Level Exception object.
     * Replace a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * groupName|x||x||||
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceOauthProfileAccessLevelGroupMsgVpnAccessLevelException(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Message VPN Access-Level Exception object.
     * Replace a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Message VPN access-level exceptions for members of this group.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * groupName|x||x||||
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param groupName The name of the group.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceOauthProfileAccessLevelGroupMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        groupName: string,
        msgVpnName: string,
        body: OauthProfileAccessLevelGroupMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Allowed Host Value objects.
     * Get a list of Allowed Host Value objects.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowedHost|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAllowedHostsResponse The list of Allowed Host Value objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientAllowedHosts(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileClientAllowedHostsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Allowed Host Value objects.
     * Get a list of Allowed Host Value objects.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowedHost|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientAllowedHostsApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an Allowed Host Value object.
     * Create an Allowed Host Value object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * allowedHost|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Allowed Host Value object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAllowedHostResponse The Allowed Host Value object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileClientAllowedHost(
        oauthProfileName: string,
        body: OauthProfileClientAllowedHost,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAllowedHostResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an Allowed Host Value object.
     * Create an Allowed Host Value object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * allowedHost|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Allowed Host Value object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileClientAllowedHostApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileClientAllowedHost,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an Allowed Host Value object.
     * Delete an Allowed Host Value object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param allowedHost An allowed value for the Host header.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileClientAllowedHost(
        oauthProfileName: string,
        allowedHost: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an Allowed Host Value object.
     * Delete an Allowed Host Value object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param allowedHost An allowed value for the Host header.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileClientAllowedHostApiRequestOptions(
        oauthProfileName: string,
        allowedHost: string,
    ): ApiRequestOptions;

    /**
     * Get an Allowed Host Value object.
     * Get an Allowed Host Value object.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowedHost|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param allowedHost An allowed value for the Host header.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAllowedHostResponse The Allowed Host Value object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientAllowedHost(
        oauthProfileName: string,
        allowedHost: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAllowedHostResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an Allowed Host Value object.
     * Get an Allowed Host Value object.
     *
     * A valid hostname for this broker in OAuth redirects.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * allowedHost|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param allowedHost An allowed value for the Host header.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientAllowedHostApiRequestOptions(
        oauthProfileName: string,
        allowedHost: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Authorization Parameter objects.
     * Get a list of Authorization Parameter objects.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAuthorizationParametersResponse The list of Authorization Parameter objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientAuthorizationParameters(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileClientAuthorizationParametersResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Authorization Parameter objects.
     * Get a list of Authorization Parameter objects.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientAuthorizationParametersApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create an Authorization Parameter object.
     * Create an Authorization Parameter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAuthorizationParameterResponse The Authorization Parameter object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileClientAuthorizationParameter(
        oauthProfileName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAuthorizationParameterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create an Authorization Parameter object.
     * Create an Authorization Parameter object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileClientAuthorizationParameterApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete an Authorization Parameter object.
     * Delete an Authorization Parameter object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileClientAuthorizationParameter(
        oauthProfileName: string,
        authorizationParameterName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete an Authorization Parameter object.
     * Delete an Authorization Parameter object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileClientAuthorizationParameterApiRequestOptions(
        oauthProfileName: string,
        authorizationParameterName: string,
    ): ApiRequestOptions;

    /**
     * Get an Authorization Parameter object.
     * Get an Authorization Parameter object.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAuthorizationParameterResponse The Authorization Parameter object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientAuthorizationParameter(
        oauthProfileName: string,
        authorizationParameterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAuthorizationParameterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get an Authorization Parameter object.
     * Get an Authorization Parameter object.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * authorizationParameterName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientAuthorizationParameterApiRequestOptions(
        oauthProfileName: string,
        authorizationParameterName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update an Authorization Parameter object.
     * Update an Authorization Parameter object. Any attribute missing from the request will be left unchanged.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authorizationParameterName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAuthorizationParameterResponse The Authorization Parameter object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateOauthProfileClientAuthorizationParameter(
        oauthProfileName: string,
        authorizationParameterName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAuthorizationParameterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update an Authorization Parameter object.
     * Update an Authorization Parameter object. Any attribute missing from the request will be left unchanged.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * authorizationParameterName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateOauthProfileClientAuthorizationParameterApiRequestOptions(
        oauthProfileName: string,
        authorizationParameterName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace an Authorization Parameter object.
     * Replace an Authorization Parameter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authorizationParameterName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientAuthorizationParameterResponse The Authorization Parameter object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceOauthProfileClientAuthorizationParameter(
        oauthProfileName: string,
        authorizationParameterName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientAuthorizationParameterResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace an Authorization Parameter object.
     * Replace an Authorization Parameter object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Additional parameters to be passed to the OAuth authorization endpoint.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * authorizationParameterName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param authorizationParameterName The name of the authorization parameter.
     * @param body The Authorization Parameter object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceOauthProfileClientAuthorizationParameterApiRequestOptions(
        oauthProfileName: string,
        authorizationParameterName: string,
        body: OauthProfileClientAuthorizationParameter,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientRequiredClaimsResponse The list of Required Claim objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientRequiredClaims(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileClientRequiredClaimsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientRequiredClaimsApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|x||||
     * clientRequiredClaimValue||x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientRequiredClaimResponse The Required Claim object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileClientRequiredClaim(
        oauthProfileName: string,
        body: OauthProfileClientRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|x||||
     * clientRequiredClaimValue||x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileClientRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileClientRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileClientRequiredClaim(
        oauthProfileName: string,
        clientRequiredClaimName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the ID token.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileClientRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        clientRequiredClaimName: string,
    ): ApiRequestOptions;

    /**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileClientRequiredClaimResponse The Required Claim object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileClientRequiredClaim(
        oauthProfileName: string,
        clientRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileClientRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the ID token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * clientRequiredClaimName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param clientRequiredClaimName The name of the ID token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileClientRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        clientRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Message VPN Access-Level Exception objects.
     * Get a list of Message VPN Access-Level Exception objects.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse The list of Message VPN Access-Level Exception objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileDefaultMsgVpnAccessLevelExceptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileDefaultMsgVpnAccessLevelExceptionsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Message VPN Access-Level Exception objects.
     * Get a list of Message VPN Access-Level Exception objects.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileDefaultMsgVpnAccessLevelExceptionsApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Message VPN Access-Level Exception object.
     * Create a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileDefaultMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileDefaultMsgVpnAccessLevelException(
        oauthProfileName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileDefaultMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Message VPN Access-Level Exception object.
     * Create a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * msgVpnName|x|x||||
     * oauthProfileName|x||x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileDefaultMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Message VPN Access-Level Exception object.
     * Delete a Message VPN Access-Level Exception object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Default message VPN access-level exceptions.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileDefaultMsgVpnAccessLevelException(
        oauthProfileName: string,
        msgVpnName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Message VPN Access-Level Exception object.
     * Delete a Message VPN Access-Level Exception object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Default message VPN access-level exceptions.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileDefaultMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        msgVpnName: string,
    ): ApiRequestOptions;

    /**
     * Get a Message VPN Access-Level Exception object.
     * Get a Message VPN Access-Level Exception object.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileDefaultMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileDefaultMsgVpnAccessLevelException(
        oauthProfileName: string,
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileDefaultMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Message VPN Access-Level Exception object.
     * Get a Message VPN Access-Level Exception object.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * msgVpnName|x|||
     * oauthProfileName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileDefaultMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        msgVpnName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Message VPN Access-Level Exception object.
     * Update a Message VPN Access-Level Exception object. Any attribute missing from the request will be left unchanged.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileDefaultMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateOauthProfileDefaultMsgVpnAccessLevelException(
        oauthProfileName: string,
        msgVpnName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileDefaultMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Message VPN Access-Level Exception object.
     * Update a Message VPN Access-Level Exception object. Any attribute missing from the request will be left unchanged.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x|x||||
     * oauthProfileName|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateOauthProfileDefaultMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        msgVpnName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Message VPN Access-Level Exception object.
     * Replace a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileDefaultMsgVpnAccessLevelExceptionResponse The Message VPN Access-Level Exception object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceOauthProfileDefaultMsgVpnAccessLevelException(
        oauthProfileName: string,
        msgVpnName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileDefaultMsgVpnAccessLevelExceptionResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Message VPN Access-Level Exception object.
     * Replace a Message VPN Access-Level Exception object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * Default message VPN access-level exceptions.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * msgVpnName|x||x||||
     * oauthProfileName|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param msgVpnName The name of the message VPN.
     * @param body The Message VPN Access-Level Exception object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceOauthProfileDefaultMsgVpnAccessLevelExceptionApiRequestOptions(
        oauthProfileName: string,
        msgVpnName: string,
        body: OauthProfileDefaultMsgVpnAccessLevelException,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResourceServerRequiredClaimsResponse The list of Required Claim objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileResourceServerRequiredClaims(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<OauthProfileResourceServerRequiredClaimsResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Required Claim objects.
     * Get a list of Required Claim objects.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileResourceServerRequiredClaimsApiRequestOptions(
        oauthProfileName: string,
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * oauthProfileName|x||x|||
     * resourceServerRequiredClaimName|x|x||||
     * resourceServerRequiredClaimValue||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResourceServerRequiredClaimResponse The Required Claim object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createOauthProfileResourceServerRequiredClaim(
        oauthProfileName: string,
        body: OauthProfileResourceServerRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResourceServerRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Required Claim object.
     * Create a Required Claim object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * oauthProfileName|x||x|||
     * resourceServerRequiredClaimName|x|x||||
     * resourceServerRequiredClaimValue||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param body The Required Claim object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createOauthProfileResourceServerRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        body: OauthProfileResourceServerRequiredClaim,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteOauthProfileResourceServerRequiredClaim(
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Required Claim object.
     * Delete a Required Claim object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * Additional claims to be verified in the access token.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/admin" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteOauthProfileResourceServerRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
    ): ApiRequestOptions;

    /**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns OauthProfileResourceServerRequiredClaimResponse The Required Claim object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getOauthProfileResourceServerRequiredClaim(
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<OauthProfileResourceServerRequiredClaimResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Required Claim object.
     * Get a Required Claim object.
     *
     * Additional claims to be verified in the access token.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * oauthProfileName|x|||
     * resourceServerRequiredClaimName|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.24.
     * @param oauthProfileName The name of the OAuth profile.
     * @param resourceServerRequiredClaimName The name of the access token claim to verify.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getOauthProfileResourceServerRequiredClaimApiRequestOptions(
        oauthProfileName: string,
        resourceServerRequiredClaimName: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * @deprecated
     * Get a System Information object.
     * Get a System Information object.
     *
     * The System Information object provides metadata about the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * platform|||x|
     * sempVersion|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been deprecated since 2.2. /systemInformation was replaced by /about/api.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns SystemInformationResponse The System Information object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getSystemInformation(
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<SystemInformationResponse | SempMetaOnlyResponse>;

    /**
     * @deprecated
     * **used to get the request options without making a http request**
     * Get a System Information object.
     * Get a System Information object.
     *
     * The System Information object provides metadata about the SEMP API.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * platform|||x|
     * sempVersion|||x|
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/none" is required to perform this operation.
     *
     * This has been deprecated since 2.2. /systemInformation was replaced by /about/api.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getSystemInformationApiRequestOptions(
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Get a list of Virtual Hostname objects.
     * Get a list of Virtual Hostname objects.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * virtualHostname|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns VirtualHostnamesResponse The list of Virtual Hostname objects' attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getVirtualHostnames(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): Promise<VirtualHostnamesResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a list of Virtual Hostname objects.
     * Get a list of Virtual Hostname objects.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * virtualHostname|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param count Limit the count of objects in the response. See the documentation for the `count` parameter.
     * @param cursor The cursor, or position, for the next page of objects. See the documentation for the `cursor` parameter.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param where Include in the response only objects where certain conditions are true. See the the documentation for the `where` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getVirtualHostnamesApiRequestOptions(
        count: number,
        cursor?: string,
        opaquePassword?: string,
        where?: Array<string>,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Create a Virtual Hostname object.
     * Create a Virtual Hostname object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * virtualHostname|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns VirtualHostnameResponse The Virtual Hostname object's attributes after being created, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    createVirtualHostname(
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<VirtualHostnameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Create a Virtual Hostname object.
     * Create a Virtual Hostname object. Any attribute missing from the request will be set to its default value. The creation of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Required|Read-Only|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:|:---:|:---:
     * virtualHostname|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    createVirtualHostnameApiRequestOptions(
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Delete a Virtual Hostname object.
     * Delete a Virtual Hostname object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @returns SempMetaOnlyResponse The request metadata.
     */
    deleteVirtualHostname(
        virtualHostname: string,
    ): Promise<SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Delete a Virtual Hostname object.
     * Delete a Virtual Hostname object. The deletion of instances of this object are synchronized to HA mates via config-sync.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    deleteVirtualHostnameApiRequestOptions(
        virtualHostname: string,
    ): ApiRequestOptions;

    /**
     * Get a Virtual Hostname object.
     * Get a Virtual Hostname object.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * virtualHostname|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns VirtualHostnameResponse The Virtual Hostname object's attributes, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    getVirtualHostname(
        virtualHostname: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<VirtualHostnameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Get a Virtual Hostname object.
     * Get a Virtual Hostname object.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Write-Only|Deprecated|Opaque
     * :---|:---:|:---:|:---:|:---:
     * virtualHostname|x|||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-only" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    getVirtualHostnameApiRequestOptions(
        virtualHostname: string,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Update a Virtual Hostname object.
     * Update a Virtual Hostname object. Any attribute missing from the request will be left unchanged.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * virtualHostname|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns VirtualHostnameResponse The Virtual Hostname object's attributes after being updated, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    updateVirtualHostname(
        virtualHostname: string,
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<VirtualHostnameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Update a Virtual Hostname object.
     * Update a Virtual Hostname object. Any attribute missing from the request will be left unchanged.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---
     * virtualHostname|x|x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    updateVirtualHostnameApiRequestOptions(
        virtualHostname: string,
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

    /**
     * Replace a Virtual Hostname object.
     * Replace a Virtual Hostname object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * virtualHostname|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns VirtualHostnameResponse The Virtual Hostname object's attributes after being replaced, and the request metadata.
     * @returns SempMetaOnlyResponse The error response.
     */
    replaceVirtualHostname(
        virtualHostname: string,
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): Promise<VirtualHostnameResponse | SempMetaOnlyResponse>;

    /**
     * **used to get the request options without making a http request**
     * Replace a Virtual Hostname object.
     * Replace a Virtual Hostname object. Any attribute missing from the request will be set to its default value, subject to the exceptions in note 4.
     *
     * A Virtual Hostname is a provisioned object on a message broker that contains a Virtual Hostname to Message VPN mapping.
     *
     * Clients which connect to a global (as opposed to per Message VPN) port and provides this hostname will be directed to its corresponding Message VPN. A case-insentive match is performed on the full client-provided hostname against the configured virtual-hostname.
     *
     * This mechanism is only supported for hostnames provided through the Server Name Indication (SNI) extension of TLS.
     *
     *
     * Attribute|Identifying|Const|Read-Only|Write-Only|Requires-Disable|Deprecated|Opaque
     * :---|:---|:---|:---|:---|:---|:---|:---
     * virtualHostname|x||x||||
     *
     *
     *
     * A SEMP client authorized with a minimum access scope/level of "global/read-write" is required to perform this operation.
     *
     * This has been available since 2.17.
     * @param virtualHostname The virtual hostname.
     * @param body The Virtual Hostname object's attributes.
     * @param opaquePassword Accept opaque attributes in the request or return opaque attributes in the response, encrypted with the specified password. See the documentation for the `opaquePassword` parameter.
     * @param select Include in the response only selected attributes of the object, or exclude from the response selected attributes of the object. See the documentation for the `select` parameter.
     * @returns ApiRequestOptions the request options to fulfill a http request
     */
    replaceVirtualHostnameApiRequestOptions(
        virtualHostname: string,
        body: VirtualHostname,
        opaquePassword?: string,
        select?: Array<string>,
    ): ApiRequestOptions;

}